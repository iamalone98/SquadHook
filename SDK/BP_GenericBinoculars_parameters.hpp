#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GenericBinoculars

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GenericBinoculars.BP_GenericBinoculars_C.ExecuteUbergraph_BP_GenericBinoculars
// 0x0028 (0x0028 - 0x0000)
struct BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQItemStaticInfo*                      CallFunc_GetItemStaticInfo_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewZoom;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CA9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQWeaponStaticInfo*                    K2Node_DynamicCast_AsSQWeapon_Static_Info;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars) == 0x000008, "Wrong alignment on BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars");
static_assert(sizeof(BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars) == 0x000028, "Wrong size on BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars");
static_assert(offsetof(BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars, EntryPoint) == 0x000000, "Member 'BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars, CallFunc_GetItemStaticInfo_ReturnValue) == 0x000008, "Member 'BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars::CallFunc_GetItemStaticInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars, K2Node_Event_bNewZoom) == 0x000010, "Member 'BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars::K2Node_Event_bNewZoom' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars, K2Node_DynamicCast_AsSQWeapon_Static_Info) == 0x000018, "Member 'BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars::K2Node_DynamicCast_AsSQWeapon_Static_Info' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GenericBinoculars_C_ExecuteUbergraph_BP_GenericBinoculars::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GenericBinoculars.BP_GenericBinoculars_C.BlueprintOnZoom
// 0x0001 (0x0001 - 0x0000)
struct BP_GenericBinoculars_C_BlueprintOnZoom final
{
public:
	bool                                          bNewZoom;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericBinoculars_C_BlueprintOnZoom) == 0x000001, "Wrong alignment on BP_GenericBinoculars_C_BlueprintOnZoom");
static_assert(sizeof(BP_GenericBinoculars_C_BlueprintOnZoom) == 0x000001, "Wrong size on BP_GenericBinoculars_C_BlueprintOnZoom");
static_assert(offsetof(BP_GenericBinoculars_C_BlueprintOnZoom, bNewZoom) == 0x000000, "Member 'BP_GenericBinoculars_C_BlueprintOnZoom::bNewZoom' has a wrong offset!");

// Function BP_GenericBinoculars.BP_GenericBinoculars_C.Get Marker Location
// 0x0198 (0x0198 - 0x0000)
struct BP_GenericBinoculars_C_Get_Marker_Location final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CAA[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetOwnerSoldier_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             CallFunc_GetOwnerSoldier_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CAB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0084(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CAC[0x1];                                     // 0x010F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericBinoculars_C_Get_Marker_Location) == 0x000008, "Wrong alignment on BP_GenericBinoculars_C_Get_Marker_Location");
static_assert(sizeof(BP_GenericBinoculars_C_Get_Marker_Location) == 0x000198, "Wrong size on BP_GenericBinoculars_C_Get_Marker_Location");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, ReturnValue) == 0x000000, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, Valid) == 0x00000C, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::Valid' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_GetOwnerSoldier_ReturnValue) == 0x000010, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_GetOwnerSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_GetOwnerSoldier_ReturnValue_1) == 0x000020, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_GetOwnerSoldier_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000028, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_GetCameraLocation_ReturnValue) == 0x000048, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_GetCameraRotation_ReturnValue) == 0x000054, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000060, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00006C, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_LineTraceSingle_OutHit) == 0x000084, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_LineTraceSingle_ReturnValue) == 0x00010C, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_bBlockingHit) == 0x00010D, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_bInitialOverlap) == 0x00010E, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_Time) == 0x000110, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_Distance) == 0x000114, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_ImpactPoint) == 0x000124, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_ImpactNormal) == 0x00013C, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_PhysMat) == 0x000148, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_HitActor) == 0x000150, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_HitComponent) == 0x000158, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_HitBoneName) == 0x000160, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_HitItem) == 0x000168, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_ElementIndex) == 0x00016C, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_FaceIndex) == 0x000170, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_TraceStart) == 0x000174, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_BreakHitResult_TraceEnd) == 0x000180, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_GenericBinoculars_C_Get_Marker_Location, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x00018C, "Member 'BP_GenericBinoculars_C_Get_Marker_Location::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");

}


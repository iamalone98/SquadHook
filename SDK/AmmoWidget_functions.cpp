#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AmmoWidget

#include "Basic.hpp"

#include "AmmoWidget_classes.hpp"
#include "AmmoWidget_parameters.hpp"


namespace SDK
{

// Function AmmoWidget.AmmoWidget_C.ExecuteUbergraph_AmmoWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAmmoWidget_C::ExecuteUbergraph_AmmoWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "ExecuteUbergraph_AmmoWidget");

	Params::AmmoWidget_C_ExecuteUbergraph_AmmoWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AmmoWidget.AmmoWidget_C.MagnificationChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewFOV                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewMagnification                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAmmoWidget_C::MagnificationChanged(float NewFOV, int32 NewMagnification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "MagnificationChanged");

	Params::AmmoWidget_C_MagnificationChanged Parms{};

	Parms.NewFOV = NewFOV;
	Parms.NewMagnification = NewMagnification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AmmoWidget.AmmoWidget_C.OnShowCurrentWeapon
// (Event, Public, BlueprintEvent)

void UAmmoWidget_C::OnShowCurrentWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "OnShowCurrentWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AmmoWidget.AmmoWidget_C.OnShowResourceAmounts
// (Event, Public, BlueprintEvent)

void UAmmoWidget_C::OnShowResourceAmounts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "OnShowResourceAmounts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AmmoWidget.AmmoWidget_C.OnCurrentWeaponChanged
// (Event, Public, BlueprintEvent)

void UAmmoWidget_C::OnCurrentWeaponChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "OnCurrentWeaponChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AmmoWidget.AmmoWidget_C.BPInit
// (Event, Public, BlueprintEvent)

void UAmmoWidget_C::BPInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "BPInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AmmoWidget.AmmoWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAmmoWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AmmoWidget.AmmoWidget_C.UpdateScopeMagnificationText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Magnification                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAmmoWidget_C::UpdateScopeMagnificationText(int32 Magnification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "UpdateScopeMagnificationText");

	Params::AmmoWidget_C_UpdateScopeMagnificationText Parms{};

	Parms.Magnification = Magnification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AmmoWidget.AmmoWidget_C.OnAdsEventDelegate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsStateA                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAmmoWidget_C::OnAdsEventDelegate(bool bIsStateA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "OnAdsEventDelegate");

	Params::AmmoWidget_C_OnAdsEventDelegate Parms{};

	Parms.bIsStateA = bIsStateA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AmmoWidget.AmmoWidget_C.UpdateKeybind
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAmmoWidget_C::UpdateKeybind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "UpdateKeybind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AmmoWidget.AmmoWidget_C.GetShortActionName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Short_Name                                             (Parm, OutParm)

void UAmmoWidget_C::GetShortActionName(class FName InAction, class FText* Short_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AmmoWidget_C", "GetShortActionName");

	Params::AmmoWidget_C_GetShortActionName Parms{};

	Parms.InAction = InAction;

	UObject::ProcessEvent(Func, &Parms);

	if (Short_Name != nullptr)
		*Short_Name = std::move(Parms.Short_Name);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_JoyCurve

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Squad_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_JoyCurve.WBP_JoyCurve_C
// 0x0088 (0x02E8 - 0x0260)
class UWBP_JoyCurve_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             AxisText;                                          // 0x0268(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Slider_C*                            CurveFactorControl;                                // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CurvePreviewMat;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        CurveTypeComboBox;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Slider_C*                            DeadzoneControl;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FinalJoyPreview;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              InvertAxisCheckbox;                                // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CurJoyVal;                                         // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_318C[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   JoyInput;                                          // 0x02A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Curve_MID;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeadJoy;                                           // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_318D[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               FinalOut_MID;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvertAxis;                                        // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_318E[0x3];                                     // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         JoyFactor;                                         // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQJoyStickControls                           Axis;                                              // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQJoystickCurveTypes                         CurveType;                                         // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockModifiers;                                     // 0x02E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WBP_JoyCurve(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void ForceUpdate();
	void BndEvt__DeadzoneControl_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature(float NewParam);
	void BndEvt__W_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature(float NewParam);
	void Construct();
	void BndEvt__ComboBoxString_1105_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__CheckBox_356_K2Node_ComponentBoundEvent_4_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void RefreshMat();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Create_MID();
	void Update_MID();
	class FText GetCurveText();
	class FText GetDeadZoneValText();
	class FText GetSensitivityText();
	void SensitivityPreview(float* Out);
	void PopulateDefaults(const struct FSQJoyStickConfig& SQJoyStickConfig);
	void SaveSettings();
	class FText Get_AxisText_Text_0();
	float Get_Axis_Deadzone();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_JoyCurve_C">();
	}
	static class UWBP_JoyCurve_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_JoyCurve_C>();
	}
};
static_assert(alignof(UWBP_JoyCurve_C) == 0x000008, "Wrong alignment on UWBP_JoyCurve_C");
static_assert(sizeof(UWBP_JoyCurve_C) == 0x0002E8, "Wrong size on UWBP_JoyCurve_C");
static_assert(offsetof(UWBP_JoyCurve_C, UberGraphFrame) == 0x000260, "Member 'UWBP_JoyCurve_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, AxisText) == 0x000268, "Member 'UWBP_JoyCurve_C::AxisText' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, CurveFactorControl) == 0x000270, "Member 'UWBP_JoyCurve_C::CurveFactorControl' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, CurvePreviewMat) == 0x000278, "Member 'UWBP_JoyCurve_C::CurvePreviewMat' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, CurveTypeComboBox) == 0x000280, "Member 'UWBP_JoyCurve_C::CurveTypeComboBox' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, DeadzoneControl) == 0x000288, "Member 'UWBP_JoyCurve_C::DeadzoneControl' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, FinalJoyPreview) == 0x000290, "Member 'UWBP_JoyCurve_C::FinalJoyPreview' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, InvertAxisCheckbox) == 0x000298, "Member 'UWBP_JoyCurve_C::InvertAxisCheckbox' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, CurJoyVal) == 0x0002A0, "Member 'UWBP_JoyCurve_C::CurJoyVal' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, JoyInput) == 0x0002A8, "Member 'UWBP_JoyCurve_C::JoyInput' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, Curve_MID) == 0x0002C0, "Member 'UWBP_JoyCurve_C::Curve_MID' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, DeadJoy) == 0x0002C8, "Member 'UWBP_JoyCurve_C::DeadJoy' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, FinalOut_MID) == 0x0002D0, "Member 'UWBP_JoyCurve_C::FinalOut_MID' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, InvertAxis) == 0x0002D8, "Member 'UWBP_JoyCurve_C::InvertAxis' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, JoyFactor) == 0x0002DC, "Member 'UWBP_JoyCurve_C::JoyFactor' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, Axis) == 0x0002E0, "Member 'UWBP_JoyCurve_C::Axis' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, CurveType) == 0x0002E1, "Member 'UWBP_JoyCurve_C::CurveType' has a wrong offset!");
static_assert(offsetof(UWBP_JoyCurve_C, LockModifiers) == 0x0002E2, "Member 'UWBP_JoyCurve_C::LockModifiers' has a wrong offset!");

}


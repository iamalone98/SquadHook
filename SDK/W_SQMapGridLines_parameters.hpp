#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SQMapGridLines

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GridLinesPerZoomLevel_structs.hpp"


namespace SDK::Params
{

// Function W_SQMapGridLines.W_SQMapGridLines_C.ExecuteUbergraph_W_SQMapGridLines
// 0x00C8 (0x00C8 - 0x0000)
struct W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41C8[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ZoomAmount;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C9[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapGridLinePerZoomLevel_C*         CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_GridNumbers;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_StartingZoom;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41CA[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41CB[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41CC[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGridLinesPerZoomLevel                 CallFunc_Array_Get_Item;                           // 0x0070(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapGridLinePerZoomLevel_C*         K2Node_DynamicCast_AsW_SQMap_Grid_Line_Per_Zoom_Level; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41CD[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines) == 0x000008, "Wrong alignment on W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines");
static_assert(sizeof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines) == 0x0000C8, "Wrong size on W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, EntryPoint) == 0x000000, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, K2Node_CustomEvent_ZoomAmount) == 0x000020, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::K2Node_CustomEvent_ZoomAmount' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_Create_ReturnValue) == 0x000028, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, K2Node_CustomEvent_GridNumbers) == 0x000030, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::K2Node_CustomEvent_GridNumbers' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, K2Node_CustomEvent_StartingZoom) == 0x000038, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::K2Node_CustomEvent_StartingZoom' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_GetChildrenCount_ReturnValue) == 0x000048, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, K2Node_DynamicCast_AsOverlay_Slot) == 0x000050, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::K2Node_DynamicCast_AsOverlay_Slot' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, Temp_int_Variable) == 0x000060, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, Temp_int_Array_Index_Variable) == 0x000064, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_GetChildAt_ReturnValue) == 0x000068, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_Array_Get_Item) == 0x000070, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, K2Node_DynamicCast_AsW_SQMap_Grid_Line_Per_Zoom_Level) == 0x0000A0, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::K2Node_DynamicCast_AsW_SQMap_Grid_Line_Per_Zoom_Level' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A9, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000AC, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x0000B0, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines, K2Node_MakeStruct_LinearColor) == 0x0000B8, "Member 'W_SQMapGridLines_C_ExecuteUbergraph_W_SQMapGridLines::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function W_SQMapGridLines.W_SQMapGridLines_C.UpdateZoom
// 0x0004 (0x0004 - 0x0000)
struct W_SQMapGridLines_C_UpdateZoom final
{
public:
	float                                         ZoomAmount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapGridLines_C_UpdateZoom) == 0x000004, "Wrong alignment on W_SQMapGridLines_C_UpdateZoom");
static_assert(sizeof(W_SQMapGridLines_C_UpdateZoom) == 0x000004, "Wrong size on W_SQMapGridLines_C_UpdateZoom");
static_assert(offsetof(W_SQMapGridLines_C_UpdateZoom, ZoomAmount) == 0x000000, "Member 'W_SQMapGridLines_C_UpdateZoom::ZoomAmount' has a wrong offset!");

// Function W_SQMapGridLines.W_SQMapGridLines_C.InitializeTexture
// 0x000C (0x000C - 0x0000)
struct W_SQMapGridLines_C_InitializeTexture final
{
public:
	struct FVector2D                              GridNumbers;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartingZoom;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapGridLines_C_InitializeTexture) == 0x000004, "Wrong alignment on W_SQMapGridLines_C_InitializeTexture");
static_assert(sizeof(W_SQMapGridLines_C_InitializeTexture) == 0x00000C, "Wrong size on W_SQMapGridLines_C_InitializeTexture");
static_assert(offsetof(W_SQMapGridLines_C_InitializeTexture, GridNumbers) == 0x000000, "Member 'W_SQMapGridLines_C_InitializeTexture::GridNumbers' has a wrong offset!");
static_assert(offsetof(W_SQMapGridLines_C_InitializeTexture, StartingZoom) == 0x000008, "Member 'W_SQMapGridLines_C_InitializeTexture::StartingZoom' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VehicleTableItem

#include "Basic.hpp"

#include "UMG_VehicleTableItem_classes.hpp"
#include "UMG_VehicleTableItem_parameters.hpp"


namespace SDK
{

// Function UMG_VehicleTableItem.UMG_VehicleTableItem_C.Setup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        Param_VehicleImage                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FText                             MainName                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Ticket                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Amphibious                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VehicleTableItem_C::Setup(TSoftObjectPtr<class UTexture2D> Param_VehicleImage, const class FText& MainName, const class FText& Count, const class FText& Time, const class FText& Ticket, bool Amphibious)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VehicleTableItem_C", "Setup");

	Params::UMG_VehicleTableItem_C_Setup Parms{};

	Parms.Param_VehicleImage = Param_VehicleImage;
	Parms.MainName = std::move(MainName);
	Parms.Count = std::move(Count);
	Parms.Time = std::move(Time);
	Parms.Ticket = std::move(Ticket);
	Parms.Amphibious = Amphibious;

	UObject::ProcessEvent(Func, &Parms);
}

}


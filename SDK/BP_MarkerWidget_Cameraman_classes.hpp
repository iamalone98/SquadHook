#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarkerWidget_Cameraman

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MarkerWidget_Cameraman.BP_MarkerWidget_Cameraman_C
// 0x00C0 (0x0340 - 0x0280)
class UBP_MarkerWidget_Cameraman_C final : public USQMapIconWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PlayerWoundedAnim;                                 // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlayerIncapAnim;                                   // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelfPulseAnim;                                     // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Player_Cone_Image;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Player_Image;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               WidgetOverlay;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           Self_Color;                                        // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TeamColor;                                         // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             SquadLeaderImage;                                  // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Medic_Overlay_Image;                               // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Self_Image;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             PlayerImage;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MapAngleAdjust;                                    // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SL_Scale;                                          // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SelfScale;                                         // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Medic_Overlay_Scale;                               // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SoldierScale;                                      // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Medic_Scale;                                       // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             CloseTooltip;                                      // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UTexture2D*                             VehicleImage;                                      // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VehicleScale;                                      // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EnemyColor;                                        // 0x032C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CloseTooltip__DelegateSignature();
	void ExecuteUbergraph_BP_MarkerWidget_Cameraman(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void SetAngle(float InAngle);
	ESlateVisibility GetMarkerVisibility();
	struct FSlateBrush Get_Player_Image_Brush_0();

	void IsSelf(bool* Param_IsSelf) const;
	void IsSelfCameraMan(bool* Param_IsSelfCameraMan) const;
	void IsSameTeam(bool* Param_IsSameTeam) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MarkerWidget_Cameraman_C">();
	}
	static class UBP_MarkerWidget_Cameraman_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MarkerWidget_Cameraman_C>();
	}
};
static_assert(alignof(UBP_MarkerWidget_Cameraman_C) == 0x000008, "Wrong alignment on UBP_MarkerWidget_Cameraman_C");
static_assert(sizeof(UBP_MarkerWidget_Cameraman_C) == 0x000340, "Wrong size on UBP_MarkerWidget_Cameraman_C");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, UberGraphFrame) == 0x000280, "Member 'UBP_MarkerWidget_Cameraman_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, PlayerWoundedAnim) == 0x000288, "Member 'UBP_MarkerWidget_Cameraman_C::PlayerWoundedAnim' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, PlayerIncapAnim) == 0x000290, "Member 'UBP_MarkerWidget_Cameraman_C::PlayerIncapAnim' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, SelfPulseAnim) == 0x000298, "Member 'UBP_MarkerWidget_Cameraman_C::SelfPulseAnim' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, Player_Cone_Image) == 0x0002A0, "Member 'UBP_MarkerWidget_Cameraman_C::Player_Cone_Image' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, Player_Image) == 0x0002A8, "Member 'UBP_MarkerWidget_Cameraman_C::Player_Image' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, WidgetOverlay) == 0x0002B0, "Member 'UBP_MarkerWidget_Cameraman_C::WidgetOverlay' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, Self_Color) == 0x0002B8, "Member 'UBP_MarkerWidget_Cameraman_C::Self_Color' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, TeamColor) == 0x0002C8, "Member 'UBP_MarkerWidget_Cameraman_C::TeamColor' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, SquadLeaderImage) == 0x0002D8, "Member 'UBP_MarkerWidget_Cameraman_C::SquadLeaderImage' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, Medic_Overlay_Image) == 0x0002E0, "Member 'UBP_MarkerWidget_Cameraman_C::Medic_Overlay_Image' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, Self_Image) == 0x0002E8, "Member 'UBP_MarkerWidget_Cameraman_C::Self_Image' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, PlayerImage) == 0x0002F0, "Member 'UBP_MarkerWidget_Cameraman_C::PlayerImage' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, MapAngleAdjust) == 0x0002F8, "Member 'UBP_MarkerWidget_Cameraman_C::MapAngleAdjust' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, SL_Scale) == 0x0002FC, "Member 'UBP_MarkerWidget_Cameraman_C::SL_Scale' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, SelfScale) == 0x000300, "Member 'UBP_MarkerWidget_Cameraman_C::SelfScale' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, Medic_Overlay_Scale) == 0x000304, "Member 'UBP_MarkerWidget_Cameraman_C::Medic_Overlay_Scale' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, SoldierScale) == 0x000308, "Member 'UBP_MarkerWidget_Cameraman_C::SoldierScale' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, Medic_Scale) == 0x00030C, "Member 'UBP_MarkerWidget_Cameraman_C::Medic_Scale' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, CloseTooltip) == 0x000310, "Member 'UBP_MarkerWidget_Cameraman_C::CloseTooltip' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, VehicleImage) == 0x000320, "Member 'UBP_MarkerWidget_Cameraman_C::VehicleImage' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, VehicleScale) == 0x000328, "Member 'UBP_MarkerWidget_Cameraman_C::VehicleScale' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_Cameraman_C, EnemyColor) == 0x00032C, "Member 'UBP_MarkerWidget_Cameraman_C::EnemyColor' has a wrong offset!");

}


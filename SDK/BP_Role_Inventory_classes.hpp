#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Role_Inventory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Role_Inventory.BP_Role_Inventory_C
// 0x0080 (0x02E0 - 0x0260)
class UBP_Role_Inventory_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUniformGridPanel*                      InventoryGrid;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Role_WeaponName;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Weapon_Image;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FSQInventoryWeaponGroupData>    RoleInventory;                                     // 0x0280(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   WeaponName;                                        // 0x0290(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Columns;                                           // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3679[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           RulesetItemsToRemove;                              // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSQInventoryMod>                RulesetItemsToAdd;                                 // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USQRoleSettings*                        RoleReference;                                     // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpdateTimer;                                       // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Role_Inventory(int32 EntryPoint);
	void UpdateStateAndVisibilityEvent();
	void PopulateInventoryUI();
	void AddItemToInventory(const struct FSQInventoryData& InventoryData, int32 Param_Slot, int32 Offset);
	void GetRulesetModifications();
	void ClearWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Role_Inventory_C">();
	}
	static class UBP_Role_Inventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Role_Inventory_C>();
	}
};
static_assert(alignof(UBP_Role_Inventory_C) == 0x000008, "Wrong alignment on UBP_Role_Inventory_C");
static_assert(sizeof(UBP_Role_Inventory_C) == 0x0002E0, "Wrong size on UBP_Role_Inventory_C");
static_assert(offsetof(UBP_Role_Inventory_C, UberGraphFrame) == 0x000260, "Member 'UBP_Role_Inventory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Role_Inventory_C, InventoryGrid) == 0x000268, "Member 'UBP_Role_Inventory_C::InventoryGrid' has a wrong offset!");
static_assert(offsetof(UBP_Role_Inventory_C, Role_WeaponName) == 0x000270, "Member 'UBP_Role_Inventory_C::Role_WeaponName' has a wrong offset!");
static_assert(offsetof(UBP_Role_Inventory_C, Weapon_Image) == 0x000278, "Member 'UBP_Role_Inventory_C::Weapon_Image' has a wrong offset!");
static_assert(offsetof(UBP_Role_Inventory_C, RoleInventory) == 0x000280, "Member 'UBP_Role_Inventory_C::RoleInventory' has a wrong offset!");
static_assert(offsetof(UBP_Role_Inventory_C, WeaponName) == 0x000290, "Member 'UBP_Role_Inventory_C::WeaponName' has a wrong offset!");
static_assert(offsetof(UBP_Role_Inventory_C, Columns) == 0x0002A8, "Member 'UBP_Role_Inventory_C::Columns' has a wrong offset!");
static_assert(offsetof(UBP_Role_Inventory_C, RulesetItemsToRemove) == 0x0002B0, "Member 'UBP_Role_Inventory_C::RulesetItemsToRemove' has a wrong offset!");
static_assert(offsetof(UBP_Role_Inventory_C, RulesetItemsToAdd) == 0x0002C0, "Member 'UBP_Role_Inventory_C::RulesetItemsToAdd' has a wrong offset!");
static_assert(offsetof(UBP_Role_Inventory_C, RoleReference) == 0x0002D0, "Member 'UBP_Role_Inventory_C::RoleReference' has a wrong offset!");
static_assert(offsetof(UBP_Role_Inventory_C, UpdateTimer) == 0x0002D8, "Member 'UBP_Role_Inventory_C::UpdateTimer' has a wrong offset!");

}


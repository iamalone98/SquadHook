#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQRoleSettings

#include "Basic.hpp"

#include "SQVehicleCapability_structs.hpp"
#include "SQRoleTags_structs.hpp"
#include "SQRoleGroup_structs.hpp"
#include "SQRoleVersion_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SQRoleSettings.BP_SQRoleSettings_C
// 0x0068 (0x0200 - 0x0198)
class UBP_SQRoleSettings_C final : public USQRoleSettings
{
public:
	ESQVehicleCapability                          VehicleCapability;                                 // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A27[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<ESQRoleTags>                             Tags;                                              // 0x01A0(0x0050)(Edit, BlueprintVisible)
	TArray<struct FSQRoleVersion>                 RoleVersions;                                      // 0x01F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly)

public:
	void IsConcernedByStrategy(const struct FSQRoleGroupingStrategy& InGroupingStrategy, bool* Param_IsConcernedByStrategy);
	void HasTag(ESQRoleTags In_Tag, bool* Out_Has_Tag);
	void HasTags(TArray<ESQRoleTags>& In_Tags, bool In_All, bool* Out_Has_Tags);
	void GetGroup(ESQRoleGroup* Out_Group);

	void GetRoleEntry(bool* Success, struct FFSQRoleEntry* RoleEntry) const;
	bool CanPlaceRallyPointWithMinimumTeamMate() const;
	bool CanSeeHealthStatus() const;
	bool IsMedic() const;
	bool IsSquadLeader() const;
	void IsRecruit(bool* Out_IsRecruit) const;
	bool CanEnterSeat(class USQVehicleSeatComponent* Seat) const;
	bool TryGetSoldierWithLayer(const class USQLayer* InLayer, TSoftClassPtr<class UClass>* OutSoldier) const;
	void GetRoleDisplayName(class FString* CurrentRoleDisplayName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SQRoleSettings_C">();
	}
	static class UBP_SQRoleSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SQRoleSettings_C>();
	}
};
static_assert(alignof(UBP_SQRoleSettings_C) == 0x000008, "Wrong alignment on UBP_SQRoleSettings_C");
static_assert(sizeof(UBP_SQRoleSettings_C) == 0x000200, "Wrong size on UBP_SQRoleSettings_C");
static_assert(offsetof(UBP_SQRoleSettings_C, VehicleCapability) == 0x000198, "Member 'UBP_SQRoleSettings_C::VehicleCapability' has a wrong offset!");
static_assert(offsetof(UBP_SQRoleSettings_C, Tags) == 0x0001A0, "Member 'UBP_SQRoleSettings_C::Tags' has a wrong offset!");
static_assert(offsetof(UBP_SQRoleSettings_C, RoleVersions) == 0x0001F0, "Member 'UBP_SQRoleSettings_C::RoleVersions' has a wrong offset!");

}


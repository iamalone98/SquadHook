#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ObservationTower_USA_Woodland

#include "Basic.hpp"

#include "BP_Deployable_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ObservationTower_USA_Woodland.BP_ObservationTower_USA_Woodland_C
// 0x0128 (0x0568 - 0x0440)
class ABP_ObservationTower_USA_Woodland_C : public ABP_Deployable_C
{
public:
	class UCapsuleComponent*                      Vaulting_Blocker5;                                 // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Vaulting_Blocker4;                                 // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Vaulting_Blocker3;                                 // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Vaulting_Blocker2;                                 // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Vaulting_Blocker1;                                 // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        VaultingBlocker;                                   // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          NoDeployBox;                                       // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQPainCausingVolumeComponent*          SQPainCausingVolume3;                              // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQPainCausingVolumeComponent*          SQPainCausingVolume5;                              // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQMovementAdjustmentComponent*         SQMovementAdjustment5;                             // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQPainCausingVolumeComponent*          SQPainCausingVolume4;                              // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQMovementAdjustmentComponent*         SQMovementAdjustment4;                             // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQMovementAdjustmentComponent*         SQMovementAdjustment;                              // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQPainCausingVolumeComponent*          SQPainCausingVolume2;                              // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQMovementAdjustmentComponent*         SQMovementAdjustment2;                             // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQPainCausingVolumeComponent*          SQPainCausingVolume1;                              // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQMovementAdjustmentComponent*         SQMovementAdjustment1;                             // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQPainCausingVolumeComponent*          SQPainCausingVolume;                               // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQMovementAdjustmentComponent*         SQMovementAdjustment3;                             // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sandbag_04;                                        // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sandbag_07;                                        // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sandbag_06;                                        // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sandbag_05;                                        // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sandbag_03;                                        // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WoodPlank3;                                        // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WoodPlank2;                                        // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WoodPlank1;                                        // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pallet_v2;                                         // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HescoWatchtower_Mid;                            // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HescoWatchTower_Interior;                       // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HescoWatchTower_Exterior;                       // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Watchtower;                                        // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh21;                                      // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh24;                                      // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh23;                                      // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh22;                                      // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ConstructionBox;                                   // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ObservationTower_USA_Woodland_C">();
	}
	static class ABP_ObservationTower_USA_Woodland_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ObservationTower_USA_Woodland_C>();
	}
};
static_assert(alignof(ABP_ObservationTower_USA_Woodland_C) == 0x000008, "Wrong alignment on ABP_ObservationTower_USA_Woodland_C");
static_assert(sizeof(ABP_ObservationTower_USA_Woodland_C) == 0x000568, "Wrong size on ABP_ObservationTower_USA_Woodland_C");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Vaulting_Blocker5) == 0x000440, "Member 'ABP_ObservationTower_USA_Woodland_C::Vaulting_Blocker5' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Vaulting_Blocker4) == 0x000448, "Member 'ABP_ObservationTower_USA_Woodland_C::Vaulting_Blocker4' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Vaulting_Blocker3) == 0x000450, "Member 'ABP_ObservationTower_USA_Woodland_C::Vaulting_Blocker3' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Vaulting_Blocker2) == 0x000458, "Member 'ABP_ObservationTower_USA_Woodland_C::Vaulting_Blocker2' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Vaulting_Blocker1) == 0x000460, "Member 'ABP_ObservationTower_USA_Woodland_C::Vaulting_Blocker1' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, VaultingBlocker) == 0x000468, "Member 'ABP_ObservationTower_USA_Woodland_C::VaultingBlocker' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, NoDeployBox) == 0x000470, "Member 'ABP_ObservationTower_USA_Woodland_C::NoDeployBox' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQPainCausingVolume3) == 0x000478, "Member 'ABP_ObservationTower_USA_Woodland_C::SQPainCausingVolume3' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQPainCausingVolume5) == 0x000480, "Member 'ABP_ObservationTower_USA_Woodland_C::SQPainCausingVolume5' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQMovementAdjustment5) == 0x000488, "Member 'ABP_ObservationTower_USA_Woodland_C::SQMovementAdjustment5' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQPainCausingVolume4) == 0x000490, "Member 'ABP_ObservationTower_USA_Woodland_C::SQPainCausingVolume4' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQMovementAdjustment4) == 0x000498, "Member 'ABP_ObservationTower_USA_Woodland_C::SQMovementAdjustment4' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQMovementAdjustment) == 0x0004A0, "Member 'ABP_ObservationTower_USA_Woodland_C::SQMovementAdjustment' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQPainCausingVolume2) == 0x0004A8, "Member 'ABP_ObservationTower_USA_Woodland_C::SQPainCausingVolume2' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQMovementAdjustment2) == 0x0004B0, "Member 'ABP_ObservationTower_USA_Woodland_C::SQMovementAdjustment2' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQPainCausingVolume1) == 0x0004B8, "Member 'ABP_ObservationTower_USA_Woodland_C::SQPainCausingVolume1' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQMovementAdjustment1) == 0x0004C0, "Member 'ABP_ObservationTower_USA_Woodland_C::SQMovementAdjustment1' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQPainCausingVolume) == 0x0004C8, "Member 'ABP_ObservationTower_USA_Woodland_C::SQPainCausingVolume' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SQMovementAdjustment3) == 0x0004D0, "Member 'ABP_ObservationTower_USA_Woodland_C::SQMovementAdjustment3' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Sandbag_04) == 0x0004D8, "Member 'ABP_ObservationTower_USA_Woodland_C::Sandbag_04' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Sandbag_07) == 0x0004E0, "Member 'ABP_ObservationTower_USA_Woodland_C::Sandbag_07' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Sandbag_06) == 0x0004E8, "Member 'ABP_ObservationTower_USA_Woodland_C::Sandbag_06' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Sandbag_05) == 0x0004F0, "Member 'ABP_ObservationTower_USA_Woodland_C::Sandbag_05' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Sandbag_03) == 0x0004F8, "Member 'ABP_ObservationTower_USA_Woodland_C::Sandbag_03' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, WoodPlank3) == 0x000500, "Member 'ABP_ObservationTower_USA_Woodland_C::WoodPlank3' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, WoodPlank2) == 0x000508, "Member 'ABP_ObservationTower_USA_Woodland_C::WoodPlank2' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, WoodPlank1) == 0x000510, "Member 'ABP_ObservationTower_USA_Woodland_C::WoodPlank1' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Pallet_v2) == 0x000518, "Member 'ABP_ObservationTower_USA_Woodland_C::Pallet_v2' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SM_HescoWatchtower_Mid) == 0x000520, "Member 'ABP_ObservationTower_USA_Woodland_C::SM_HescoWatchtower_Mid' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SM_HescoWatchTower_Interior) == 0x000528, "Member 'ABP_ObservationTower_USA_Woodland_C::SM_HescoWatchTower_Interior' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, SM_HescoWatchTower_Exterior) == 0x000530, "Member 'ABP_ObservationTower_USA_Woodland_C::SM_HescoWatchTower_Exterior' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, Watchtower) == 0x000538, "Member 'ABP_ObservationTower_USA_Woodland_C::Watchtower' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, StaticMesh21) == 0x000540, "Member 'ABP_ObservationTower_USA_Woodland_C::StaticMesh21' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, StaticMesh24) == 0x000548, "Member 'ABP_ObservationTower_USA_Woodland_C::StaticMesh24' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, StaticMesh23) == 0x000550, "Member 'ABP_ObservationTower_USA_Woodland_C::StaticMesh23' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, StaticMesh22) == 0x000558, "Member 'ABP_ObservationTower_USA_Woodland_C::StaticMesh22' has a wrong offset!");
static_assert(offsetof(ABP_ObservationTower_USA_Woodland_C, ConstructionBox) == 0x000560, "Member 'ABP_ObservationTower_USA_Woodland_C::ConstructionBox' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChangeRoleActionx

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_ChangeRoleActionx.BP_ChangeRoleActionx_C.ExecuteUbergraph_BP_ChangeRoleActionx
// 0x0048 (0x0048 - 0x0000)
struct BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F04[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseRadialMenu_C*                      K2Node_CustomEvent_Radial;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQRoleSettings*                        K2Node_CustomEvent_Role;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISQRearmSource>        K2Node_DynamicCast_AsSQRearm_Source;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F05[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestRoleRearm_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx) == 0x000008, "Wrong alignment on BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx");
static_assert(sizeof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx) == 0x000048, "Wrong size on BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx");
static_assert(offsetof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx, EntryPoint) == 0x000000, "Member 'BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx, K2Node_CustomEvent_Radial) == 0x000008, "Member 'BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx::K2Node_CustomEvent_Radial' has a wrong offset!");
static_assert(offsetof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx, K2Node_CustomEvent_Role) == 0x000010, "Member 'BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx::K2Node_CustomEvent_Role' has a wrong offset!");
static_assert(offsetof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx, K2Node_DynamicCast_AsSQRearm_Source) == 0x000020, "Member 'BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx::K2Node_DynamicCast_AsSQRearm_Source' has a wrong offset!");
static_assert(offsetof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000038, "Member 'BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx, CallFunc_RequestRoleRearm_ReturnValue) == 0x000041, "Member 'BP_ChangeRoleActionx_C_ExecuteUbergraph_BP_ChangeRoleActionx::CallFunc_RequestRoleRearm_ReturnValue' has a wrong offset!");

// Function BP_ChangeRoleActionx.BP_ChangeRoleActionx_C.ChangeRole
// 0x0010 (0x0010 - 0x0000)
struct BP_ChangeRoleActionx_C_ChangeRole final
{
public:
	class UBaseRadialMenu_C*                      Radial;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQRoleSettings*                        Role;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChangeRoleActionx_C_ChangeRole) == 0x000008, "Wrong alignment on BP_ChangeRoleActionx_C_ChangeRole");
static_assert(sizeof(BP_ChangeRoleActionx_C_ChangeRole) == 0x000010, "Wrong size on BP_ChangeRoleActionx_C_ChangeRole");
static_assert(offsetof(BP_ChangeRoleActionx_C_ChangeRole, Radial) == 0x000000, "Member 'BP_ChangeRoleActionx_C_ChangeRole::Radial' has a wrong offset!");
static_assert(offsetof(BP_ChangeRoleActionx_C_ChangeRole, Role) == 0x000008, "Member 'BP_ChangeRoleActionx_C_ChangeRole::Role' has a wrong offset!");

}


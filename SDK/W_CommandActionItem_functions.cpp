#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CommandActionItem

#include "Basic.hpp"

#include "W_CommandActionItem_classes.hpp"
#include "W_CommandActionItem_parameters.hpp"


namespace SDK
{

// Function W_CommandActionItem.W_CommandActionItem_C.Clicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UW_CommandActionItem_C::Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Created Control Widget__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_Command_ActionControl_C*       Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandActionItem_C::Created_Control_Widget__DelegateSignature(class UW_Command_ActionControl_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Created Control Widget__DelegateSignature");

	Params::W_CommandActionItem_C_Created_Control_Widget__DelegateSignature Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandActionItem.W_CommandActionItem_C.ExecuteUbergraph_W_CommandActionItem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandActionItem_C::ExecuteUbergraph_W_CommandActionItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "ExecuteUbergraph_W_CommandActionItem");

	Params::W_CommandActionItem_C_ExecuteUbergraph_W_CommandActionItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Fail Message
// (BlueprintCallable, BlueprintEvent)

void UW_CommandActionItem_C::Fail_Message()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Fail Message");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Start Button Cooldown
// (BlueprintCallable, BlueprintEvent)

void UW_CommandActionItem_C::Start_Button_Cooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Start Button Cooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Event Control Widget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_Command_ActionControl_C*       Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandActionItem_C::Event_Control_Widget(class UW_Command_ActionControl_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Event Control Widget");

	Params::W_CommandActionItem_C_Event_Control_Widget Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_CommandActionItem_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandActionItem.W_CommandActionItem_C.BndEvt__Button_Main_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_CommandActionItem_C::BndEvt__Button_Main_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "BndEvt__Button_Main_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandActionItem_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Tick");

	Params::W_CommandActionItem_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Update State
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_CommandActionItem_C::Update_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Update State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Update Color
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Faded                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_CommandActionItem_C::Update_Color(bool Faded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Update Color");

	Params::W_CommandActionItem_C_Update_Color Parms{};

	Parms.Faded = Faded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Get State
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESQCommandOptionState                   State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   State_Time                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   State_Percent                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Locked                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Category_Time                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Category_Percent                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandActionItem_C::Get_State(ESQCommandOptionState* State, float* State_Time, float* State_Percent, bool* Locked, float* Category_Time, float* Category_Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Get State");

	Params::W_CommandActionItem_C_Get_State Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;

	if (State_Time != nullptr)
		*State_Time = Parms.State_Time;

	if (State_Percent != nullptr)
		*State_Percent = Parms.State_Percent;

	if (Locked != nullptr)
		*Locked = Parms.Locked;

	if (Category_Time != nullptr)
		*Category_Time = Parms.Category_Time;

	if (Category_Percent != nullptr)
		*Category_Percent = Parms.Category_Percent;
}


// Function W_CommandActionItem.W_CommandActionItem_C.Get Category Cooldown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Locked                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Remaining                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandActionItem_C::Get_Category_Cooldown(bool* Locked, float* Remaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Get Category Cooldown");

	Params::W_CommandActionItem_C_Get_Category_Cooldown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Locked != nullptr)
		*Locked = Parms.Locked;

	if (Remaining != nullptr)
		*Remaining = Parms.Remaining;
}


// Function W_CommandActionItem.W_CommandActionItem_C.Get Tooltip Widget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_CommandActionItem_C::Get_Tooltip_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Get Tooltip Widget");

	Params::W_CommandActionItem_C_Get_Tooltip_Widget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_CommandActionItem.W_CommandActionItem_C.Get Traced Map Location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Zero                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Local                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandActionItem_C::Get_Traced_Map_Location(struct FVector* Zero, struct FVector* Local)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Get Traced Map Location");

	Params::W_CommandActionItem_C_Get_Traced_Map_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Zero != nullptr)
		*Zero = std::move(Parms.Zero);

	if (Local != nullptr)
		*Local = std::move(Parms.Local);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Auto Spawn Action
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_CommandActionItem_C::Auto_Spawn_Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Auto Spawn Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_CommandActionItem.W_CommandActionItem_C.Get Pre Placement Widget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UW_CommandPrePlacement_C*         Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CommandActionItem_C::Get_Pre_Placement_Widget(class UW_CommandPrePlacement_C** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Get Pre Placement Widget");

	Params::W_CommandActionItem_C_Get_Pre_Placement_Widget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function W_CommandActionItem.W_CommandActionItem_C.Remove Other Pending Actions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_CommandActionItem_C::Remove_Other_Pending_Actions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CommandActionItem_C", "Remove Other Pending Actions");

	UObject::ProcessEvent(Func, nullptr);
}

}


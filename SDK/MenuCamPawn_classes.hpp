#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuCamPawn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "MenuCameraScreen_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MenuCamPawn.MenuCamPawn_C
// 0x0078 (0x0300 - 0x0288)
class AMenuCamPawn_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Menu_Cam_Moving;                                   // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AB[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Cam_Lerp;                                          // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cam_Lerp_Duration;                                 // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AC[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMenuCamera_C*                          Move_To_Cam;                                       // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Last_Camera_Transform;                             // 0x02B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Last_FOV;                                          // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AD[0x4];                                     // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMenuCamera_C*>                  Menu_Cameras;                                      // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	EMenuCameraScreen                             Current_Camera;                                    // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MenuCamPawn(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void OnTeamChange(int32 PreviousTeam);
	void Animate_Move();
	void Stop_Menu_Camera_Movement();
	void Find_Menu_Cameras();
	void Move_Camera(EMenuCameraScreen New_Camera, bool Force);

	int32 GetTeamId() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MenuCamPawn_C">();
	}
	static class AMenuCamPawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMenuCamPawn_C>();
	}
};
static_assert(alignof(AMenuCamPawn_C) == 0x000010, "Wrong alignment on AMenuCamPawn_C");
static_assert(sizeof(AMenuCamPawn_C) == 0x000300, "Wrong size on AMenuCamPawn_C");
static_assert(offsetof(AMenuCamPawn_C, UberGraphFrame) == 0x000288, "Member 'AMenuCamPawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMenuCamPawn_C, Camera) == 0x000290, "Member 'AMenuCamPawn_C::Camera' has a wrong offset!");
static_assert(offsetof(AMenuCamPawn_C, Menu_Cam_Moving) == 0x000298, "Member 'AMenuCamPawn_C::Menu_Cam_Moving' has a wrong offset!");
static_assert(offsetof(AMenuCamPawn_C, Cam_Lerp) == 0x00029C, "Member 'AMenuCamPawn_C::Cam_Lerp' has a wrong offset!");
static_assert(offsetof(AMenuCamPawn_C, Cam_Lerp_Duration) == 0x0002A0, "Member 'AMenuCamPawn_C::Cam_Lerp_Duration' has a wrong offset!");
static_assert(offsetof(AMenuCamPawn_C, Move_To_Cam) == 0x0002A8, "Member 'AMenuCamPawn_C::Move_To_Cam' has a wrong offset!");
static_assert(offsetof(AMenuCamPawn_C, Last_Camera_Transform) == 0x0002B0, "Member 'AMenuCamPawn_C::Last_Camera_Transform' has a wrong offset!");
static_assert(offsetof(AMenuCamPawn_C, Last_FOV) == 0x0002E0, "Member 'AMenuCamPawn_C::Last_FOV' has a wrong offset!");
static_assert(offsetof(AMenuCamPawn_C, Menu_Cameras) == 0x0002E8, "Member 'AMenuCamPawn_C::Menu_Cameras' has a wrong offset!");
static_assert(offsetof(AMenuCamPawn_C, Current_Camera) == 0x0002F8, "Member 'AMenuCamPawn_C::Current_Camera' has a wrong offset!");

}


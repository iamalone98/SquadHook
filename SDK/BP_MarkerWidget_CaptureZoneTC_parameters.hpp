#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarkerWidget_CaptureZoneTC

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC
// 0x01C0 (0x01C0 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4701[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4702[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_UniformScale;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4703[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4704[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4705[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetNumGridLines_ReturnValue;              // 0x00C8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMapBoundsScale_ReturnValue;            // 0x00D0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CallFunc_GetWorldBounds_ReturnValue;               // 0x00D8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FVector2D                              CallFunc_WorldToMapLocation_OutMapLocation;        // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WorldToMapLocation_ReturnValue;           // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4706[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MapLocationToGridCoordinateString_ReturnValue; // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4707[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core_1;                  // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Cap_Can_Cap;                          // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4708[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Get_World_Distance_to_Pixel_Distance_Pixel; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4709[0x1];                                     // 0x016B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_470A[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470B[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0198(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        K2Node_CustomEvent_Menu_1;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        K2Node_CustomEvent_Menu;                           // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC) == 0x0001C0, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, EntryPoint) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, Temp_bool_Variable) == 0x000004, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, Temp_byte_Variable) == 0x000005, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, Temp_byte_Variable_1) == 0x000006, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_IsValid_ReturnValue) == 0x000007, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_IsValid_ReturnValue_1) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_IsValid_ReturnValue_2) == 0x00001C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_Event_MyGeometry) == 0x000020, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_Event_InDeltaTime) == 0x000058, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_Event_UniformScale) == 0x00005C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_Event_UniformScale' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_TextIsEmpty_ReturnValue) == 0x000060, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GetOwningPlayer_ReturnValue) == 0x000068, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000070, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000080, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GetHUD_ReturnValue) == 0x000088, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_DynamicCast_AsBPI_HUD) == 0x000090, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Get_Map_Core_Map_Core) == 0x0000A8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B0, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x0000BC, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GetNumGridLines_ReturnValue) == 0x0000C8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GetNumGridLines_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GetMapBoundsScale_ReturnValue) == 0x0000D0, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GetMapBoundsScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GetWorldBounds_ReturnValue) == 0x0000D8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GetWorldBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_WorldToMapLocation_OutMapLocation) == 0x0000EC, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_WorldToMapLocation_OutMapLocation' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_WorldToMapLocation_ReturnValue) == 0x0000F4, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_WorldToMapLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_MapLocationToGridCoordinateString_ReturnValue) == 0x0000F8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_MapLocationToGridCoordinateString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GetHUD_ReturnValue_1) == 0x000108, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_DynamicCast_AsBPI_HUD_1) == 0x000110, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Get_Map_Core_Map_Core_1) == 0x000128, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Get_Map_Core_Map_Core_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_MapRangeClamped_ReturnValue) == 0x000130, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000134, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_Select_Default) == 0x000135, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Can_Cap_Can_Cap) == 0x000136, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Can_Cap_Can_Cap' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_IsValid_ReturnValue_3) == 0x000137, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GetActorBounds_Origin) == 0x000138, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GetActorBounds_BoxExtent) == 0x000144, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_BreakVector_X) == 0x000150, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_BreakVector_Y) == 0x000154, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_BreakVector_Z) == 0x000158, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00015C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000160, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Get_World_Distance_to_Pixel_Distance_Pixel) == 0x000164, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Get_World_Distance_to_Pixel_Distance_Pixel' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000168, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_BooleanAND_ReturnValue) == 0x000169, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_BooleanAND_ReturnValue_1) == 0x00016A, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00016C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000170, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Round_ReturnValue) == 0x000174, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Percent_IntInt_ReturnValue) == 0x000178, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_PlayAnimation_ReturnValue) == 0x000180, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000188, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00018C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000190, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000191, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_Not_PreBool_ReturnValue_1) == 0x000192, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_BooleanAND_ReturnValue_2) == 0x000193, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_MakeArray_Array) == 0x000198, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001A8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_CustomEvent_Menu_1) == 0x0001B0, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_CustomEvent_Menu_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC, K2Node_CustomEvent_Menu) == 0x0001B8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC::K2Node_CustomEvent_Menu' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Stop Timer Update Hex
// 0x0008 (0x0008 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Stop_Timer_Update_Hex final
{
public:
	class UUMG_MenuBase_C*                        Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Stop_Timer_Update_Hex) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Stop_Timer_Update_Hex");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Stop_Timer_Update_Hex) == 0x000008, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Stop_Timer_Update_Hex");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Stop_Timer_Update_Hex, Menu) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Stop_Timer_Update_Hex::Menu' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Start Timer Update Hex
// 0x0008 (0x0008 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Start_Timer_Update_Hex final
{
public:
	class UUMG_MenuBase_C*                        Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Start_Timer_Update_Hex) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Start_Timer_Update_Hex");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Start_Timer_Update_Hex) == 0x000008, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Start_Timer_Update_Hex");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Start_Timer_Update_Hex, Menu) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Start_Timer_Update_Hex::Menu' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.OnScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_OnScaleChanged final
{
public:
	float                                         UniformScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_OnScaleChanged) == 0x000004, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_OnScaleChanged");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_OnScaleChanged) == 0x000004, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_OnScaleChanged");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_OnScaleChanged, UniformScale) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_OnScaleChanged::UniformScale' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Tick) == 0x000004, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Tick");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Tick) == 0x00003C, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Tick");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Tick, MyGeometry) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Widget
// 0x0003 (0x0003 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Update_Widget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_POI_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Update_Widget) == 0x000001, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Update_Widget");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Update_Widget) == 0x000003, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Update_Widget");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Widget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Widget, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Widget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Widget, CallFunc_Get_POI_ReturnValue) == 0x000002, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Widget::CallFunc_Get_POI_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Hex Color
// 0x00EC (0x00EC - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color final
{
public:
	struct FLinearColor                           L_Color;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Point_of_Interest;                               // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470C[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_470F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4710[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Nearby_Zones_Team_1_Nearby;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Nearby_Zones_Team_2_Nearby;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4711[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_4;                           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Friendly;                       // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Enemy;                          // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Neutral;                        // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4712[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAdminCamera_ReturnValue;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Friendly_1;                     // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Enemy_1;                        // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Neutral_1;                      // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4713[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_3;                   // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color) == 0x000004, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color) == 0x0000EC, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, L_Color) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::L_Color' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, L_Point_of_Interest) == 0x000010, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::L_Point_of_Interest' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_bool_Variable) == 0x000011, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_int_Variable) == 0x000014, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_bool_Variable_1) == 0x000018, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_float_Variable) == 0x00001C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_float_Variable_1) == 0x000020, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_bool_Variable_2) == 0x000024, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_float_Variable_2) == 0x000028, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_float_Variable_3) == 0x00002C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_bool_Variable_3) == 0x000030, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_float_Variable_4) == 0x000034, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_float_Variable_5) == 0x000038, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_bool_Variable_4) == 0x00003C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_float_Variable_6) == 0x000040, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, Temp_float_Variable_7) == 0x000044, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_Nearby_Zones_Team_1_Nearby) == 0x000048, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_Nearby_Zones_Team_1_Nearby' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_Nearby_Zones_Team_2_Nearby) == 0x000049, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_Nearby_Zones_Team_2_Nearby' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, K2Node_Select_Default) == 0x00004C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, K2Node_Select_Default_1) == 0x000050, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, K2Node_MakeStruct_LinearColor) == 0x000054, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, K2Node_Select_Default_2) == 0x000064, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, K2Node_Select_Default_3) == 0x000068, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, K2Node_Select_Default_4) == 0x00006C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_Get_Owner_Friendly) == 0x00006D, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_Get_Owner_Friendly' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_Get_Owner_Enemy) == 0x00006E, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_Get_Owner_Enemy' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_Get_Owner_Neutral) == 0x00006F, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_Get_Owner_Neutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_SelectColor_ReturnValue) == 0x000074, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_SelectColor_ReturnValue_1) == 0x000084, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, K2Node_MakeStruct_LinearColor_1) == 0x000094, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, K2Node_MakeStruct_LinearColor_2) == 0x0000A4, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_IsAdminCamera_ReturnValue) == 0x0000B4, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_IsAdminCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_Get_Owner_Friendly_1) == 0x0000B5, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_Get_Owner_Friendly_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_Get_Owner_Enemy_1) == 0x0000B6, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_Get_Owner_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_Get_Owner_Neutral_1) == 0x0000B7, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_Get_Owner_Neutral_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_BooleanOR_ReturnValue) == 0x0000B8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_SelectColor_ReturnValue_2) == 0x0000BC, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, CallFunc_SelectColor_ReturnValue_3) == 0x0000CC, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color, K2Node_MakeStruct_LinearColor_3) == 0x0000DC, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Hex_Color::K2Node_MakeStruct_LinearColor_3' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Capture Bar
// 0x0030 (0x0030 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Captor_Friendly;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Captor_Enemy;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Captor_Neutral;                       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Owner_Friendly;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Enemy;                          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Neutral;                        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar) == 0x000004, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar) == 0x000030, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, Temp_bool_Variable) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, Temp_byte_Variable) == 0x000001, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, Temp_byte_Variable_1) == 0x000002, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000003, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000004, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, K2Node_Select_Default) == 0x000007, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_Get_Captor_Friendly) == 0x000009, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_Get_Captor_Friendly' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_Get_Captor_Enemy) == 0x00000A, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_Get_Captor_Enemy' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_Get_Captor_Neutral) == 0x00000B, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_Get_Captor_Neutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_SelectColor_ReturnValue) == 0x00000C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_Get_Owner_Friendly) == 0x00001C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_Get_Owner_Friendly' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_Get_Owner_Enemy) == 0x00001D, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_Get_Owner_Enemy' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_Get_Owner_Neutral) == 0x00001E, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_Get_Owner_Neutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_BooleanAND_ReturnValue_2) == 0x00001F, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar, CallFunc_SelectColor_ReturnValue_1) == 0x000020, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Capture_Bar::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Same Team
// 0x000C (0x000C - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team final
{
public:
	bool                                          Same;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4714[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team) == 0x000004, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team) == 0x00000C, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team, Same) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team::Same' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Can Cap
// 0x0030 (0x0030 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Can_Cap final
{
public:
	class ATC_HexZone_C*                          Zone;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Self_Team;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_Can_Cap;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4715[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4716[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCanTeamCapture_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Can_Cap");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap) == 0x000030, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Can_Cap");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, Zone) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::Zone' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, Self_Team) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::Self_Team' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, Param_Can_Cap) == 0x000009, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::Param_Can_Cap' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, Temp_int_Variable) == 0x00000C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, Temp_int_Variable_1) == 0x000010, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, Temp_int_Variable_2) == 0x000014, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, Temp_int_Variable_3) == 0x000018, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, Temp_bool_Variable) == 0x00001C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, K2Node_Select_Default) == 0x000020, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, K2Node_Select_Default_1) == 0x000024, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, CallFunc_Conv_IntToByte_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Can_Cap, CallFunc_GetCanTeamCapture_ReturnValue) == 0x000029, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Can_Cap::CallFunc_GetCanTeamCapture_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Anchor Visual
// 0x003C (0x003C - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4717[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual) == 0x000004, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual) == 0x00003C, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual, Temp_bool_Variable) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual, Temp_struct_Variable) == 0x000004, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual, Temp_struct_Variable_1) == 0x000014, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual, CallFunc_GetTeam_ReturnValue) == 0x000024, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual, CallFunc_Conv_IntToByte_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual, CallFunc_IsVisible_ReturnValue) == 0x000029, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00002B, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual, K2Node_Select_Default) == 0x00002C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Anchor_Visual::K2Node_Select_Default' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Hex Zone
// 0x0050 (0x0050 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4718[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	TArray<class ATC_HexZone_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4719[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATC_HexZone_C*                          CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone) == 0x000050, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000049, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Zone::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Nearby Zones
// 0x0005 (0x0005 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones final
{
public:
	bool                                          Team_1_Nearby;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Team_2_Nearby;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones) == 0x000001, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones) == 0x000005, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones, Team_1_Nearby) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones::Team_1_Nearby' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones, Team_2_Nearby) == 0x000001, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones::Team_2_Nearby' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000003, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000004, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Frontline
// 0x0108 (0x0108 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline final
{
public:
	class ATC_HexZone_C*                          Directional_Hex_Zone;                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Edge_Index;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471B[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Same_Team_Same;                       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471C[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471D[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471E[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471F[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4720[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4721[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_2;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4722[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATC_HexZone_C*                          CallFunc_Array_Get_Item_3;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4723[0x1];                                     // 0x00F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline) == 0x000108, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Directional_Hex_Zone) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Directional_Hex_Zone' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Edge_Index) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Edge_Index' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Temp_bool_Variable) == 0x00000C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Temp_float_Variable) == 0x000010, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Get_Same_Team_Same) == 0x00002C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Get_Same_Team_Same' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002D, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00002E, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_BooleanAND_ReturnValue) == 0x00002F, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Conv_IntToByte_ReturnValue) == 0x000030, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000031, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Temp_byte_Variable) == 0x000040, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000041, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000042, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000050, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_BooleanAND_ReturnValue_1) == 0x000051, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_BooleanAND_ReturnValue_2) == 0x000052, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000054, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_BooleanAND_ReturnValue_3) == 0x000058, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000059, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, K2Node_Select_Default) == 0x00005C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_GetActorForwardVector_ReturnValue) == 0x000060, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_RotateAngleAxis_ReturnValue) == 0x00006C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Temp_byte_Variable_1) == 0x000078, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x00007C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Temp_bool_Variable_1) == 0x000088, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, K2Node_Select_Default_1) == 0x000098, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000099, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00009C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_SelectColor_ReturnValue) == 0x0000A8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_SelectColor_ReturnValue_1) == 0x0000B8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Array_Get_Item_3) == 0x0000C8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D4, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, Temp_int_Loop_Counter_Variable_1) == 0x0000E0, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x0000E4, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000F5, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_BooleanAND_ReturnValue_4) == 0x0000F6, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F8, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Array_Length_ReturnValue_1) == 0x0000FC, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline, CallFunc_Less_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Frontline::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Owner
// 0x0018 (0x0018 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Get_Owner final
{
public:
	class ATC_HexZone_C*                          Zone;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Friendly;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Neutral;                                           // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4724[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Get_Owner");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner) == 0x000018, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Get_Owner");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, Zone) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::Zone' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, Friendly) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::Friendly' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, Enemy) == 0x000009, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::Enemy' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, Neutral) == 0x00000A, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::Neutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, CallFunc_GetTeam_ReturnValue) == 0x00000C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, CallFunc_Not_PreBool_ReturnValue_1) == 0x000014, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Owner, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Owner::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Captor
// 0x0018 (0x0018 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Get_Captor final
{
public:
	class ATC_HexZone_C*                          Zone;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Friendly;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Neutral;                                           // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4725[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Get_Captor");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor) == 0x000018, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Get_Captor");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor, Zone) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Captor::Zone' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor, Friendly) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Captor::Friendly' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor, Enemy) == 0x000009, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Captor::Enemy' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor, Neutral) == 0x00000A, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Captor::Neutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor, CallFunc_GetTeam_ReturnValue) == 0x00000C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Captor::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Captor::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Captor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Captor::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Captor, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Captor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Can Cap Team
// 0x0018 (0x0018 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team final
{
public:
	class ATC_HexZone_C*                          Zone;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Friendly;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Neutral;                                           // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4726[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team) == 0x000018, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team, Zone) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team::Zone' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team, Friendly) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team::Friendly' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team, Enemy) == 0x000009, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team::Enemy' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team, Neutral) == 0x00000A, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team::Neutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team, CallFunc_GetTeam_ReturnValue) == 0x00000C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Hex Owning Team
// 0x0001 (0x0001 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Owning_Team final
{
public:
	uint8                                         Param_OwningTeam;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Owning_Team) == 0x000001, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Owning_Team");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Owning_Team) == 0x000001, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Owning_Team");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Owning_Team, Param_OwningTeam) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Owning_Team::Param_OwningTeam' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Hex Text
// 0x0058 (0x0058 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4727[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text) == 0x000058, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text, Temp_bool_Variable) == 0x000018, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text, CallFunc_Left_ReturnValue) == 0x000020, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text, K2Node_Select_Default) == 0x000030, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get POI
// 0x000D (0x000D - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Get_POI final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Friendly;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Enemy;                          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Neutral;                        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Can_Cap_Can_Cap;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Can_Cap_Can_Cap_1;                        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Friendly_1;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Enemy_1;                        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Neutral_1;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI) == 0x000001, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Get_POI");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI) == 0x00000D, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Get_POI");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_Get_Owner_Friendly) == 0x000001, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_Get_Owner_Friendly' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_Get_Owner_Enemy) == 0x000002, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_Get_Owner_Enemy' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_Get_Owner_Neutral) == 0x000003, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_Get_Owner_Neutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_Can_Cap_Can_Cap) == 0x000004, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_Can_Cap_Can_Cap' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_Can_Cap_Can_Cap_1) == 0x000007, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_Can_Cap_Can_Cap_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_Get_Owner_Friendly_1) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_Get_Owner_Friendly_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_Get_Owner_Enemy_1) == 0x000009, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_Get_Owner_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_Get_Owner_Neutral_1) == 0x00000A, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_Get_Owner_Neutral_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Get_POI, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Get_POI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Visibility from Save Data
// 0x0018 (0x0018 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4728[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data) == 0x000018, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data, Temp_bool_Variable) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data, Temp_byte_Variable) == 0x000001, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data, Temp_byte_Variable_1) == 0x000002, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data, K2Node_Select_Default) == 0x000010, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Visibility_from_Save_Data::K2Node_Select_Default' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Bind BPHUD Events
// 0x0040 (0x0040 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events final
{
public:
	TDelegate<void(class UUMG_MenuBase_C* Menu)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UUMG_MenuBase_C* Menu)>  K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HUD_C*                              K2Node_DynamicCast_AsBP_HUD;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events) == 0x000008, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events) == 0x000040, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events, CallFunc_GetHUD_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events, K2Node_DynamicCast_AsBP_HUD) == 0x000030, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events::K2Node_DynamicCast_AsBP_HUD' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Bind_BPHUD_Events::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Touching Start
// 0x0010 (0x0010 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Get_Hex_Owning_Team_OwningTeam;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Owner_Friendly;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Enemy;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Neutral;                        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start) == 0x000004, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start) == 0x000010, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, Temp_bool_Variable) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, Temp_byte_Variable) == 0x000001, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, Temp_byte_Variable_1) == 0x000002, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, CallFunc_Get_Hex_Owning_Team_OwningTeam) == 0x000003, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::CallFunc_Get_Hex_Owning_Team_OwningTeam' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, CallFunc_Get_Owner_Friendly) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::CallFunc_Get_Owner_Friendly' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, CallFunc_Get_Owner_Enemy) == 0x000009, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::CallFunc_Get_Owner_Enemy' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, CallFunc_Get_Owner_Neutral) == 0x00000A, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::CallFunc_Get_Owner_Neutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, CallFunc_Array_Get_Item) == 0x00000D, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start, K2Node_Select_Default) == 0x00000E, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Touching_Start::K2Node_Select_Default' has a wrong offset!");

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Protected Visibility
// 0x0018 (0x0018 - 0x0000)
struct BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4729[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Friendly;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Enemy;                          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Owner_Neutral;                        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Nearby_Zones_Team_1_Nearby;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Nearby_Zones_Team_2_Nearby;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Protected_By_Neighbours_Protected;    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility) == 0x000004, "Wrong alignment on BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility");
static_assert(sizeof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility) == 0x000018, "Wrong size on BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, Temp_bool_Variable) == 0x000000, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, Temp_byte_Variable) == 0x000001, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, Temp_byte_Variable_1) == 0x000002, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, Temp_int_Variable) == 0x000004, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, Temp_bool_Variable_1) == 0x000008, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, CallFunc_Get_Owner_Friendly) == 0x000009, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::CallFunc_Get_Owner_Friendly' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, CallFunc_Get_Owner_Enemy) == 0x00000A, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::CallFunc_Get_Owner_Enemy' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, CallFunc_Get_Owner_Neutral) == 0x00000B, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::CallFunc_Get_Owner_Neutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, CallFunc_Nearby_Zones_Team_1_Nearby) == 0x00000C, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::CallFunc_Nearby_Zones_Team_1_Nearby' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, CallFunc_Nearby_Zones_Team_2_Nearby) == 0x00000D, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::CallFunc_Nearby_Zones_Team_2_Nearby' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, K2Node_Select_Default) == 0x00000E, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, CallFunc_Get_Protected_By_Neighbours_Protected) == 0x00000F, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::CallFunc_Get_Protected_By_Neighbours_Protected' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, CallFunc_BooleanOR_ReturnValue_1) == 0x000012, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, CallFunc_BooleanAND_ReturnValue_1) == 0x000013, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility, K2Node_Select_Default_1) == 0x000014, "Member 'BP_MarkerWidget_CaptureZoneTC_C_Update_Protected_Visibility::K2Node_Select_Default_1' has a wrong offset!");

}


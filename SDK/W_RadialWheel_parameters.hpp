#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RadialWheel

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_RadialWheel.W_RadialWheel_C.CenterHoverChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct W_RadialWheel_C_CenterHoverChanged__DelegateSignature final
{
public:
	bool                                          bCenterHovered;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RadialWheel_C_CenterHoverChanged__DelegateSignature) == 0x000001, "Wrong alignment on W_RadialWheel_C_CenterHoverChanged__DelegateSignature");
static_assert(sizeof(W_RadialWheel_C_CenterHoverChanged__DelegateSignature) == 0x000001, "Wrong size on W_RadialWheel_C_CenterHoverChanged__DelegateSignature");
static_assert(offsetof(W_RadialWheel_C_CenterHoverChanged__DelegateSignature, bCenterHovered) == 0x000000, "Member 'W_RadialWheel_C_CenterHoverChanged__DelegateSignature::bCenterHovered' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.ExecuteUbergraph_W_RadialWheel
// 0x0068 (0x0068 - 0x0000)
struct W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F37[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F38[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetProperRotation_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSection_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_RadialEntry_C*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F39[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel) == 0x000008, "Wrong alignment on W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel");
static_assert(sizeof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel) == 0x000068, "Wrong size on W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, EntryPoint) == 0x000000, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_Divide_IntInt_ReturnValue) == 0x000010, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_GetProperRotation_ReturnValue) == 0x00001C, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_GetProperRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_GetCurrentSection_ReturnValue) == 0x000020, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_GetCurrentSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, K2Node_CustomEvent_Index) == 0x000024, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_GetMousePosition_LocationX) == 0x000038, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_GetMousePosition_LocationY) == 0x00003C, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_GetMousePosition_ReturnValue) == 0x000040, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_GetViewportSize_ReturnValue) == 0x000044, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_MakeVector2D_ReturnValue) == 0x00004C, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000054, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00005C, "Member 'W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.Radial Option Released
// 0x0004 (0x0004 - 0x0000)
struct W_RadialWheel_C_Radial_Option_Released final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RadialWheel_C_Radial_Option_Released) == 0x000004, "Wrong alignment on W_RadialWheel_C_Radial_Option_Released");
static_assert(sizeof(W_RadialWheel_C_Radial_Option_Released) == 0x000004, "Wrong size on W_RadialWheel_C_Radial_Option_Released");
static_assert(offsetof(W_RadialWheel_C_Radial_Option_Released, Param_Index) == 0x000000, "Member 'W_RadialWheel_C_Radial_Option_Released::Param_Index' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_RadialWheel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RadialWheel_C_PreConstruct) == 0x000001, "Wrong alignment on W_RadialWheel_C_PreConstruct");
static_assert(sizeof(W_RadialWheel_C_PreConstruct) == 0x000001, "Wrong size on W_RadialWheel_C_PreConstruct");
static_assert(offsetof(W_RadialWheel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_RadialWheel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.FadeAnimation
// 0x0020 (0x0020 - 0x0000)
struct W_RadialWheel_C_FadeAnimation final
{
public:
	bool                                          bReverse;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F3A[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F3B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue;    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RadialWheel_C_FadeAnimation) == 0x000008, "Wrong alignment on W_RadialWheel_C_FadeAnimation");
static_assert(sizeof(W_RadialWheel_C_FadeAnimation) == 0x000020, "Wrong size on W_RadialWheel_C_FadeAnimation");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, bReverse) == 0x000000, "Member 'W_RadialWheel_C_FadeAnimation::bReverse' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, Temp_bool_Variable) == 0x000001, "Member 'W_RadialWheel_C_FadeAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, Temp_byte_Variable) == 0x000002, "Member 'W_RadialWheel_C_FadeAnimation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, Temp_byte_Variable_1) == 0x000003, "Member 'W_RadialWheel_C_FadeAnimation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'W_RadialWheel_C_FadeAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, K2Node_Select_Default) == 0x000005, "Member 'W_RadialWheel_C_FadeAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000008, "Member 'W_RadialWheel_C_FadeAnimation::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'W_RadialWheel_C_FadeAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000018, "Member 'W_RadialWheel_C_FadeAnimation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, CallFunc_IsAnimationPlayingForward_ReturnValue) == 0x000019, "Member 'W_RadialWheel_C_FadeAnimation::CallFunc_IsAnimationPlayingForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001A, "Member 'W_RadialWheel_C_FadeAnimation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'W_RadialWheel_C_FadeAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, CallFunc_BooleanAND_ReturnValue_1) == 0x00001C, "Member 'W_RadialWheel_C_FadeAnimation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_FadeAnimation, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'W_RadialWheel_C_FadeAnimation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.AddChildWidget
// 0x0028 (0x0028 - 0x0000)
struct W_RadialWheel_C_AddChildWidget final
{
public:
	class UW_RadialEntry_C*                       RadialEntry;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0008(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F3C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RadialWheel_C_AddChildWidget) == 0x000008, "Wrong alignment on W_RadialWheel_C_AddChildWidget");
static_assert(sizeof(W_RadialWheel_C_AddChildWidget) == 0x000028, "Wrong size on W_RadialWheel_C_AddChildWidget");
static_assert(offsetof(W_RadialWheel_C_AddChildWidget, RadialEntry) == 0x000000, "Member 'W_RadialWheel_C_AddChildWidget::RadialEntry' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_AddChildWidget, K2Node_MakeStruct_Anchors) == 0x000008, "Member 'W_RadialWheel_C_AddChildWidget::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_AddChildWidget, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'W_RadialWheel_C_AddChildWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_AddChildWidget, CallFunc_AddChildToCanvas_ReturnValue) == 0x000020, "Member 'W_RadialWheel_C_AddChildWidget::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.RemoveChildWidget
// 0x0010 (0x0010 - 0x0000)
struct W_RadialWheel_C_RemoveChildWidget final
{
public:
	const class UW_RadialEntry_C*                 Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RadialWheel_C_RemoveChildWidget) == 0x000008, "Wrong alignment on W_RadialWheel_C_RemoveChildWidget");
static_assert(sizeof(W_RadialWheel_C_RemoveChildWidget) == 0x000010, "Wrong size on W_RadialWheel_C_RemoveChildWidget");
static_assert(offsetof(W_RadialWheel_C_RemoveChildWidget, Item) == 0x000000, "Member 'W_RadialWheel_C_RemoveChildWidget::Item' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_RemoveChildWidget, CallFunc_RemoveChild_ReturnValue) == 0x000008, "Member 'W_RadialWheel_C_RemoveChildWidget::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_RemoveChildWidget, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'W_RadialWheel_C_RemoveChildWidget::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.OnKeyUp
// 0x0380 (0x0380 - 0x0000)
struct W_RadialWheel_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            Ret;                                               // 0x0128(0x00B8)(Edit, BlueprintVisible)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x01F8(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x02B0(0x00B8)()
	TArray<struct FKey>                           CallFunc_GetKeysMappedToAction_Keys;               // 0x0368(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RadialWheel_C_OnKeyUp) == 0x000008, "Wrong alignment on W_RadialWheel_C_OnKeyUp");
static_assert(sizeof(W_RadialWheel_C_OnKeyUp) == 0x000380, "Wrong size on W_RadialWheel_C_OnKeyUp");
static_assert(offsetof(W_RadialWheel_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'W_RadialWheel_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'W_RadialWheel_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_OnKeyUp, ReturnValue) == 0x000070, "Member 'W_RadialWheel_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_OnKeyUp, Ret) == 0x000128, "Member 'W_RadialWheel_C_OnKeyUp::Ret' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'W_RadialWheel_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x0001F8, "Member 'W_RadialWheel_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x0002B0, "Member 'W_RadialWheel_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_OnKeyUp, CallFunc_GetKeysMappedToAction_Keys) == 0x000368, "Member 'W_RadialWheel_C_OnKeyUp::CallFunc_GetKeysMappedToAction_Keys' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_OnKeyUp, CallFunc_Array_Contains_ReturnValue) == 0x000378, "Member 'W_RadialWheel_C_OnKeyUp::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.CloseSelf
// 0x0001 (0x0001 - 0x0000)
struct W_RadialWheel_C_CloseSelf final
{
public:
	bool                                          CallFunc_IsMouseInCenterHitbox_CenterHitbox;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RadialWheel_C_CloseSelf) == 0x000001, "Wrong alignment on W_RadialWheel_C_CloseSelf");
static_assert(sizeof(W_RadialWheel_C_CloseSelf) == 0x000001, "Wrong size on W_RadialWheel_C_CloseSelf");
static_assert(offsetof(W_RadialWheel_C_CloseSelf, CallFunc_IsMouseInCenterHitbox_CenterHitbox) == 0x000000, "Member 'W_RadialWheel_C_CloseSelf::CallFunc_IsMouseInCenterHitbox_CenterHitbox' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.IsMouseInCenterHitbox
// 0x00E0 (0x00E0 - 0x0000)
struct W_RadialWheel_C_IsMouseInCenterHitbox final
{
public:
	bool                                          CenterHitbox;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Is_Hovering_Center;                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F3D[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F3E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x000C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F3F[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F40[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F41[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue_1;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F42[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RadialWheel_C_IsMouseInCenterHitbox) == 0x000008, "Wrong alignment on W_RadialWheel_C_IsMouseInCenterHitbox");
static_assert(sizeof(W_RadialWheel_C_IsMouseInCenterHitbox) == 0x0000E0, "Wrong size on W_RadialWheel_C_IsMouseInCenterHitbox");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CenterHitbox) == 0x000000, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CenterHitbox' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, L_Is_Hovering_Center) == 0x000001, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::L_Is_Hovering_Center' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_GetCachedGeometry_ReturnValue) == 0x00000C, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_GetAbsoluteSize_ReturnValue) == 0x000044, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x00004C, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_VSize2D_ReturnValue) == 0x000058, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_Conv_FloatToString_ReturnValue) == 0x000060, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_GetOwningPlayer_ReturnValue) == 0x000080, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_GetMousePosition_LocationX) == 0x000088, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_GetMousePosition_LocationY) == 0x00008C, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_GetMousePosition_ReturnValue) == 0x000090, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000091, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_MakeVector2D_ReturnValue) == 0x000094, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_GetViewportSize_ReturnValue) == 0x00009C, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000A4, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000AC, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_VSize2D_ReturnValue_1) == 0x0000B4, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B8, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0000C0, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_IsMouseInCenterHitbox, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D0, "Member 'W_RadialWheel_C_IsMouseInCenterHitbox::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.ClearMenu
// 0x0020 (0x0020 - 0x0000)
struct W_RadialWheel_C_ClearMenu final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_RadialEntry_C*                       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RadialWheel_C_ClearMenu) == 0x000008, "Wrong alignment on W_RadialWheel_C_ClearMenu");
static_assert(sizeof(W_RadialWheel_C_ClearMenu) == 0x000020, "Wrong size on W_RadialWheel_C_ClearMenu");
static_assert(offsetof(W_RadialWheel_C_ClearMenu, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_RadialWheel_C_ClearMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ClearMenu, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_RadialWheel_C_ClearMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ClearMenu, CallFunc_Array_Get_Item) == 0x000008, "Member 'W_RadialWheel_C_ClearMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ClearMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_RadialWheel_C_ClearMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ClearMenu, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'W_RadialWheel_C_ClearMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_ClearMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'W_RadialWheel_C_ClearMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_RadialWheel.W_RadialWheel_C.CreateMenuFromModel
// 0x0020 (0x0020 - 0x0000)
struct W_RadialWheel_C_CreateMenuFromModel final
{
public:
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F43[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_RadialMenuModel_C*                  K2Node_DynamicCast_AsBP_Radial_Menu_Model;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RadialWheel_C_CreateMenuFromModel) == 0x000008, "Wrong alignment on W_RadialWheel_C_CreateMenuFromModel");
static_assert(sizeof(W_RadialWheel_C_CreateMenuFromModel) == 0x000020, "Wrong size on W_RadialWheel_C_CreateMenuFromModel");
static_assert(offsetof(W_RadialWheel_C_CreateMenuFromModel, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000000, "Member 'W_RadialWheel_C_CreateMenuFromModel::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_CreateMenuFromModel, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'W_RadialWheel_C_CreateMenuFromModel::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_CreateMenuFromModel, K2Node_DynamicCast_AsBP_Radial_Menu_Model) == 0x000010, "Member 'W_RadialWheel_C_CreateMenuFromModel::K2Node_DynamicCast_AsBP_Radial_Menu_Model' has a wrong offset!");
static_assert(offsetof(W_RadialWheel_C_CreateMenuFromModel, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_RadialWheel_C_CreateMenuFromModel::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


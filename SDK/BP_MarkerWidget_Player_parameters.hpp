#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarkerWidget_Player

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.ExecuteUbergraph_BP_MarkerWidget_Player
// 0x0060 (0x0060 - 0x0000)
struct BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldMarkerUpdate_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309B[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player) == 0x000008, "Wrong alignment on BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player");
static_assert(sizeof(BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player) == 0x000060, "Wrong size on BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player");
static_assert(offsetof(BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player, EntryPoint) == 0x000000, "Member 'BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player, K2Node_Event_MyGeometry) == 0x000014, "Member 'BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player, CallFunc_ShouldMarkerUpdate_ReturnValue) == 0x000050, "Member 'BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player::CallFunc_ShouldMarkerUpdate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'BP_MarkerWidget_Player_C_ExecuteUbergraph_BP_MarkerWidget_Player::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_MarkerWidget_Player_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_Tick) == 0x000004, "Wrong alignment on BP_MarkerWidget_Player_C_Tick");
static_assert(sizeof(BP_MarkerWidget_Player_C_Tick) == 0x00003C, "Wrong size on BP_MarkerWidget_Player_C_Tick");
static_assert(offsetof(BP_MarkerWidget_Player_C_Tick, MyGeometry) == 0x000000, "Member 'BP_MarkerWidget_Player_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_MarkerWidget_Player_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.SetAngle
// 0x0008 (0x0008 - 0x0000)
struct BP_MarkerWidget_Player_C_SetAngle final
{
public:
	float                                         InAngle;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_SetAngle) == 0x000004, "Wrong alignment on BP_MarkerWidget_Player_C_SetAngle");
static_assert(sizeof(BP_MarkerWidget_Player_C_SetAngle) == 0x000008, "Wrong size on BP_MarkerWidget_Player_C_SetAngle");
static_assert(offsetof(BP_MarkerWidget_Player_C_SetAngle, InAngle) == 0x000000, "Member 'BP_MarkerWidget_Player_C_SetAngle::InAngle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_SetAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_MarkerWidget_Player_C_SetAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.Update_SL_Text
// 0x0040 (0x0040 - 0x0000)
struct BP_MarkerWidget_Player_C_Update_SL_Text final
{
public:
	class APlayerState*                           CallFunc_BPGetWidgetPlayerState_SquadPlayerState;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309C[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSquadState*                          CallFunc_GetSquadState_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
};
static_assert(alignof(BP_MarkerWidget_Player_C_Update_SL_Text) == 0x000008, "Wrong alignment on BP_MarkerWidget_Player_C_Update_SL_Text");
static_assert(sizeof(BP_MarkerWidget_Player_C_Update_SL_Text) == 0x000040, "Wrong size on BP_MarkerWidget_Player_C_Update_SL_Text");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_SL_Text, CallFunc_BPGetWidgetPlayerState_SquadPlayerState) == 0x000000, "Member 'BP_MarkerWidget_Player_C_Update_SL_Text::CallFunc_BPGetWidgetPlayerState_SquadPlayerState' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_SL_Text, K2Node_DynamicCast_AsSQPlayer_State) == 0x000008, "Member 'BP_MarkerWidget_Player_C_Update_SL_Text::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_SL_Text, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MarkerWidget_Player_C_Update_SL_Text::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_SL_Text, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_MarkerWidget_Player_C_Update_SL_Text::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_SL_Text, CallFunc_GetSquadState_ReturnValue) == 0x000018, "Member 'BP_MarkerWidget_Player_C_Update_SL_Text::CallFunc_GetSquadState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_SL_Text, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_MarkerWidget_Player_C_Update_SL_Text::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_SL_Text, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_Player_C_Update_SL_Text::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.Update_PlayerImage_Brush
// 0x0148 (0x0148 - 0x0000)
struct BP_MarkerWidget_Player_C_Update_PlayerImage_Brush final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309E[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPUpdateIsInVehicle_IsInVehicle;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309F[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_6;                           // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_7;                           // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0098(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00C0(0x0088)()
};
static_assert(alignof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush) == 0x000008, "Wrong alignment on BP_MarkerWidget_Player_C_Update_PlayerImage_Brush");
static_assert(sizeof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush) == 0x000148, "Wrong size on BP_MarkerWidget_Player_C_Update_PlayerImage_Brush");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, Temp_bool_Variable) == 0x000000, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, Temp_bool_Variable_1) == 0x000001, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, Temp_bool_Variable_2) == 0x000002, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, Temp_bool_Variable_3) == 0x000003, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, Temp_bool_Variable_4) == 0x000004, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, Temp_bool_Variable_5) == 0x000005, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, Temp_bool_Variable_6) == 0x000006, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, Temp_bool_Variable_7) == 0x000007, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_MakeStruct_LinearColor) == 0x000008, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_MakeStruct_LinearColor_1) == 0x000018, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_Select_Default) == 0x00002C, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, CallFunc_BPUpdateIsInVehicle_IsInVehicle) == 0x00003C, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::CallFunc_BPUpdateIsInVehicle_IsInVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_Select_Default_1) == 0x000040, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_Select_Default_2) == 0x000048, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_Select_Default_3) == 0x000050, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_Select_Default_4) == 0x000060, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_Select_Default_5) == 0x000068, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_Select_Default_6) == 0x000078, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_Select_Default_7) == 0x000088, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_MakeStruct_SlateColor) == 0x000098, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_PlayerImage_Brush, K2Node_MakeStruct_SlateBrush) == 0x0000C0, "Member 'BP_MarkerWidget_Player_C_Update_PlayerImage_Brush::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.UpdateMedicOverlayVisibility
// 0x0007 (0x0007 - 0x0000)
struct BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility) == 0x000001, "Wrong alignment on BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility");
static_assert(sizeof(BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility) == 0x000007, "Wrong size on BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility, CallFunc_Not_PreBool_ReturnValue_2) == 0x000004, "Member 'BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility, CallFunc_BooleanAND_ReturnValue_2) == 0x000006, "Member 'BP_MarkerWidget_Player_C_UpdateMedicOverlayVisibility::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.Update_IncapPanel_Visibility
// 0x0018 (0x0018 - 0x0000)
struct BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A0[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility) == 0x000008, "Wrong alignment on BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility");
static_assert(sizeof(BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility) == 0x000018, "Wrong size on BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility, CallFunc_BooleanAND_ReturnValue_1) == 0x000010, "Member 'BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility, CallFunc_BooleanAND_ReturnValue_2) == 0x000011, "Member 'BP_MarkerWidget_Player_C_Update_IncapPanel_Visibility::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.Get_Player_Image_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_MarkerWidget_Player_C_Get_Player_Image_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_Get_Player_Image_ToolTipWidget) == 0x000008, "Wrong alignment on BP_MarkerWidget_Player_C_Get_Player_Image_ToolTipWidget");
static_assert(sizeof(BP_MarkerWidget_Player_C_Get_Player_Image_ToolTipWidget) == 0x000008, "Wrong size on BP_MarkerWidget_Player_C_Get_Player_Image_ToolTipWidget");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_ToolTipWidget, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.Update_BleedingPanel_Visibility
// 0x0018 (0x0018 - 0x0000)
struct BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility) == 0x000008, "Wrong alignment on BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility");
static_assert(sizeof(BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility) == 0x000018, "Wrong size on BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility, CallFunc_BooleanAND_ReturnValue_1) == 0x000002, "Member 'BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility, CallFunc_BooleanAND_ReturnValue_2) == 0x000003, "Member 'BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility, CallFunc_BooleanAND_ReturnValue_3) == 0x000010, "Member 'BP_MarkerWidget_Player_C_Update_BleedingPanel_Visibility::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.Update_Player_Cone_Visibility
// 0x0004 (0x0004 - 0x0000)
struct BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility) == 0x000001, "Wrong alignment on BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility");
static_assert(sizeof(BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility) == 0x000004, "Wrong size on BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility, Temp_bool_Variable) == 0x000000, "Member 'BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility, Temp_byte_Variable) == 0x000001, "Member 'BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility, Temp_byte_Variable_1) == 0x000002, "Member 'BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility, K2Node_Select_Default) == 0x000003, "Member 'BP_MarkerWidget_Player_C_Update_Player_Cone_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.IsMarkerVisible
// 0x0005 (0x0005 - 0x0000)
struct BP_MarkerWidget_Player_C_IsMarkerVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPUpdateIsInVehicle_IsInVehicle;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMarkerVisible_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Player_C_IsMarkerVisible) == 0x000001, "Wrong alignment on BP_MarkerWidget_Player_C_IsMarkerVisible");
static_assert(sizeof(BP_MarkerWidget_Player_C_IsMarkerVisible) == 0x000005, "Wrong size on BP_MarkerWidget_Player_C_IsMarkerVisible");
static_assert(offsetof(BP_MarkerWidget_Player_C_IsMarkerVisible, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Player_C_IsMarkerVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_IsMarkerVisible, CallFunc_BPUpdateIsInVehicle_IsInVehicle) == 0x000001, "Member 'BP_MarkerWidget_Player_C_IsMarkerVisible::CallFunc_BPUpdateIsInVehicle_IsInVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_IsMarkerVisible, CallFunc_IsMarkerVisible_ReturnValue) == 0x000002, "Member 'BP_MarkerWidget_Player_C_IsMarkerVisible::CallFunc_IsMarkerVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_IsMarkerVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_MarkerWidget_Player_C_IsMarkerVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_IsMarkerVisible, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BP_MarkerWidget_Player_C_IsMarkerVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.UpdateViewAngle
// 0x0078 (0x0078 - 0x0000)
struct BP_MarkerWidget_Player_C_UpdateViewAngle final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraMan_C*                           K2Node_DynamicCast_AsCamera_Man;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A2[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A3[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetCurrentSeatWeaponRotation_ReturnValue; // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                CallFunc_GetCurrentSeat_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A4[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_UpdateViewAngle) == 0x000008, "Wrong alignment on BP_MarkerWidget_Player_C_UpdateViewAngle");
static_assert(sizeof(BP_MarkerWidget_Player_C_UpdateViewAngle) == 0x000078, "Wrong size on BP_MarkerWidget_Player_C_UpdateViewAngle");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, K2Node_DynamicCast_AsCamera_Man) == 0x000008, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::K2Node_DynamicCast_AsCamera_Man' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, K2Node_DynamicCast_AsSQSoldier) == 0x000018, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_GetCurrentSeatWeaponRotation_ReturnValue) == 0x000030, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_GetCurrentSeatWeaponRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_BreakRotator_Roll) == 0x00003C, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_BreakRotator_Pitch) == 0x000040, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_BreakRotator_Yaw) == 0x000044, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_GetCurrentSeat_ReturnValue) == 0x000048, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_GetCurrentSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_ComposeRotators_ReturnValue) == 0x000060, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_BreakRotator_Roll_1) == 0x00006C, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_BreakRotator_Pitch_1) == 0x000070, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateViewAngle, CallFunc_BreakRotator_Yaw_1) == 0x000074, "Member 'BP_MarkerWidget_Player_C_UpdateViewAngle::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.UpdateSizeAndZOrder
// 0x0054 (0x0054 - 0x0000)
struct BP_MarkerWidget_Player_C_UpdateSizeAndZOrder final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A5[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A6[0x1];                                     // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A7[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_5;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_6;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder) == 0x000004, "Wrong alignment on BP_MarkerWidget_Player_C_UpdateSizeAndZOrder");
static_assert(sizeof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder) == 0x000054, "Wrong size on BP_MarkerWidget_Player_C_UpdateSizeAndZOrder");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_int_Variable) == 0x000000, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_int_Variable_1) == 0x000004, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_bool_Variable) == 0x000008, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_bool_Variable_1) == 0x000009, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_bool_Variable_2) == 0x00000A, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_bool_Variable_3) == 0x00000B, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_int_Variable_2) == 0x00000C, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_bool_Variable_4) == 0x000010, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_bool_Variable_5) == 0x000011, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_struct_Variable) == 0x000014, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_struct_Variable_1) == 0x00001C, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, CallFunc_IsVisible_ReturnValue) == 0x000025, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, Temp_bool_Variable_6) == 0x000026, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, K2Node_Select_Default) == 0x000028, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, K2Node_Select_Default_1) == 0x000034, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, K2Node_Select_Default_2) == 0x000038, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, K2Node_Select_Default_3) == 0x00003C, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, K2Node_Select_Default_4) == 0x000040, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, K2Node_Select_Default_5) == 0x000044, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, K2Node_Select_Default_6) == 0x000048, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateSizeAndZOrder, CallFunc_MakeVector2D_ReturnValue) == 0x00004C, "Member 'BP_MarkerWidget_Player_C_UpdateSizeAndZOrder::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.UpdateVisibilities
// 0x0002 (0x0002 - 0x0000)
struct BP_MarkerWidget_Player_C_UpdateVisibilities final
{
public:
	ESlateVisibility                              CallFunc_Get_Player_Image_Visibility_ReturnValue;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Get_SL_Text_Visibility_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_UpdateVisibilities) == 0x000001, "Wrong alignment on BP_MarkerWidget_Player_C_UpdateVisibilities");
static_assert(sizeof(BP_MarkerWidget_Player_C_UpdateVisibilities) == 0x000002, "Wrong size on BP_MarkerWidget_Player_C_UpdateVisibilities");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateVisibilities, CallFunc_Get_Player_Image_Visibility_ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Player_C_UpdateVisibilities::CallFunc_Get_Player_Image_Visibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_UpdateVisibilities, CallFunc_Get_SL_Text_Visibility_ReturnValue) == 0x000001, "Member 'BP_MarkerWidget_Player_C_UpdateVisibilities::CallFunc_Get_SL_Text_Visibility_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.Get_SL_Text_Visibility
// 0x000C (0x000C - 0x0000)
struct BP_MarkerWidget_Player_C_Get_SL_Text_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility) == 0x000001, "Wrong alignment on BP_MarkerWidget_Player_C_Get_SL_Text_Visibility");
static_assert(sizeof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility) == 0x00000C, "Wrong size on BP_MarkerWidget_Player_C_Get_SL_Text_Visibility");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, Temp_bool_Variable) == 0x000001, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, Temp_byte_Variable) == 0x000002, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, CallFunc_BooleanOR_ReturnValue_1) == 0x000009, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, CallFunc_BooleanOR_ReturnValue_2) == 0x00000A, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_SL_Text_Visibility, K2Node_Select_Default) == 0x00000B, "Member 'BP_MarkerWidget_Player_C_Get_SL_Text_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.Get_Player_Image_Visibility
// 0x0038 (0x0038 - 0x0000)
struct BP_MarkerWidget_Player_C_Get_Player_Image_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A8[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A9[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_GetCurrentSeat_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility) == 0x000008, "Wrong alignment on BP_MarkerWidget_Player_C_Get_Player_Image_Visibility");
static_assert(sizeof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility) == 0x000038, "Wrong size on BP_MarkerWidget_Player_C_Get_Player_Image_Visibility");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, Temp_bool_Variable) == 0x000001, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, Temp_bool_Variable_1) == 0x000002, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, Temp_byte_Variable) == 0x000003, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, Temp_bool_Variable_2) == 0x000004, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, Temp_byte_Variable_1) == 0x000005, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, Temp_byte_Variable_2) == 0x000006, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, Temp_bool_Variable_3) == 0x00000A, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, K2Node_DynamicCast_AsSQSoldier) == 0x000018, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_IsPlayerControlled_ReturnValue) == 0x000021, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_GetCurrentSeat_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_GetCurrentSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000030, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_Not_PreBool_ReturnValue_2) == 0x000032, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, K2Node_Select_Default) == 0x000033, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, CallFunc_BooleanOR_ReturnValue_1) == 0x000034, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, K2Node_Select_Default_1) == 0x000035, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_Get_Player_Image_Visibility, K2Node_Select_Default_2) == 0x000036, "Member 'BP_MarkerWidget_Player_C_Get_Player_Image_Visibility::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.BPGetWidgetPlayerState
// 0x0040 (0x0040 - 0x0000)
struct BP_MarkerWidget_Player_C_BPGetWidgetPlayerState final
{
public:
	class APlayerState*                           SquadPlayerState;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_GetCurrentSeat_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AC[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Player_C_BPGetWidgetPlayerState) == 0x000008, "Wrong alignment on BP_MarkerWidget_Player_C_BPGetWidgetPlayerState");
static_assert(sizeof(BP_MarkerWidget_Player_C_BPGetWidgetPlayerState) == 0x000040, "Wrong size on BP_MarkerWidget_Player_C_BPGetWidgetPlayerState");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPGetWidgetPlayerState, SquadPlayerState) == 0x000000, "Member 'BP_MarkerWidget_Player_C_BPGetWidgetPlayerState::SquadPlayerState' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPGetWidgetPlayerState, Temp_bool_Variable) == 0x000008, "Member 'BP_MarkerWidget_Player_C_BPGetWidgetPlayerState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPGetWidgetPlayerState, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_Player_C_BPGetWidgetPlayerState::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPGetWidgetPlayerState, K2Node_DynamicCast_AsSQSoldier) == 0x000018, "Member 'BP_MarkerWidget_Player_C_BPGetWidgetPlayerState::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPGetWidgetPlayerState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MarkerWidget_Player_C_BPGetWidgetPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPGetWidgetPlayerState, CallFunc_GetCurrentSeat_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_Player_C_BPGetWidgetPlayerState::CallFunc_GetCurrentSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPGetWidgetPlayerState, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_MarkerWidget_Player_C_BPGetWidgetPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPGetWidgetPlayerState, K2Node_Select_Default) == 0x000038, "Member 'BP_MarkerWidget_Player_C_BPGetWidgetPlayerState::K2Node_Select_Default' has a wrong offset!");

// Function BP_MarkerWidget_Player.BP_MarkerWidget_Player_C.BPUpdateIsInVehicle
// 0x0030 (0x0030 - 0x0000)
struct BP_MarkerWidget_Player_C_BPUpdateIsInVehicle final
{
public:
	bool                                          IsInVehicle;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30AE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_GetCurrentSeat_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Player_C_BPUpdateIsInVehicle) == 0x000008, "Wrong alignment on BP_MarkerWidget_Player_C_BPUpdateIsInVehicle");
static_assert(sizeof(BP_MarkerWidget_Player_C_BPUpdateIsInVehicle) == 0x000030, "Wrong size on BP_MarkerWidget_Player_C_BPUpdateIsInVehicle");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPUpdateIsInVehicle, IsInVehicle) == 0x000000, "Member 'BP_MarkerWidget_Player_C_BPUpdateIsInVehicle::IsInVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPUpdateIsInVehicle, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_Player_C_BPUpdateIsInVehicle::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPUpdateIsInVehicle, K2Node_DynamicCast_AsSQSoldier) == 0x000010, "Member 'BP_MarkerWidget_Player_C_BPUpdateIsInVehicle::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPUpdateIsInVehicle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MarkerWidget_Player_C_BPUpdateIsInVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPUpdateIsInVehicle, CallFunc_GetCurrentSeat_ReturnValue) == 0x000020, "Member 'BP_MarkerWidget_Player_C_BPUpdateIsInVehicle::CallFunc_GetCurrentSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Player_C_BPUpdateIsInVehicle, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_Player_C_BPUpdateIsInVehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DragDropFireteamSlot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_DragDropFireteamSlot.W_DragDropFireteamSlot_C.ExecuteUbergraph_W_DragDropFireteamSlot
// 0x03A8 (0x03A8 - 0x0000)
struct W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4282[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4283[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4284[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A8(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4285[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_7;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00E0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0110(0x0040)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0168(0x0040)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x01A8(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x01C0(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01E0(0x0040)(HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4286[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0230(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0240(0x0018)()
	struct FPointerEvent                          K2Node_Event_PointerEvent_1;                       // 0x0258(0x0070)()
	class UDragDropOperation*                     K2Node_Event_Operation_1;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x02E0(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x0318(0x0070)()
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot) == 0x000008, "Wrong alignment on W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot");
static_assert(sizeof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot) == 0x0003A8, "Wrong size on W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, EntryPoint) == 0x000000, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_bool_Variable) == 0x000004, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_text_Variable) == 0x000008, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_text_Variable_1) == 0x000020, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_bool_Variable_1) == 0x000038, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_text_Variable_2) == 0x000040, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_text_Variable_3) == 0x000058, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_int_Variable) == 0x000070, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_text_Variable_4) == 0x000078, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_text_Variable_5) == 0x000090, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_text_Variable_6) == 0x0000A8, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_bool_Variable_2) == 0x0000C0, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_text_Variable_7) == 0x0000C8, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, Temp_text_Variable_8) == 0x0000E0, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_Select_Default) == 0x0000F8, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000110, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_Select_Default_1) == 0x000150, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x000168, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_Select_Default_2) == 0x0001A8, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_Select_Default_3) == 0x0001C0, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, CallFunc_GetOwningPlayer_ReturnValue) == 0x0001D8, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001E0, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000220, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_DynamicCast_bSuccess) == 0x000228, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_MakeArray_Array) == 0x000230, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, CallFunc_Format_ReturnValue) == 0x000240, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_Event_PointerEvent_1) == 0x000258, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_Event_PointerEvent_1' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_Event_Operation_1) == 0x0002C8, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_Event_Operation_1' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, CallFunc_SelectColor_ReturnValue) == 0x0002D0, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_Event_MyGeometry) == 0x0002E0, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_Event_PointerEvent) == 0x000318, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_Event_Operation) == 0x000388, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, CallFunc_SelectColor_ReturnValue_1) == 0x000390, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot, K2Node_Event_IsDesignTime) == 0x0003A0, "Member 'W_DragDropFireteamSlot_C_ExecuteUbergraph_W_DragDropFireteamSlot::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function W_DragDropFireteamSlot.W_DragDropFireteamSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_DragDropFireteamSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_DragDropFireteamSlot_C_PreConstruct) == 0x000001, "Wrong alignment on W_DragDropFireteamSlot_C_PreConstruct");
static_assert(sizeof(W_DragDropFireteamSlot_C_PreConstruct) == 0x000001, "Wrong size on W_DragDropFireteamSlot_C_PreConstruct");
static_assert(offsetof(W_DragDropFireteamSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_DragDropFireteamSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_DragDropFireteamSlot.W_DragDropFireteamSlot_C.OnDragEnter
// 0x00B0 (0x00B0 - 0x0000)
struct W_DragDropFireteamSlot_C_OnDragEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DragDropFireteamSlot_C_OnDragEnter) == 0x000008, "Wrong alignment on W_DragDropFireteamSlot_C_OnDragEnter");
static_assert(sizeof(W_DragDropFireteamSlot_C_OnDragEnter) == 0x0000B0, "Wrong size on W_DragDropFireteamSlot_C_OnDragEnter");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDragEnter, MyGeometry) == 0x000000, "Member 'W_DragDropFireteamSlot_C_OnDragEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDragEnter, PointerEvent) == 0x000038, "Member 'W_DragDropFireteamSlot_C_OnDragEnter::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDragEnter, Operation) == 0x0000A8, "Member 'W_DragDropFireteamSlot_C_OnDragEnter::Operation' has a wrong offset!");

// Function W_DragDropFireteamSlot.W_DragDropFireteamSlot_C.OnDragLeave
// 0x0078 (0x0078 - 0x0000)
struct W_DragDropFireteamSlot_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DragDropFireteamSlot_C_OnDragLeave) == 0x000008, "Wrong alignment on W_DragDropFireteamSlot_C_OnDragLeave");
static_assert(sizeof(W_DragDropFireteamSlot_C_OnDragLeave) == 0x000078, "Wrong size on W_DragDropFireteamSlot_C_OnDragLeave");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'W_DragDropFireteamSlot_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDragLeave, Operation) == 0x000070, "Member 'W_DragDropFireteamSlot_C_OnDragLeave::Operation' has a wrong offset!");

// Function W_DragDropFireteamSlot.W_DragDropFireteamSlot_C.OnDrop
// 0x00C8 (0x00C8 - 0x0000)
struct W_DragDropFireteamSlot_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4287[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SquadMemberItem_C*                   K2Node_DynamicCast_AsW_Squad_Member_Item;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_DragDropFireteamSlot_C_OnDrop) == 0x000008, "Wrong alignment on W_DragDropFireteamSlot_C_OnDrop");
static_assert(sizeof(W_DragDropFireteamSlot_C_OnDrop) == 0x0000C8, "Wrong size on W_DragDropFireteamSlot_C_OnDrop");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDrop, MyGeometry) == 0x000000, "Member 'W_DragDropFireteamSlot_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDrop, PointerEvent) == 0x000038, "Member 'W_DragDropFireteamSlot_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDrop, Operation) == 0x0000A8, "Member 'W_DragDropFireteamSlot_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDrop, ReturnValue) == 0x0000B0, "Member 'W_DragDropFireteamSlot_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDrop, K2Node_DynamicCast_AsW_Squad_Member_Item) == 0x0000B8, "Member 'W_DragDropFireteamSlot_C_OnDrop::K2Node_DynamicCast_AsW_Squad_Member_Item' has a wrong offset!");
static_assert(offsetof(W_DragDropFireteamSlot_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'W_DragDropFireteamSlot_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


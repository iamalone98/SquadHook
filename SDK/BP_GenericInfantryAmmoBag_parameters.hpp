#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GenericInfantryAmmoBag

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_GenericInfantryAmmoBag.BP_GenericInfantryAmmoBag_C.ExecuteUbergraph_BP_GenericInfantryAmmoBag
// 0x0148 (0x0148 - 0x0000)
struct BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_Player_2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_Player_1;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Can_Pickup;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D60[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D61[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseRadialMenu_C*                      CallFunc_Get_Radial_Menu_Radial_Menu;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOpenRadialMenu_CanOpenRadialMenu;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D62[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D63[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D64[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_2;                    // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D65[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D66[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseRadialMenu_C*                      CallFunc_Get_Radial_Menu_Radial_Menu_1;            // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD;                 // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D67[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD_1;                      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D68[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD_1;               // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D69[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_Player;                               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D6A[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D6B[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQEquipableItem*                       K2Node_Event_EquippableAmmoBag;                    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GenericEquippableAmmobag_C*         K2Node_DynamicCast_AsBP_Generic_Equippable_Ammobag; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D6C[0x6];                                     // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag) == 0x000008, "Wrong alignment on BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag");
static_assert(sizeof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag) == 0x000148, "Wrong size on BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, EntryPoint) == 0x000000, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_GetSquadPlayerController_Return_Value) == 0x000008, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_GetSquadPlayerController_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_Event_Player_2) == 0x000018, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_Event_Player_1) == 0x000028, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_Event_Can_Pickup) == 0x000030, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_Event_Can_Pickup' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsBPI_HUD) == 0x000038, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000050, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_Get_Radial_Menu_Radial_Menu) == 0x000060, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_Get_Radial_Menu_Radial_Menu' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_CanOpenRadialMenu_CanOpenRadialMenu) == 0x000068, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_CanOpenRadialMenu_CanOpenRadialMenu' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00006A, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00006B, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_GetHUD_ReturnValue_1) == 0x000070, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_BooleanOR_ReturnValue) == 0x000078, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsBPI_HUD_1) == 0x000080, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsBPI_HUD_2) == 0x000098, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsBPI_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess_3) == 0x0000A8, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsSQHUD) == 0x0000B0, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess_4) == 0x0000B8, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_Get_Radial_Menu_Radial_Menu_1) == 0x0000C0, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_Get_Radial_Menu_Radial_Menu_1' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsUMG_Base_HUD) == 0x0000C8, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsUMG_Base_HUD' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess_5) == 0x0000D0, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_IsValid_ReturnValue_2) == 0x0000D1, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsSQHUD_1) == 0x0000D8, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsSQHUD_1' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess_6) == 0x0000E0, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsUMG_Base_HUD_1) == 0x0000E8, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsUMG_Base_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess_7) == 0x0000F0, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_Event_Player) == 0x0000F8, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, CallFunc_K2_GetPawn_ReturnValue) == 0x000100, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000108, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess_8) == 0x000110, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsSQSoldier) == 0x000118, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess_9) == 0x000120, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_Event_EquippableAmmoBag) == 0x000128, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_Event_EquippableAmmoBag' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_AsBP_Generic_Equippable_Ammobag) == 0x000130, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_AsBP_Generic_Equippable_Ammobag' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_DynamicCast_bSuccess_10) == 0x000138, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, Temp_bool_Variable) == 0x000139, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag, K2Node_Select_Default) == 0x000140, "Member 'BP_GenericInfantryAmmoBag_C_ExecuteUbergraph_BP_GenericInfantryAmmoBag::K2Node_Select_Default' has a wrong offset!");

// Function BP_GenericInfantryAmmoBag.BP_GenericInfantryAmmoBag_C.Pickup Item
// 0x0008 (0x0008 - 0x0000)
struct BP_GenericInfantryAmmoBag_C_Pickup_Item final
{
public:
	class APlayerController*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericInfantryAmmoBag_C_Pickup_Item) == 0x000008, "Wrong alignment on BP_GenericInfantryAmmoBag_C_Pickup_Item");
static_assert(sizeof(BP_GenericInfantryAmmoBag_C_Pickup_Item) == 0x000008, "Wrong size on BP_GenericInfantryAmmoBag_C_Pickup_Item");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_Pickup_Item, Player) == 0x000000, "Member 'BP_GenericInfantryAmmoBag_C_Pickup_Item::Player' has a wrong offset!");

// Function BP_GenericInfantryAmmoBag.BP_GenericInfantryAmmoBag_C.Player Enter Radius
// 0x0010 (0x0010 - 0x0000)
struct BP_GenericInfantryAmmoBag_C_Player_Enter_Radius final
{
public:
	class APlayerController*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Pickup;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericInfantryAmmoBag_C_Player_Enter_Radius) == 0x000008, "Wrong alignment on BP_GenericInfantryAmmoBag_C_Player_Enter_Radius");
static_assert(sizeof(BP_GenericInfantryAmmoBag_C_Player_Enter_Radius) == 0x000010, "Wrong size on BP_GenericInfantryAmmoBag_C_Player_Enter_Radius");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_Player_Enter_Radius, Player) == 0x000000, "Member 'BP_GenericInfantryAmmoBag_C_Player_Enter_Radius::Player' has a wrong offset!");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_Player_Enter_Radius, Can_Pickup) == 0x000008, "Member 'BP_GenericInfantryAmmoBag_C_Player_Enter_Radius::Can_Pickup' has a wrong offset!");

// Function BP_GenericInfantryAmmoBag.BP_GenericInfantryAmmoBag_C.Player Left Radius
// 0x0008 (0x0008 - 0x0000)
struct BP_GenericInfantryAmmoBag_C_Player_Left_Radius final
{
public:
	class APlayerController*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericInfantryAmmoBag_C_Player_Left_Radius) == 0x000008, "Wrong alignment on BP_GenericInfantryAmmoBag_C_Player_Left_Radius");
static_assert(sizeof(BP_GenericInfantryAmmoBag_C_Player_Left_Radius) == 0x000008, "Wrong size on BP_GenericInfantryAmmoBag_C_Player_Left_Radius");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_Player_Left_Radius, Player) == 0x000000, "Member 'BP_GenericInfantryAmmoBag_C_Player_Left_Radius::Player' has a wrong offset!");

// Function BP_GenericInfantryAmmoBag.BP_GenericInfantryAmmoBag_C.BP_PickedUp
// 0x0008 (0x0008 - 0x0000)
struct BP_GenericInfantryAmmoBag_C_BP_PickedUp final
{
public:
	class ASQEquipableItem*                       EquippableAmmoBag;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericInfantryAmmoBag_C_BP_PickedUp) == 0x000008, "Wrong alignment on BP_GenericInfantryAmmoBag_C_BP_PickedUp");
static_assert(sizeof(BP_GenericInfantryAmmoBag_C_BP_PickedUp) == 0x000008, "Wrong size on BP_GenericInfantryAmmoBag_C_BP_PickedUp");
static_assert(offsetof(BP_GenericInfantryAmmoBag_C_BP_PickedUp, EquippableAmmoBag) == 0x000000, "Member 'BP_GenericInfantryAmmoBag_C_BP_PickedUp::EquippableAmmoBag' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQVehicleSettings

#include "Basic.hpp"

#include "ESQVehicle_structs.hpp"
#include "ESQVehicleTag_structs.hpp"
#include "SQVehicleVersion_structs.hpp"
#include "ESQVehicleSpawnerSize_structs.hpp"
#include "Squad_classes.hpp"
#include "ESQBiome_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SQVehicleSettings.BP_SQVehicleSettings_C
// 0x0070 (0x00D0 - 0x0060)
class UBP_SQVehicleSettings_C final : public USQVehicleSettings
{
public:
	ESQVehicle                                    VehicleType;                                       // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2F[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<ESQVehicleTag>                           VehicleTags;                                       // 0x0068(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSQVehicleVersion>              VehicleVersions;                                   // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	ESQVehicleSpawnerSize                         SpawnerSize;                                       // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool TryGetVehicleWithBiome(ESQBiome Biome, TSoftClassPtr<class UClass>* OutVehicle);

	void GetVehicleEntry(bool* Success, struct FSQVehicleEntry* VehicleEntry) const;
	bool TryGetVehicleWithLayer(const class USQLayer* InLayer, TSoftClassPtr<class UClass>* OutVehicle) const;
	void HasTag(ESQVehicleTag InTag, bool* Out_HasTag) const;
	void HasTags(TArray<ESQVehicleTag>& InTags, bool InAll, bool* Out_HasTag) const;
	bool ShouldCauseSieged(const class ASQGameSpawn* Spawn) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SQVehicleSettings_C">();
	}
	static class UBP_SQVehicleSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SQVehicleSettings_C>();
	}
};
static_assert(alignof(UBP_SQVehicleSettings_C) == 0x000008, "Wrong alignment on UBP_SQVehicleSettings_C");
static_assert(sizeof(UBP_SQVehicleSettings_C) == 0x0000D0, "Wrong size on UBP_SQVehicleSettings_C");
static_assert(offsetof(UBP_SQVehicleSettings_C, VehicleType) == 0x000060, "Member 'UBP_SQVehicleSettings_C::VehicleType' has a wrong offset!");
static_assert(offsetof(UBP_SQVehicleSettings_C, VehicleTags) == 0x000068, "Member 'UBP_SQVehicleSettings_C::VehicleTags' has a wrong offset!");
static_assert(offsetof(UBP_SQVehicleSettings_C, VehicleVersions) == 0x0000B8, "Member 'UBP_SQVehicleSettings_C::VehicleVersions' has a wrong offset!");
static_assert(offsetof(UBP_SQVehicleSettings_C, SpawnerSize) == 0x0000C8, "Member 'UBP_SQVehicleSettings_C::SpawnerSize' has a wrong offset!");

}


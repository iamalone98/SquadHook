#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RoleMainWeapon

#include "Basic.hpp"

#include "W_RoleMainWeapon_classes.hpp"
#include "W_RoleMainWeapon_parameters.hpp"


namespace SDK
{

// Function W_RoleMainWeapon.W_RoleMainWeapon_C.SubRole Pressed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQRoleSettings*                  Param_Role                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleMainWeapon_C::SubRole_Pressed__DelegateSignature(class USQRoleSettings* Param_Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleMainWeapon_C", "SubRole Pressed__DelegateSignature");

	Params::W_RoleMainWeapon_C_SubRole_Pressed__DelegateSignature Parms{};

	Parms.Param_Role = Param_Role;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RoleMainWeapon.W_RoleMainWeapon_C.SubRole Hovered__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQRoleSettings*                  Param_Role                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleMainWeapon_C::SubRole_Hovered__DelegateSignature(class USQRoleSettings* Param_Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleMainWeapon_C", "SubRole Hovered__DelegateSignature");

	Params::W_RoleMainWeapon_C_SubRole_Hovered__DelegateSignature Parms{};

	Parms.Param_Role = Param_Role;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RoleMainWeapon.W_RoleMainWeapon_C.ExecuteUbergraph_W_RoleMainWeapon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleMainWeapon_C::ExecuteUbergraph_W_RoleMainWeapon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleMainWeapon_C", "ExecuteUbergraph_W_RoleMainWeapon");

	Params::W_RoleMainWeapon_C_ExecuteUbergraph_W_RoleMainWeapon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RoleMainWeapon.W_RoleMainWeapon_C.BndEvt__Button_Main_K2Node_ComponentBoundEvent_202_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UW_RoleMainWeapon_C::BndEvt__Button_Main_K2Node_ComponentBoundEvent_202_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleMainWeapon_C", "BndEvt__Button_Main_K2Node_ComponentBoundEvent_202_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleMainWeapon.W_RoleMainWeapon_C.Refresh
// (BlueprintCallable, BlueprintEvent)

void UW_RoleMainWeapon_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleMainWeapon_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleMainWeapon.W_RoleMainWeapon_C.BndEvt__Button_Main_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_RoleMainWeapon_C::BndEvt__Button_Main_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleMainWeapon_C", "BndEvt__Button_Main_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleMainWeapon.W_RoleMainWeapon_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_RoleMainWeapon_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleMainWeapon_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleMainWeapon.W_RoleMainWeapon_C.Get Item Info
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSQInventoryData                 SQInventoryData                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Item_Count                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleMainWeapon_C::Get_Item_Info(const struct FSQInventoryData& SQInventoryData, int32* Item_Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleMainWeapon_C", "Get Item Info");

	Params::W_RoleMainWeapon_C_Get_Item_Info Parms{};

	Parms.SQInventoryData = std::move(SQInventoryData);

	UObject::ProcessEvent(Func, &Parms);

	if (Item_Count != nullptr)
		*Item_Count = Parms.Item_Count;
}


// Function W_RoleMainWeapon.W_RoleMainWeapon_C.Update Selected
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_RoleMainWeapon_C::Update_Selected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleMainWeapon_C", "Update Selected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleMainWeapon.W_RoleMainWeapon_C.Find Name of Weapon from Image
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          In_Texture                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (Parm, OutParm)
// struct FSQInventoryData                 Inventory                                              (Parm, OutParm)

void UW_RoleMainWeapon_C::Find_Name_of_Weapon_from_Image(class UObject* In_Texture, class FText* Param_Name, struct FSQInventoryData* Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleMainWeapon_C", "Find Name of Weapon from Image");

	Params::W_RoleMainWeapon_C_Find_Name_of_Weapon_from_Image Parms{};

	Parms.In_Texture = In_Texture;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);

	if (Inventory != nullptr)
		*Inventory = std::move(Parms.Inventory);
}

}


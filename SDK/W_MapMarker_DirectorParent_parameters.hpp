#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MapMarker_DirectorParent

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_MapMarker_DirectorParent.W_MapMarker_DirectorParent_C.ExecuteUbergraph_W_MapMarker_DirectorParent
// 0x00D8 (0x00D8 - 0x0000)
struct W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E1[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E2[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E3[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapMarker_DirectorMaster_C*         K2Node_DynamicCast_AsBP_Map_Marker_Director_Master; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E4[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerController_C> K2Node_DynamicCast_AsBPI_Player_Controller;        // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36E5[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent) == 0x000008, "Wrong alignment on W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent");
static_assert(sizeof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent) == 0x0000D8, "Wrong size on W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, EntryPoint) == 0x000000, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, Temp_bool_Variable) == 0x000004, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000010, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, Temp_float_Variable) == 0x000014, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, Temp_float_Variable_1) == 0x000018, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, K2Node_Event_MyGeometry) == 0x00001C, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, K2Node_Event_InDeltaTime) == 0x000054, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000078, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000080, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_GetOwner_ReturnValue_1) == 0x000090, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_IsValid_ReturnValue_2) == 0x000098, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, K2Node_DynamicCast_AsBP_Map_Marker_Director_Master) == 0x0000A0, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::K2Node_DynamicCast_AsBP_Map_Marker_Director_Master' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000B0, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, K2Node_DynamicCast_AsBPI_Player_Controller) == 0x0000B8, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::K2Node_DynamicCast_AsBPI_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C9, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, K2Node_Select_Default) == 0x0000CC, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000D0, "Member 'W_MapMarker_DirectorParent_C_ExecuteUbergraph_W_MapMarker_DirectorParent::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function W_MapMarker_DirectorParent.W_MapMarker_DirectorParent_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_MapMarker_DirectorParent_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapMarker_DirectorParent_C_Tick) == 0x000004, "Wrong alignment on W_MapMarker_DirectorParent_C_Tick");
static_assert(sizeof(W_MapMarker_DirectorParent_C_Tick) == 0x00003C, "Wrong size on W_MapMarker_DirectorParent_C_Tick");
static_assert(offsetof(W_MapMarker_DirectorParent_C_Tick, MyGeometry) == 0x000000, "Member 'W_MapMarker_DirectorParent_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_Tick, InDeltaTime) == 0x000038, "Member 'W_MapMarker_DirectorParent_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_MapMarker_DirectorParent.W_MapMarker_DirectorParent_C.Refresh Visibility
// 0x0018 (0x0018 - 0x0000)
struct W_MapMarker_DirectorParent_C_Refresh_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E6[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapMarker_DirectorParent_C_Refresh_Visibility) == 0x000008, "Wrong alignment on W_MapMarker_DirectorParent_C_Refresh_Visibility");
static_assert(sizeof(W_MapMarker_DirectorParent_C_Refresh_Visibility) == 0x000018, "Wrong size on W_MapMarker_DirectorParent_C_Refresh_Visibility");
static_assert(offsetof(W_MapMarker_DirectorParent_C_Refresh_Visibility, Temp_bool_Variable) == 0x000000, "Member 'W_MapMarker_DirectorParent_C_Refresh_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_Refresh_Visibility, Temp_byte_Variable) == 0x000001, "Member 'W_MapMarker_DirectorParent_C_Refresh_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_Refresh_Visibility, Temp_byte_Variable_1) == 0x000002, "Member 'W_MapMarker_DirectorParent_C_Refresh_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_Refresh_Visibility, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000008, "Member 'W_MapMarker_DirectorParent_C_Refresh_Visibility::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");
static_assert(offsetof(W_MapMarker_DirectorParent_C_Refresh_Visibility, K2Node_Select_Default) == 0x000010, "Member 'W_MapMarker_DirectorParent_C_Refresh_Visibility::K2Node_Select_Default' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_VoteScreen

#include "Basic.hpp"

#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function BPI_VoteScreen.BPI_VoteScreen_C.OnVoteStarted
// 0x0010 (0x0010 - 0x0000)
struct BPI_VoteScreen_C_OnVoteStarted final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VotePossible;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_VoteScreen_C_OnVoteStarted) == 0x000008, "Wrong alignment on BPI_VoteScreen_C_OnVoteStarted");
static_assert(sizeof(BPI_VoteScreen_C_OnVoteStarted) == 0x000010, "Wrong size on BPI_VoteScreen_C_OnVoteStarted");
static_assert(offsetof(BPI_VoteScreen_C_OnVoteStarted, VoteSession) == 0x000000, "Member 'BPI_VoteScreen_C_OnVoteStarted::VoteSession' has a wrong offset!");
static_assert(offsetof(BPI_VoteScreen_C_OnVoteStarted, VotePossible) == 0x000008, "Member 'BPI_VoteScreen_C_OnVoteStarted::VotePossible' has a wrong offset!");

// Function BPI_VoteScreen.BPI_VoteScreen_C.OnVoteUpdated
// 0x0010 (0x0010 - 0x0000)
struct BPI_VoteScreen_C_OnVoteUpdated final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerCurrentVoteCount;                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_VoteScreen_C_OnVoteUpdated) == 0x000008, "Wrong alignment on BPI_VoteScreen_C_OnVoteUpdated");
static_assert(sizeof(BPI_VoteScreen_C_OnVoteUpdated) == 0x000010, "Wrong size on BPI_VoteScreen_C_OnVoteUpdated");
static_assert(offsetof(BPI_VoteScreen_C_OnVoteUpdated, VoteSession) == 0x000000, "Member 'BPI_VoteScreen_C_OnVoteUpdated::VoteSession' has a wrong offset!");
static_assert(offsetof(BPI_VoteScreen_C_OnVoteUpdated, PlayerCurrentVoteCount) == 0x000008, "Member 'BPI_VoteScreen_C_OnVoteUpdated::PlayerCurrentVoteCount' has a wrong offset!");

// Function BPI_VoteScreen.BPI_VoteScreen_C.OnVoteEnded
// 0x0020 (0x0020 - 0x0000)
struct BPI_VoteScreen_C_OnVoteEnded final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQChoice                              Winner;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BPI_VoteScreen_C_OnVoteEnded) == 0x000008, "Wrong alignment on BPI_VoteScreen_C_OnVoteEnded");
static_assert(sizeof(BPI_VoteScreen_C_OnVoteEnded) == 0x000020, "Wrong size on BPI_VoteScreen_C_OnVoteEnded");
static_assert(offsetof(BPI_VoteScreen_C_OnVoteEnded, VoteSession) == 0x000000, "Member 'BPI_VoteScreen_C_OnVoteEnded::VoteSession' has a wrong offset!");
static_assert(offsetof(BPI_VoteScreen_C_OnVoteEnded, Winner) == 0x000008, "Member 'BPI_VoteScreen_C_OnVoteEnded::Winner' has a wrong offset!");

// Function BPI_VoteScreen.BPI_VoteScreen_C.SetVoteScreenActive
// 0x0001 (0x0001 - 0x0000)
struct BPI_VoteScreen_C_SetVoteScreenActive final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_VoteScreen_C_SetVoteScreenActive) == 0x000001, "Wrong alignment on BPI_VoteScreen_C_SetVoteScreenActive");
static_assert(sizeof(BPI_VoteScreen_C_SetVoteScreenActive) == 0x000001, "Wrong size on BPI_VoteScreen_C_SetVoteScreenActive");
static_assert(offsetof(BPI_VoteScreen_C_SetVoteScreenActive, Activated) == 0x000000, "Member 'BPI_VoteScreen_C_SetVoteScreenActive::Activated' has a wrong offset!");

// Function BPI_VoteScreen.BPI_VoteScreen_C.OnVoteUpdatedByID
// 0x0008 (0x0008 - 0x0000)
struct BPI_VoteScreen_C_OnVoteUpdatedByID final
{
public:
	class FName                                   ChoiceId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_VoteScreen_C_OnVoteUpdatedByID) == 0x000004, "Wrong alignment on BPI_VoteScreen_C_OnVoteUpdatedByID");
static_assert(sizeof(BPI_VoteScreen_C_OnVoteUpdatedByID) == 0x000008, "Wrong size on BPI_VoteScreen_C_OnVoteUpdatedByID");
static_assert(offsetof(BPI_VoteScreen_C_OnVoteUpdatedByID, ChoiceId) == 0x000000, "Member 'BPI_VoteScreen_C_OnVoteUpdatedByID::ChoiceId' has a wrong offset!");

}


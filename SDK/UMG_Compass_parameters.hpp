#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_Compass

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UMG_Compass.UMG_Compass_C.ExecuteUbergraph_UMG_Compass
// 0x0090 (0x0090 - 0x0000)
struct UMG_Compass_C_ExecuteUbergraph_UMG_Compass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D01[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D02[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3D03[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USQGameUserSettings* UserSettings)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D04[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Helicopter_C>     K2Node_DynamicCast_AsBPI_Helicopter;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Using_Landing_Camera_Using_Landing_Camera; // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D05[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USQGameUserSettings*              K2Node_CustomEvent_UserSettings;                   // 0x0088(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass) == 0x000008, "Wrong alignment on UMG_Compass_C_ExecuteUbergraph_UMG_Compass");
static_assert(sizeof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass) == 0x000090, "Wrong size on UMG_Compass_C_ExecuteUbergraph_UMG_Compass");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, EntryPoint) == 0x000000, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000008, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, Temp_bool_Variable) == 0x000010, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, Temp_byte_Variable) == 0x000011, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, Temp_byte_Variable_1) == 0x000012, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000048, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000058, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, K2Node_DynamicCast_AsBPI_Helicopter) == 0x000060, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::K2Node_DynamicCast_AsBPI_Helicopter' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, CallFunc_Is_Using_Landing_Camera_Using_Landing_Camera) == 0x000072, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::CallFunc_Is_Using_Landing_Camera_Using_Landing_Camera' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, CallFunc_DoesImplementInterface_ReturnValue) == 0x000073, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, K2Node_Select_Default) == 0x000074, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, K2Node_Event_IsDesignTime) == 0x000075, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000078, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x000080, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ExecuteUbergraph_UMG_Compass, K2Node_CustomEvent_UserSettings) == 0x000088, "Member 'UMG_Compass_C_ExecuteUbergraph_UMG_Compass::K2Node_CustomEvent_UserSettings' has a wrong offset!");

// Function UMG_Compass.UMG_Compass_C.OnUserSettingsChanged
// 0x0008 (0x0008 - 0x0000)
struct UMG_Compass_C_OnUserSettingsChanged final
{
public:
	const class USQGameUserSettings*              UserSettings;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Compass_C_OnUserSettingsChanged) == 0x000008, "Wrong alignment on UMG_Compass_C_OnUserSettingsChanged");
static_assert(sizeof(UMG_Compass_C_OnUserSettingsChanged) == 0x000008, "Wrong size on UMG_Compass_C_OnUserSettingsChanged");
static_assert(offsetof(UMG_Compass_C_OnUserSettingsChanged, UserSettings) == 0x000000, "Member 'UMG_Compass_C_OnUserSettingsChanged::UserSettings' has a wrong offset!");

// Function UMG_Compass.UMG_Compass_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_Compass_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_Compass_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_Compass_C_PreConstruct");
static_assert(sizeof(UMG_Compass_C_PreConstruct) == 0x000001, "Wrong size on UMG_Compass_C_PreConstruct");
static_assert(offsetof(UMG_Compass_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_Compass_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_Compass.UMG_Compass_C.ChangeDisplayMode
// 0x0220 (0x0220 - 0x0000)
struct UMG_Compass_C_ChangeDisplayMode final
{
public:
	bool                                          Param_bTopScreenView;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D06[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D07[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D08[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D09[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0A[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0B[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0C[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_2;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0D[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0E[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVerticalAlignment                            Temp_byte_Variable_2;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_3;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0F[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_8;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_9;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D10[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_10;                           // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_11;                           // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D11[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_12;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_13;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D12[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D13[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D14[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_Compass_Marker_C*                  K2Node_DynamicCast_AsUMG_Compass_Marker;           // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D15[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D16[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_5;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_6;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_7;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_8;                           // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            K2Node_Select_Default_9;                           // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D17[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_10;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_11;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0180(0x0010)(NoDestructor)
	struct FVector2D                              K2Node_Select_Default_12;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_13;                          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_14;                          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D18[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D19[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1A[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_15;                          // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_5;           // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_6;           // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Compass_C_ChangeDisplayMode) == 0x000008, "Wrong alignment on UMG_Compass_C_ChangeDisplayMode");
static_assert(sizeof(UMG_Compass_C_ChangeDisplayMode) == 0x000220, "Wrong size on UMG_Compass_C_ChangeDisplayMode");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Param_bTopScreenView) == 0x000000, "Member 'UMG_Compass_C_ChangeDisplayMode::Param_bTopScreenView' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable) == 0x000004, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_1) == 0x00000C, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable) == 0x000014, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_float_Variable) == 0x000018, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_float_Variable_1) == 0x00001C, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_1) == 0x000020, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_2) == 0x000024, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_3) == 0x00002C, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_2) == 0x000034, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_3) == 0x000035, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_byte_Variable) == 0x000036, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_byte_Variable_1) == 0x000037, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_4) == 0x000038, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_4) == 0x00003C, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_5) == 0x000044, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_5) == 0x00004C, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_float_Variable_2) == 0x000050, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_float_Variable_3) == 0x000054, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_6) == 0x000058, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_object_Variable) == 0x000060, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_object_Variable_1) == 0x000068, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_7) == 0x000070, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_object_Variable_2) == 0x000078, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_object_Variable_3) == 0x000080, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_8) == 0x000088, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_6) == 0x00008C, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_7) == 0x000094, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_9) == 0x00009C, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_float_Variable_4) == 0x0000A0, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_float_Variable_5) == 0x0000A4, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_10) == 0x0000A8, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_byte_Variable_2) == 0x0000A9, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_byte_Variable_3) == 0x0000AA, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_11) == 0x0000AB, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_12) == 0x0000AC, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_8) == 0x0000B0, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_9) == 0x0000B8, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_13) == 0x0000C0, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_10) == 0x0000C4, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_11) == 0x0000CC, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_14) == 0x0000D4, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_12) == 0x0000D8, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_struct_Variable_13) == 0x0000E0, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_int_Array_Index_Variable) == 0x0000E8, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000F0, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default) == 0x0000F8, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_bool_Variable_15) == 0x0000FC, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_1) == 0x000100, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_2) == 0x000108, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000110, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_3) == 0x000118, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_Array_Get_Item) == 0x000120, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_DynamicCast_AsUMG_Compass_Marker) == 0x000130, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_DynamicCast_AsUMG_Compass_Marker' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000140, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_4) == 0x000148, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_5) == 0x000150, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_6) == 0x000158, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_7) == 0x000160, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_8) == 0x000168, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_9) == 0x00016C, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_10) == 0x000170, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_11) == 0x000178, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_MakeStruct_Anchors) == 0x000180, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_12) == 0x000190, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000198, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_13) == 0x0001A0, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_14) == 0x0001A8, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0001B0, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x0001B8, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, Temp_int_Loop_Counter_Variable) == 0x0001C0, "Member 'UMG_Compass_C_ChangeDisplayMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_Less_IntInt_ReturnValue) == 0x0001C4, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_Add_IntInt_ReturnValue) == 0x0001C8, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0001D0, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_MakeStruct_Margin) == 0x0001D8, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_MakeStruct_Margin_1) == 0x0001E8, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, K2Node_Select_Default_15) == 0x0001F8, "Member 'UMG_Compass_C_ChangeDisplayMode::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000208, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_SlotAsCanvasSlot_ReturnValue_5) == 0x000210, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_SlotAsCanvasSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UMG_Compass_C_ChangeDisplayMode, CallFunc_SlotAsCanvasSlot_ReturnValue_6) == 0x000218, "Member 'UMG_Compass_C_ChangeDisplayMode::CallFunc_SlotAsCanvasSlot_ReturnValue_6' has a wrong offset!");

}


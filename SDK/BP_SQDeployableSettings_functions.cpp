#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQDeployableSettings

#include "Basic.hpp"

#include "BP_SQDeployableSettings_classes.hpp"
#include "BP_SQDeployableSettings_parameters.hpp"


namespace SDK
{

// Function BP_SQDeployableSettings.BP_SQDeployableSettings_C.HasTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESQDeployableTag                        In_Tag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Out_Has_Tag                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SQDeployableSettings_C::HasTag(ESQDeployableTag In_Tag, bool* Out_Has_Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSettings_C", "HasTag");

	Params::BP_SQDeployableSettings_C_HasTag Parms{};

	Parms.In_Tag = In_Tag;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Has_Tag != nullptr)
		*Out_Has_Tag = Parms.Out_Has_Tag;
}


// Function BP_SQDeployableSettings.BP_SQDeployableSettings_C.HasTags
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<ESQDeployableTag>                In_Tags                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    In_All                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Out_Has_Tag                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SQDeployableSettings_C::HasTags(TArray<ESQDeployableTag>& In_Tags, bool In_All, bool* Out_Has_Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSettings_C", "HasTags");

	Params::BP_SQDeployableSettings_C_HasTags Parms{};

	Parms.In_Tags = std::move(In_Tags);
	Parms.In_All = In_All;

	UObject::ProcessEvent(Func, &Parms);

	In_Tags = std::move(Parms.In_Tags);

	if (Out_Has_Tag != nullptr)
		*Out_Has_Tag = Parms.Out_Has_Tag;
}


// Function BP_SQDeployableSettings.BP_SQDeployableSettings_C.IsConcernedByStrategy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSQDeployableGroupingStrategy    InGroupingStrategy                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Param_IsConcernedByStrategy                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SQDeployableSettings_C::IsConcernedByStrategy(const struct FSQDeployableGroupingStrategy& InGroupingStrategy, bool* Param_IsConcernedByStrategy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSettings_C", "IsConcernedByStrategy");

	Params::BP_SQDeployableSettings_C_IsConcernedByStrategy Parms{};

	Parms.InGroupingStrategy = std::move(InGroupingStrategy);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsConcernedByStrategy != nullptr)
		*Param_IsConcernedByStrategy = Parms.Param_IsConcernedByStrategy;
}


// Function BP_SQDeployableSettings.BP_SQDeployableSettings_C.GetDeployableEntry
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSQDeployableEntry               DeployableEntry                                        (Parm, OutParm, HasGetValueTypeHash)

void UBP_SQDeployableSettings_C::GetDeployableEntry(bool* Success, struct FSQDeployableEntry* DeployableEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSettings_C", "GetDeployableEntry");

	Params::BP_SQDeployableSettings_C_GetDeployableEntry Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (DeployableEntry != nullptr)
		*DeployableEntry = std::move(Parms.DeployableEntry);
}


// Function BP_SQDeployableSettings.BP_SQDeployableSettings_C.TryGetDeployableWithLayer
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USQLayer*                         InLayer                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             OutDeployable                                          (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQDeployableSettings_C::TryGetDeployableWithLayer(const class USQLayer* InLayer, TSoftClassPtr<class UClass>* OutDeployable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSettings_C", "TryGetDeployableWithLayer");

	Params::BP_SQDeployableSettings_C_TryGetDeployableWithLayer Parms{};

	Parms.InLayer = InLayer;

	UObject::ProcessEvent(Func, &Parms);

	if (OutDeployable != nullptr)
		*OutDeployable = Parms.OutDeployable;

	return Parms.ReturnValue;
}

}


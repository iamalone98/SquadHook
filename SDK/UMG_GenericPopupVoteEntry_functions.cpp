#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_GenericPopupVoteEntry

#include "Basic.hpp"

#include "UMG_GenericPopupVoteEntry_classes.hpp"
#include "UMG_GenericPopupVoteEntry_parameters.hpp"


namespace SDK
{

// Function UMG_GenericPopupVoteEntry.UMG_GenericPopupVoteEntry_C.OnTryMakeVote__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             KeyPressed                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FSQChoice                        Choice                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UUMG_GenericPopupVoteEntry_C*     ThisWidgetEntry                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_GenericPopupVoteEntry_C::OnTryMakeVote__DelegateSignature(const struct FKey& KeyPressed, const struct FSQChoice& Choice, class UUMG_GenericPopupVoteEntry_C* ThisWidgetEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_GenericPopupVoteEntry_C", "OnTryMakeVote__DelegateSignature");

	Params::UMG_GenericPopupVoteEntry_C_OnTryMakeVote__DelegateSignature Parms{};

	Parms.KeyPressed = std::move(KeyPressed);
	Parms.Choice = std::move(Choice);
	Parms.ThisWidgetEntry = ThisWidgetEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_GenericPopupVoteEntry.UMG_GenericPopupVoteEntry_C.ExecuteUbergraph_UMG_GenericPopupVoteEntry
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_GenericPopupVoteEntry_C::ExecuteUbergraph_UMG_GenericPopupVoteEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_GenericPopupVoteEntry_C", "ExecuteUbergraph_UMG_GenericPopupVoteEntry");

	Params::UMG_GenericPopupVoteEntry_C_ExecuteUbergraph_UMG_GenericPopupVoteEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_GenericPopupVoteEntry.UMG_GenericPopupVoteEntry_C.On Vote Started
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSessionClient*             VoteSession                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_GenericPopupVoteEntry_C::On_Vote_Started(class USQVoteSessionClient* VoteSession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_GenericPopupVoteEntry_C", "On Vote Started");

	Params::UMG_GenericPopupVoteEntry_C_On_Vote_Started Parms{};

	Parms.VoteSession = VoteSession;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_GenericPopupVoteEntry.UMG_GenericPopupVoteEntry_C.On Vote Updated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSessionClient*             VoteSession                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerCurrentVoteCount                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_GenericPopupVoteEntry_C::On_Vote_Updated(class USQVoteSessionClient* VoteSession, int32 PlayerCurrentVoteCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_GenericPopupVoteEntry_C", "On Vote Updated");

	Params::UMG_GenericPopupVoteEntry_C_On_Vote_Updated Parms{};

	Parms.VoteSession = VoteSession;
	Parms.PlayerCurrentVoteCount = PlayerCurrentVoteCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_GenericPopupVoteEntry.UMG_GenericPopupVoteEntry_C.On Vote Ended
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSession*                   VoteSession                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSQChoice                        Winner                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUMG_GenericPopupVoteEntry_C::On_Vote_Ended(class USQVoteSession* VoteSession, const struct FSQChoice& Winner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_GenericPopupVoteEntry_C", "On Vote Ended");

	Params::UMG_GenericPopupVoteEntry_C_On_Vote_Ended Parms{};

	Parms.VoteSession = VoteSession;
	Parms.Winner = std::move(Winner);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_GenericPopupVoteEntry.UMG_GenericPopupVoteEntry_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUMG_GenericPopupVoteEntry_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_GenericPopupVoteEntry_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_GenericPopupVoteEntry.UMG_GenericPopupVoteEntry_C.UpdateVotes
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSQVoteSessionChoiceInfo         In_Choice_State                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FSQVoteSessionInfo               In_Vote_State                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UUMG_GenericPopupVoteEntry_C::UpdateVotes(const struct FSQVoteSessionChoiceInfo& In_Choice_State, const struct FSQVoteSessionInfo& In_Vote_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_GenericPopupVoteEntry_C", "UpdateVotes");

	Params::UMG_GenericPopupVoteEntry_C_UpdateVotes Parms{};

	Parms.In_Choice_State = std::move(In_Choice_State);
	Parms.In_Vote_State = std::move(In_Vote_State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_GenericPopupVoteEntry.UMG_GenericPopupVoteEntry_C.UpdateResult
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Winner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_GenericPopupVoteEntry_C::UpdateResult(bool Is_Winner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_GenericPopupVoteEntry_C", "UpdateResult");

	Params::UMG_GenericPopupVoteEntry_C_UpdateResult Parms{};

	Parms.Is_Winner = Is_Winner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_GenericPopupVoteEntry.UMG_GenericPopupVoteEntry_C.StartVotes
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSessionClient*             In_Vote_Session                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_GenericPopupVoteEntry_C::StartVotes(class USQVoteSessionClient* In_Vote_Session)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_GenericPopupVoteEntry_C", "StartVotes");

	Params::UMG_GenericPopupVoteEntry_C_StartVotes Parms{};

	Parms.In_Vote_Session = In_Vote_Session;

	UObject::ProcessEvent(Func, &Parms);
}

}


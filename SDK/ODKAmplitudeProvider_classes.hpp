#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ODKAmplitudeProvider

#include "Basic.hpp"

#include "ODKAnalyticsProvider_classes.hpp"


namespace SDK
{

// Class ODKAmplitudeProvider.ODKAmplitudeProviderConfig
// 0x0050 (0x0090 - 0x0040)
class UODKAmplitudeProviderConfig : public UODKAnalyticsProviderConfig
{
public:
	class FString                                 ApiKey;                                            // 0x0040(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BaseUrl;                                           // 0x0050(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlanBranch;                                        // 0x0060(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlanSource;                                        // 0x0070(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlanVersion;                                       // 0x0080(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ODKAmplitudeProviderConfig">();
	}
	static class UODKAmplitudeProviderConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UODKAmplitudeProviderConfig>();
	}
};
static_assert(alignof(UODKAmplitudeProviderConfig) == 0x000008, "Wrong alignment on UODKAmplitudeProviderConfig");
static_assert(sizeof(UODKAmplitudeProviderConfig) == 0x000090, "Wrong size on UODKAmplitudeProviderConfig");
static_assert(offsetof(UODKAmplitudeProviderConfig, ApiKey) == 0x000040, "Member 'UODKAmplitudeProviderConfig::ApiKey' has a wrong offset!");
static_assert(offsetof(UODKAmplitudeProviderConfig, BaseUrl) == 0x000050, "Member 'UODKAmplitudeProviderConfig::BaseUrl' has a wrong offset!");
static_assert(offsetof(UODKAmplitudeProviderConfig, PlanBranch) == 0x000060, "Member 'UODKAmplitudeProviderConfig::PlanBranch' has a wrong offset!");
static_assert(offsetof(UODKAmplitudeProviderConfig, PlanSource) == 0x000070, "Member 'UODKAmplitudeProviderConfig::PlanSource' has a wrong offset!");
static_assert(offsetof(UODKAmplitudeProviderConfig, PlanVersion) == 0x000080, "Member 'UODKAmplitudeProviderConfig::PlanVersion' has a wrong offset!");

// Class ODKAmplitudeProvider.ODKAmplitudeProviderConfig_Dev
// 0x0000 (0x0090 - 0x0090)
class UODKAmplitudeProviderConfig_Dev final : public UODKAmplitudeProviderConfig
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ODKAmplitudeProviderConfig_Dev">();
	}
	static class UODKAmplitudeProviderConfig_Dev* GetDefaultObj()
	{
		return GetDefaultObjImpl<UODKAmplitudeProviderConfig_Dev>();
	}
};
static_assert(alignof(UODKAmplitudeProviderConfig_Dev) == 0x000008, "Wrong alignment on UODKAmplitudeProviderConfig_Dev");
static_assert(sizeof(UODKAmplitudeProviderConfig_Dev) == 0x000090, "Wrong size on UODKAmplitudeProviderConfig_Dev");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BreathingSoundEffect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BreathingSoundEffect.BP_BreathingSoundEffect_C
// 0x0030 (0x0060 - 0x0030)
class UBP_BreathingSoundEffect_C final : public USQLocalAudioPlayer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USoundBase*                             Calm;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Medium;                                            // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Heavy;                                             // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Drowning;                                          // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ADSFocusBreathingMinimumTimeStationary;            // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeStationary;                                    // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BreathingSoundEffect(int32 EntryPoint);
	void BP_UpdateAudioComponent(float DeltaTime, class UAudioComponent* AudioComponent, class ASQSoldier* SoldierToApplyTo);
	void BP_InitAudioEffect(class UAudioComponent* AudioComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BreathingSoundEffect_C">();
	}
	static class UBP_BreathingSoundEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BreathingSoundEffect_C>();
	}
};
static_assert(alignof(UBP_BreathingSoundEffect_C) == 0x000008, "Wrong alignment on UBP_BreathingSoundEffect_C");
static_assert(sizeof(UBP_BreathingSoundEffect_C) == 0x000060, "Wrong size on UBP_BreathingSoundEffect_C");
static_assert(offsetof(UBP_BreathingSoundEffect_C, UberGraphFrame) == 0x000030, "Member 'UBP_BreathingSoundEffect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_BreathingSoundEffect_C, Calm) == 0x000038, "Member 'UBP_BreathingSoundEffect_C::Calm' has a wrong offset!");
static_assert(offsetof(UBP_BreathingSoundEffect_C, Medium) == 0x000040, "Member 'UBP_BreathingSoundEffect_C::Medium' has a wrong offset!");
static_assert(offsetof(UBP_BreathingSoundEffect_C, Heavy) == 0x000048, "Member 'UBP_BreathingSoundEffect_C::Heavy' has a wrong offset!");
static_assert(offsetof(UBP_BreathingSoundEffect_C, Drowning) == 0x000050, "Member 'UBP_BreathingSoundEffect_C::Drowning' has a wrong offset!");
static_assert(offsetof(UBP_BreathingSoundEffect_C, ADSFocusBreathingMinimumTimeStationary) == 0x000058, "Member 'UBP_BreathingSoundEffect_C::ADSFocusBreathingMinimumTimeStationary' has a wrong offset!");
static_assert(offsetof(UBP_BreathingSoundEffect_C, TimeStationary) == 0x00005C, "Member 'UBP_BreathingSoundEffect_C::TimeStationary' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarkerWidget_HAB

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C
// 0x0028 (0x02A8 - 0x0280)
class UBP_MarkerWidget_HAB_C final : public USQMapIconWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 HABIcon;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpawnBack_IMG;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpawnFront_IMG;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         StateUpdateTime;                                   // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MarkerWidget_HAB(int32 EntryPoint);
	void UpdateStateEvent();
	void Construct();
	void UpdateSelectSpawnVisibility();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SelectSpawn(bool Commit);
	struct FEventReply OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent);
	struct FSlateBrush UpdateSpawnBrush();
	void UnselectSpawn();

	void IsSelected(bool* Selected) const;
	void GetHAB(class ABP_Deployable_Hab_C** HAB) const;
	void GetSpawn(class ASQGameSpawn** Spawn) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MarkerWidget_HAB_C">();
	}
	static class UBP_MarkerWidget_HAB_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MarkerWidget_HAB_C>();
	}
};
static_assert(alignof(UBP_MarkerWidget_HAB_C) == 0x000008, "Wrong alignment on UBP_MarkerWidget_HAB_C");
static_assert(sizeof(UBP_MarkerWidget_HAB_C) == 0x0002A8, "Wrong size on UBP_MarkerWidget_HAB_C");
static_assert(offsetof(UBP_MarkerWidget_HAB_C, UberGraphFrame) == 0x000280, "Member 'UBP_MarkerWidget_HAB_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_HAB_C, HABIcon) == 0x000288, "Member 'UBP_MarkerWidget_HAB_C::HABIcon' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_HAB_C, SpawnBack_IMG) == 0x000290, "Member 'UBP_MarkerWidget_HAB_C::SpawnBack_IMG' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_HAB_C, SpawnFront_IMG) == 0x000298, "Member 'UBP_MarkerWidget_HAB_C::SpawnFront_IMG' has a wrong offset!");
static_assert(offsetof(UBP_MarkerWidget_HAB_C, StateUpdateTime) == 0x0002A0, "Member 'UBP_MarkerWidget_HAB_C::StateUpdateTime' has a wrong offset!");

}


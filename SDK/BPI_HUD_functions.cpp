#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_HUD

#include "Basic.hpp"

#include "BPI_HUD_classes.hpp"
#include "BPI_HUD_parameters.hpp"


namespace SDK
{

// Function BPI_HUD.BPI_HUD_C.Open Deployment
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Open_Deployment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Open Deployment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Create Radial Menu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Model                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Close_Command                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::Create_Radial_Menu(class UClass* Model, class FName Close_Command, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Create Radial Menu");

	Params::BPI_HUD_C_Create_Radial_Menu Parms{};

	Parms.Model = Model;
	Parms.Close_Command = Close_Command;
	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HUD.BPI_HUD_C.Get Radial Menu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBaseRadialMenu_C*                Radial_Menu                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::Get_Radial_Menu(class UBaseRadialMenu_C** Radial_Menu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Get Radial Menu");

	Params::BPI_HUD_C_Get_Radial_Menu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radial_Menu != nullptr)
		*Radial_Menu = Parms.Radial_Menu;
}


// Function BPI_HUD.BPI_HUD_C.Show 3D Marker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQMapMarker*                     Marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::Show_3D_Marker(class ASQMapMarker* Marker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Show 3D Marker");

	Params::BPI_HUD_C_Show_3D_Marker Parms{};

	Parms.Marker = Marker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HUD.BPI_HUD_C.Get Main Menus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUMG_MenuBase_C*                  Deployment                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUMG_MenuBase_C*                  Command                                                (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUMG_MenuBase_C*                  Roaming                                                (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::Get_Main_Menus(class UUMG_MenuBase_C** Deployment, class UUMG_MenuBase_C** Command, class UUMG_MenuBase_C** Roaming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Get Main Menus");

	Params::BPI_HUD_C_Get_Main_Menus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Deployment != nullptr)
		*Deployment = Parms.Deployment;

	if (Command != nullptr)
		*Command = Parms.Command;

	if (Roaming != nullptr)
		*Roaming = Parms.Roaming;
}


// Function BPI_HUD.BPI_HUD_C.Show End Scoreboard
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Show_End_Scoreboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Show End Scoreboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Get Is Showing Settings Menu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Showing_Main_Menu                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HUD_C::Get_Is_Showing_Settings_Menu(bool* Showing_Main_Menu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Get Is Showing Settings Menu");

	Params::BPI_HUD_C_Get_Is_Showing_Settings_Menu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Showing_Main_Menu != nullptr)
		*Showing_Main_Menu = Parms.Showing_Main_Menu;
}


// Function BPI_HUD.BPI_HUD_C.Get Map Core
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_SQMapCore_C*                   Map_Core                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::Get_Map_Core(class UW_SQMapCore_C** Map_Core)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Get Map Core");

	Params::BPI_HUD_C_Get_Map_Core Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Map_Core != nullptr)
		*Map_Core = Parms.Map_Core;
}


// Function BPI_HUD.BPI_HUD_C.Get Map Component
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQCoreStateMapComponent*         Map_Component                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::Get_Map_Component(class USQCoreStateMapComponent** Map_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Get Map Component");

	Params::BPI_HUD_C_Get_Map_Component Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Map_Component != nullptr)
		*Map_Component = Parms.Map_Component;
}


// Function BPI_HUD.BPI_HUD_C.Menu Toggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UUMG_MenuBase_C*                  In_Menu                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Show_Mouse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HUD_C::Menu_Toggle(bool Instant, class UUMG_MenuBase_C* In_Menu, bool Show_Mouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Menu Toggle");

	Params::BPI_HUD_C_Menu_Toggle Parms{};

	Parms.Instant = Instant;
	Parms.In_Menu = In_Menu;
	Parms.Show_Mouse = Show_Mouse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HUD.BPI_HUD_C.Clear All Floating Widgets
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Clear_All_Floating_Widgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Clear All Floating Widgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Toggle Main Menu
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Toggle_Main_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Toggle Main Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Menu Close
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUMG_MenuBase_C*                  Menu                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::Menu_Close(class UUMG_MenuBase_C* Menu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Menu Close");

	Params::BPI_HUD_C_Menu_Close Parms{};

	Parms.Menu = Menu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HUD.BPI_HUD_C.End Match
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Winning_Team                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Losing_Team                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Winning_Tickets                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Loser_Tickets                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::End_Match(int32 Winning_Team, int32 Losing_Team, int32 Winning_Tickets, int32 Loser_Tickets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "End Match");

	Params::BPI_HUD_C_End_Match Parms{};

	Parms.Winning_Team = Winning_Team;
	Parms.Losing_Team = Losing_Team;
	Parms.Winning_Tickets = Winning_Tickets;
	Parms.Loser_Tickets = Loser_Tickets;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HUD.BPI_HUD_C.Create SL Menu
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Create_SL_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Create SL Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Destroy SL Menu
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Destroy_SL_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Destroy SL Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Close Radial
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Close_Radial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Close Radial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Show Leaderboard
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HUD_C::Show_Leaderboard(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Show Leaderboard");

	Params::BPI_HUD_C_Show_Leaderboard Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HUD.BPI_HUD_C.Toggle Leaderboard
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Toggle_Leaderboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Toggle Leaderboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Get Scoreboard
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQScoreboard*                    ScoreBoard                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::Get_Scoreboard(class USQScoreboard** ScoreBoard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Get Scoreboard");

	Params::BPI_HUD_C_Get_Scoreboard Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ScoreBoard != nullptr)
		*ScoreBoard = Parms.ScoreBoard;
}


// Function BPI_HUD.BPI_HUD_C.Set Commander Max Cooldowns
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Set_Commander_Max_Cooldowns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Set Commander Max Cooldowns");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Player Died
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Player_Died()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Player Died");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Get UI Input Stacks
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSQInputState>            Input_Stacks                                           (Parm, OutParm, ContainsInstancedReference)

void IBPI_HUD_C::Get_UI_Input_Stacks(TArray<struct FSQInputState>* Input_Stacks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Get UI Input Stacks");

	Params::BPI_HUD_C_Get_UI_Input_Stacks Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Input_Stacks != nullptr)
		*Input_Stacks = std::move(Parms.Input_Stacks);
}


// Function BPI_HUD.BPI_HUD_C.Get Interactable Widget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQInteractableWidgetList*        Interact_Widget                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::Get_Interactable_Widget(class USQInteractableWidgetList** Interact_Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Get Interactable Widget");

	Params::BPI_HUD_C_Get_Interactable_Widget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Interact_Widget != nullptr)
		*Interact_Widget = Parms.Interact_Widget;
}


// Function BPI_HUD.BPI_HUD_C.Close Menus
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Close_Menus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Close Menus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Destroy Radial
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Destroy_Radial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Destroy Radial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Zoom In Map
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Zoom_In_Map()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Zoom In Map");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.Get Showing Main Menu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Showing                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_HUD_C::Get_Showing_Main_Menu(bool* Showing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Get Showing Main Menu");

	Params::BPI_HUD_C_Get_Showing_Main_Menu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Showing != nullptr)
		*Showing = Parms.Showing;
}


// Function BPI_HUD.BPI_HUD_C.Zoom In Map Wheel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HUD_C::Zoom_In_Map_Wheel(float Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Zoom In Map Wheel");

	Params::BPI_HUD_C_Zoom_In_Map_Wheel Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_HUD.BPI_HUD_C.Start Match
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::Start_Match()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "Start Match");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.CreateEmoteWheel
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::CreateEmoteWheel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "CreateEmoteWheel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_HUD.BPI_HUD_C.DestroyEmoteWheel
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_HUD_C::DestroyEmoteWheel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HUD_C", "DestroyEmoteWheel");

	UObject::ProcessEvent(Func, nullptr);
}

}


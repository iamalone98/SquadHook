#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioWindow

#include "Basic.hpp"

#include "MediaAssets_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AudioWindow.AudioWindow_C.ExecuteUbergraph_AudioWindow
// 0x01E0 (0x01E0 - 0x0000)
struct AudioWindow_C_ExecuteUbergraph_AudioWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D5[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D6[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D7[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_2;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_3;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_4;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_5;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_6;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_7;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_8;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_9;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_10;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_11;  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_12;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_13;  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_14;  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ButtonNumber;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D8[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_GraphicsToggle_C*         K2Node_ComponentBoundEvent_ToggleItem;             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bSelected_3;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D9[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_TickBox_C*                K2Node_ComponentBoundEvent_Button_3;               // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bSelected_2;            // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DA[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_TickBox_C*                K2Node_ComponentBoundEvent_Button_2;               // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bSelected_1;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DB[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_TickBox_C*                K2Node_ComponentBoundEvent_Button_1;               // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_10;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_9;                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_8;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_7;                // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_6;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_5;                // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_4;                // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMusicPlayer_C*>                 CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0120(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMusicPlayer_C*                         CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DC[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_3;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_2;                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_15;  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DD[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_16;  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_17;  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bSelected;              // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DE[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_TickBox_C*                K2Node_ComponentBoundEvent_Button;                 // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DF[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_18;  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_Option_1;               // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Index_1;                // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E0[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_19;  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_Option;                 // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Index;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E1[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_20;  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_ExecuteUbergraph_AudioWindow) == 0x000008, "Wrong alignment on AudioWindow_C_ExecuteUbergraph_AudioWindow");
static_assert(sizeof(AudioWindow_C_ExecuteUbergraph_AudioWindow) == 0x0001E0, "Wrong size on AudioWindow_C_ExecuteUbergraph_AudioWindow");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, EntryPoint) == 0x000000, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_IsVisible_ReturnValue) == 0x000004, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, Temp_int_Variable) == 0x000008, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, Temp_int_Variable_1) == 0x00000C, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, Temp_int_Variable_2) == 0x000010, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, Temp_bool_Has_Been_Initd_Variable) == 0x000014, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, Temp_bool_IsClosed_Variable) == 0x000028, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000030, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x000038, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_2) == 0x000040, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_3) == 0x000048, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_4) == 0x000050, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_5) == 0x000058, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_6) == 0x000060, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_7) == 0x000068, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_8) == 0x000070, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_9) == 0x000078, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_10) == 0x000080, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_11) == 0x000088, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_12) == 0x000090, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_13) == 0x000098, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_14) == 0x0000A0, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_ButtonNumber) == 0x0000A8, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_ButtonNumber' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_ToggleItem) == 0x0000B0, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_ToggleItem' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_bSelected_3) == 0x0000B8, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_bSelected_3' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Button_3) == 0x0000C0, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_Select_Default) == 0x0000C8, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_bSelected_2) == 0x0000CD, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_bSelected_2' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Button_2) == 0x0000D0, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_bSelected_1) == 0x0000D8, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_bSelected_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Button_1) == 0x0000E0, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value_10) == 0x0000E8, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value_10' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value_9) == 0x0000EC, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value_9' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F0, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000F4, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value_8) == 0x0000F8, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value_8' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value_7) == 0x0000FC, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value_7' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000100, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000104, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value_6) == 0x000108, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value_6' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value_5) == 0x00010C, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value_5' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000110, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000114, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value_4) == 0x000118, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value_4' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x00011C, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000120, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Array_Get_Item) == 0x000130, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000138, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value_3) == 0x00013C, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value_3' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value_2) == 0x000140, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value_2' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x000144, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x000148, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value_1) == 0x00014C, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_15) == 0x000150, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x000158, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_16) == 0x000160, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Value) == 0x000168, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x00016C, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_17) == 0x000170, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000178, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_bSelected) == 0x00017C, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_bSelected' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Button) == 0x000180, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Add_FloatFloat_ReturnValue) == 0x000188, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_Not_PreBool_ReturnValue) == 0x00018C, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_18) == 0x000190, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Option_1) == 0x000198, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Option_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Index_1) == 0x0001A8, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Index_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_19) == 0x0001B0, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Option) == 0x0001B8, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Option' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, K2Node_ComponentBoundEvent_Index) == 0x0001C8, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::K2Node_ComponentBoundEvent_Index' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_GetSquadGameUserSettings_ReturnValue_20) == 0x0001D0, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_GetSquadGameUserSettings_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_ExecuteUbergraph_AudioWindow, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001D8, "Member 'AudioWindow_C_ExecuteUbergraph_AudioWindow::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct AudioWindow_C_BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature final
{
public:
	class FString                                 Option;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on AudioWindow_C_BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature) == 0x000018, "Wrong size on AudioWindow_C_BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature, Option) == 0x000000, "Member 'AudioWindow_C_BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature::Option' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature, Param_Index) == 0x000010, "Member 'AudioWindow_C_BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct AudioWindow_C_BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature final
{
public:
	class FString                                 Option;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on AudioWindow_C_BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000018, "Wrong size on AudioWindow_C_BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature, Option) == 0x000000, "Member 'AudioWindow_C_BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature::Option' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature, Param_Index) == 0x000010, "Member 'AudioWindow_C_BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature::Param_Index' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_TickBox_C*                Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on AudioWindow_C_BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000010, "Wrong size on AudioWindow_C_BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'AudioWindow_C_BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'AudioWindow_C_BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__PrioritySpeakerDucking_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__PrioritySpeakerDucking_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__PrioritySpeakerDucking_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__PrioritySpeakerDucking_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__PrioritySpeakerDucking_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__PrioritySpeakerDucking_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__PrioritySpeakerDucking_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__PrioritySpeakerDucking_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__SquadVoiceBias_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__SquadVoiceBias_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__SquadVoiceBias_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__SquadVoiceBias_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__SquadVoiceBias_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__SquadVoiceBias_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__SquadVoiceBias_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__SquadVoiceBias_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__CommandVoiceBias_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__CommandVoiceBias_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__CommandVoiceBias_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__CommandVoiceBias_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__CommandVoiceBias_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__CommandVoiceBias_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__CommandVoiceBias_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__CommandVoiceBias_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__MUSICNEW_K2Node_ComponentBoundEvent_27_OnCaptureEnd__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__MUSICNEW_K2Node_ComponentBoundEvent_27_OnCaptureEnd__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__MUSICNEW_K2Node_ComponentBoundEvent_27_OnCaptureEnd__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__MUSICNEW_K2Node_ComponentBoundEvent_27_OnCaptureEnd__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__MUSICNEW_K2Node_ComponentBoundEvent_27_OnCaptureEnd__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__MUSICNEW_K2Node_ComponentBoundEvent_27_OnCaptureEnd__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__MUSICNEW_K2Node_ComponentBoundEvent_27_OnCaptureEnd__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__MUSICNEW_K2Node_ComponentBoundEvent_27_OnCaptureEnd__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__LOCALVOICENEW_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__LOCALVOICENEW_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__LOCALVOICENEW_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__LOCALVOICENEW_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__LOCALVOICENEW_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__LOCALVOICENEW_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__LOCALVOICENEW_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__LOCALVOICENEW_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__VOICENEW_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__VOICENEW_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__VOICENEW_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__VOICENEW_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__VOICENEW_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__VOICENEW_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__VOICENEW_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__VOICENEW_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__COMMANDVOICENEW_K2Node_ComponentBoundEvent_27_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__COMMANDVOICENEW_K2Node_ComponentBoundEvent_27_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__COMMANDVOICENEW_K2Node_ComponentBoundEvent_27_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__COMMANDVOICENEW_K2Node_ComponentBoundEvent_27_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__COMMANDVOICENEW_K2Node_ComponentBoundEvent_27_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__COMMANDVOICENEW_K2Node_ComponentBoundEvent_27_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__COMMANDVOICENEW_K2Node_ComponentBoundEvent_27_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__COMMANDVOICENEW_K2Node_ComponentBoundEvent_27_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__OUTOFGAMENEW_K2Node_ComponentBoundEvent_150_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__OUTOFGAMENEW_K2Node_ComponentBoundEvent_150_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__OUTOFGAMENEW_K2Node_ComponentBoundEvent_150_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__OUTOFGAMENEW_K2Node_ComponentBoundEvent_150_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__OUTOFGAMENEW_K2Node_ComponentBoundEvent_150_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__OUTOFGAMENEW_K2Node_ComponentBoundEvent_150_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__OUTOFGAMENEW_K2Node_ComponentBoundEvent_150_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__OUTOFGAMENEW_K2Node_ComponentBoundEvent_150_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__UINEW_K2Node_ComponentBoundEvent_82_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__UINEW_K2Node_ComponentBoundEvent_82_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__UINEW_K2Node_ComponentBoundEvent_82_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__UINEW_K2Node_ComponentBoundEvent_82_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__UINEW_K2Node_ComponentBoundEvent_82_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__UINEW_K2Node_ComponentBoundEvent_82_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__UINEW_K2Node_ComponentBoundEvent_82_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__UINEW_K2Node_ComponentBoundEvent_82_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__EFFECTSNEW_K2Node_ComponentBoundEvent_49_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__EFFECTSNEW_K2Node_ComponentBoundEvent_49_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__EFFECTSNEW_K2Node_ComponentBoundEvent_49_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__EFFECTSNEW_K2Node_ComponentBoundEvent_49_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__EFFECTSNEW_K2Node_ComponentBoundEvent_49_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__EFFECTSNEW_K2Node_ComponentBoundEvent_49_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__EFFECTSNEW_K2Node_ComponentBoundEvent_49_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__EFFECTSNEW_K2Node_ComponentBoundEvent_49_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__MASTERNEW_K2Node_ComponentBoundEvent_33_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AudioWindow_C_BndEvt__MASTERNEW_K2Node_ComponentBoundEvent_33_OnValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__MASTERNEW_K2Node_ComponentBoundEvent_33_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on AudioWindow_C_BndEvt__MASTERNEW_K2Node_ComponentBoundEvent_33_OnValueChanged__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__MASTERNEW_K2Node_ComponentBoundEvent_33_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on AudioWindow_C_BndEvt__MASTERNEW_K2Node_ComponentBoundEvent_33_OnValueChanged__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__MASTERNEW_K2Node_ComponentBoundEvent_33_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'AudioWindow_C_BndEvt__MASTERNEW_K2Node_ComponentBoundEvent_33_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_TickBox_C*                Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on AudioWindow_C_BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature) == 0x000010, "Wrong size on AudioWindow_C_BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'AudioWindow_C_BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'AudioWindow_C_BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_TickBox_C*                Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on AudioWindow_C_BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature) == 0x000010, "Wrong size on AudioWindow_C_BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'AudioWindow_C_BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'AudioWindow_C_BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_TickBox_C*                Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on AudioWindow_C_BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature) == 0x000010, "Wrong size on AudioWindow_C_BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'AudioWindow_C_BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'AudioWindow_C_BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature final
{
public:
	int32                                         ButtonNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_GraphicsToggle_C*         ToggleItem;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature) == 0x000008, "Wrong alignment on AudioWindow_C_BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature");
static_assert(sizeof(AudioWindow_C_BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature) == 0x000010, "Wrong size on AudioWindow_C_BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature");
static_assert(offsetof(AudioWindow_C_BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature, ButtonNumber) == 0x000000, "Member 'AudioWindow_C_BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature::ButtonNumber' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature, ToggleItem) == 0x000008, "Member 'AudioWindow_C_BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature::ToggleItem' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.UpdateButtons
// 0x00A8 (0x00A8 - 0x0000)
struct AudioWindow_C_UpdateButtons final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAudioQualityLevel_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E7[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_Slider_LR_C*              K2Node_DynamicCast_AsSettings_Item_Slider_LR;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E8[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsItem_Slider_C*                 K2Node_DynamicCast_AsSettings_Item_Slider;         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E9[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EA[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EB[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_2;   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_1;                          // 0x0090(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_UpdateButtons) == 0x000008, "Wrong alignment on AudioWindow_C_UpdateButtons");
static_assert(sizeof(AudioWindow_C_UpdateButtons) == 0x0000A8, "Wrong size on AudioWindow_C_UpdateButtons");
static_assert(offsetof(AudioWindow_C_UpdateButtons, Temp_int_Variable) == 0x000000, "Member 'AudioWindow_C_UpdateButtons::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, Temp_int_Variable_1) == 0x000004, "Member 'AudioWindow_C_UpdateButtons::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, Temp_int_Variable_2) == 0x000008, "Member 'AudioWindow_C_UpdateButtons::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, Temp_int_Variable_3) == 0x00000C, "Member 'AudioWindow_C_UpdateButtons::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AudioWindow_C_UpdateButtons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'AudioWindow_C_UpdateButtons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'AudioWindow_C_UpdateButtons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, Temp_int_Variable_4) == 0x00001C, "Member 'AudioWindow_C_UpdateButtons::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, K2Node_MakeArray_Array) == 0x000020, "Member 'AudioWindow_C_UpdateButtons::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000030, "Member 'AudioWindow_C_UpdateButtons::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_Array_Get_Item) == 0x000038, "Member 'AudioWindow_C_UpdateButtons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_GetAudioQualityLevel_ReturnValue) == 0x000040, "Member 'AudioWindow_C_UpdateButtons::CallFunc_GetAudioQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, K2Node_DynamicCast_AsSettings_Item_Slider_LR) == 0x000048, "Member 'AudioWindow_C_UpdateButtons::K2Node_DynamicCast_AsSettings_Item_Slider_LR' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'AudioWindow_C_UpdateButtons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, K2Node_DynamicCast_AsSettings_Item_Slider) == 0x000058, "Member 'AudioWindow_C_UpdateButtons::K2Node_DynamicCast_AsSettings_Item_Slider' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'AudioWindow_C_UpdateButtons::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, K2Node_Select_Default) == 0x000064, "Member 'AudioWindow_C_UpdateButtons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'AudioWindow_C_UpdateButtons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'AudioWindow_C_UpdateButtons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x000070, "Member 'AudioWindow_C_UpdateButtons::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'AudioWindow_C_UpdateButtons::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_GetSquadGameUserSettings_ReturnValue_2) == 0x000080, "Member 'AudioWindow_C_UpdateButtons::CallFunc_GetSquadGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'AudioWindow_C_UpdateButtons::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_Add_FloatFloat_ReturnValue) == 0x00008C, "Member 'AudioWindow_C_UpdateButtons::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, K2Node_MakeArray_Array_1) == 0x000090, "Member 'AudioWindow_C_UpdateButtons::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'AudioWindow_C_UpdateButtons::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_UpdateButtons, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000A4, "Member 'AudioWindow_C_UpdateButtons::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_OUTOFGAMENEW_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_OUTOFGAMENEW_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_OUTOFGAMENEW_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_OUTOFGAMENEW_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_OUTOFGAMENEW_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_OUTOFGAMENEW_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_OUTOFGAMENEW_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_OUTOFGAMENEW_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_OUTOFGAMENEW_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_OUTOFGAMENEW_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_ToggleCOMMANDBEEP_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_ToggleCOMMANDBEEP_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_ToggleCOMMANDBEEP_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_ToggleCOMMANDBEEP_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_ToggleCOMMANDBEEP_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_ToggleCOMMANDBEEP_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_ToggleCOMMANDBEEP_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_ToggleCOMMANDBEEP_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_ToggleCOMMANDBEEP_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_ToggleCOMMANDBEEP_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_ToggleSQUADBEEP_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_ToggleSQUADBEEP_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_ToggleSQUADBEEP_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_ToggleSQUADBEEP_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_ToggleSQUADBEEP_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_ToggleSQUADBEEP_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_ToggleSQUADBEEP_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_ToggleSQUADBEEP_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_ToggleSQUADBEEP_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_ToggleSQUADBEEP_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Update Input Devices
// 0x00B0 (0x00B0 - 0x0000)
struct AudioWindow_C_Update_Input_Devices final
{
public:
	TArray<class FString>                         InputDevices;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FString                                 CurrentAudio;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         L_Selected_Input_Device;                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Selected_Output_Device;                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EC[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMediaCaptureDevice                    CallFunc_Array_Get_Item;                           // 0x0038(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35ED[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EE[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMediaCaptureDevice>            CallFunc_EnumerateAudioCaptureDevices_OutDevices;  // 0x0088(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetActiveAudioInputDevice_OutCurrentDevice; // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Identical_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AudioWindow_C_Update_Input_Devices) == 0x000008, "Wrong alignment on AudioWindow_C_Update_Input_Devices");
static_assert(sizeof(AudioWindow_C_Update_Input_Devices) == 0x0000B0, "Wrong size on AudioWindow_C_Update_Input_Devices");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, InputDevices) == 0x000000, "Member 'AudioWindow_C_Update_Input_Devices::InputDevices' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CurrentAudio) == 0x000010, "Member 'AudioWindow_C_Update_Input_Devices::CurrentAudio' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, L_Selected_Input_Device) == 0x000020, "Member 'AudioWindow_C_Update_Input_Devices::L_Selected_Input_Device' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, L_Selected_Output_Device) == 0x000024, "Member 'AudioWindow_C_Update_Input_Devices::L_Selected_Output_Device' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, Temp_int_Array_Index_Variable) == 0x000028, "Member 'AudioWindow_C_Update_Input_Devices::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'AudioWindow_C_Update_Input_Devices::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'AudioWindow_C_Update_Input_Devices::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CallFunc_Array_Get_Item) == 0x000038, "Member 'AudioWindow_C_Update_Input_Devices::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'AudioWindow_C_Update_Input_Devices::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'AudioWindow_C_Update_Input_Devices::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'AudioWindow_C_Update_Input_Devices::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'AudioWindow_C_Update_Input_Devices::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000080, "Member 'AudioWindow_C_Update_Input_Devices::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CallFunc_EnumerateAudioCaptureDevices_OutDevices) == 0x000088, "Member 'AudioWindow_C_Update_Input_Devices::CallFunc_EnumerateAudioCaptureDevices_OutDevices' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CallFunc_GetActiveAudioInputDevice_OutCurrentDevice) == 0x000098, "Member 'AudioWindow_C_Update_Input_Devices::CallFunc_GetActiveAudioInputDevice_OutCurrentDevice' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Input_Devices, CallFunc_Array_Identical_ReturnValue) == 0x0000A8, "Member 'AudioWindow_C_Update_Input_Devices::CallFunc_Array_Identical_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_AUDIOQUALITY_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_AUDIOQUALITY_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_AUDIOQUALITY_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_AUDIOQUALITY_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_AUDIOQUALITY_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_AUDIOQUALITY_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_AUDIOQUALITY_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_AUDIOQUALITY_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_AUDIOQUALITY_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_AUDIOQUALITY_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_AUDIOOUTPUTDEVICE_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_AUDIOOUTPUTDEVICE_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_AUDIOOUTPUTDEVICE_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_AUDIOOUTPUTDEVICE_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_AUDIOOUTPUTDEVICE_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_AUDIOOUTPUTDEVICE_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_AUDIOOUTPUTDEVICE_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_AUDIOOUTPUTDEVICE_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_AUDIOOUTPUTDEVICE_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_AUDIOOUTPUTDEVICE_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_AUDIOINPUTDEVICE_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_AUDIOINPUTDEVICE_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_AUDIOINPUTDEVICE_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_AUDIOINPUTDEVICE_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_AUDIOINPUTDEVICE_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_AUDIOINPUTDEVICE_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_AUDIOINPUTDEVICE_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_AUDIOINPUTDEVICE_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_AUDIOINPUTDEVICE_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_AUDIOINPUTDEVICE_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_COMMANDVOICEVOLUME_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_COMMANDVOICEVOLUME_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_COMMANDVOICEVOLUME_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_COMMANDVOICEVOLUME_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_COMMANDVOICEVOLUME_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_COMMANDVOICEVOLUME_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_COMMANDVOICEVOLUME_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_COMMANDVOICEVOLUME_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_COMMANDVOICEVOLUME_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_COMMANDVOICEVOLUME_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_COMMANDVOICEBALANCE_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_COMMANDVOICEBALANCE_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_COMMANDVOICEBALANCE_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_COMMANDVOICEBALANCE_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_COMMANDVOICEBALANCE_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_COMMANDVOICEBALANCE_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_COMMANDVOICEBALANCE_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_COMMANDVOICEBALANCE_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_COMMANDVOICEBALANCE_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_COMMANDVOICEBALANCE_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_SQUADVOICEVOLUME_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_SQUADVOICEVOLUME_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_SQUADVOICEVOLUME_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_SQUADVOICEVOLUME_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_SQUADVOICEVOLUME_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_SQUADVOICEVOLUME_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_SQUADVOICEVOLUME_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_SQUADVOICEVOLUME_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_SQUADVOICEVOLUME_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_SQUADVOICEVOLUME_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_SQUADVOICEBALANCE_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_SQUADVOICEBALANCE_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_SQUADVOICEBALANCE_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_SQUADVOICEBALANCE_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_SQUADVOICEBALANCE_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_SQUADVOICEBALANCE_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_SQUADVOICEBALANCE_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_SQUADVOICEBALANCE_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_SQUADVOICEBALANCE_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_SQUADVOICEBALANCE_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_LOCALVOICEVOLUME_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_LOCALVOICEVOLUME_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_LOCALVOICEVOLUME_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_LOCALVOICEVOLUME_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_LOCALVOICEVOLUME_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_LOCALVOICEVOLUME_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_LOCALVOICEVOLUME_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_LOCALVOICEVOLUME_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_LOCALVOICEVOLUME_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_LOCALVOICEVOLUME_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_PrioritySpeakerDucking_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_PrioritySpeakerDucking_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_PrioritySpeakerDucking_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_PrioritySpeakerDucking_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_PrioritySpeakerDucking_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_PrioritySpeakerDucking_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_PrioritySpeakerDucking_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_PrioritySpeakerDucking_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_PrioritySpeakerDucking_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_PrioritySpeakerDucking_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_ToggleRADIOFILTER_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_ToggleRADIOFILTER_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_ToggleRADIOFILTER_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_ToggleRADIOFILTER_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_ToggleRADIOFILTER_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_ToggleRADIOFILTER_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_ToggleRADIOFILTER_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_ToggleRADIOFILTER_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_ToggleRADIOFILTER_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_ToggleRADIOFILTER_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Get_ToggleLeaderOnlyBias_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct AudioWindow_C_Get_ToggleLeaderOnlyBias_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Get_ToggleLeaderOnlyBias_ToolTipWidget_0) == 0x000008, "Wrong alignment on AudioWindow_C_Get_ToggleLeaderOnlyBias_ToolTipWidget_0");
static_assert(sizeof(AudioWindow_C_Get_ToggleLeaderOnlyBias_ToolTipWidget_0) == 0x000010, "Wrong size on AudioWindow_C_Get_ToggleLeaderOnlyBias_ToolTipWidget_0");
static_assert(offsetof(AudioWindow_C_Get_ToggleLeaderOnlyBias_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'AudioWindow_C_Get_ToggleLeaderOnlyBias_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Get_ToggleLeaderOnlyBias_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'AudioWindow_C_Get_ToggleLeaderOnlyBias_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AudioWindow.AudioWindow_C.Update Output Devices
// 0x0050 (0x0050 - 0x0000)
struct AudioWindow_C_Update_Output_Devices final
{
public:
	TArray<class FString>                         InputDevices;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FString                                 CurrentAudio;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         L_Selected_Input_Device;                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Selected_Output_Device;                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetAvailableAudioOutputDevice_OutAvailableDevice; // 0x0030(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetAvailableAudioOutputDevice_OutCurrentDevice; // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioWindow_C_Update_Output_Devices) == 0x000008, "Wrong alignment on AudioWindow_C_Update_Output_Devices");
static_assert(sizeof(AudioWindow_C_Update_Output_Devices) == 0x000050, "Wrong size on AudioWindow_C_Update_Output_Devices");
static_assert(offsetof(AudioWindow_C_Update_Output_Devices, InputDevices) == 0x000000, "Member 'AudioWindow_C_Update_Output_Devices::InputDevices' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Output_Devices, CurrentAudio) == 0x000010, "Member 'AudioWindow_C_Update_Output_Devices::CurrentAudio' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Output_Devices, L_Selected_Input_Device) == 0x000020, "Member 'AudioWindow_C_Update_Output_Devices::L_Selected_Input_Device' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Output_Devices, L_Selected_Output_Device) == 0x000024, "Member 'AudioWindow_C_Update_Output_Devices::L_Selected_Output_Device' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Output_Devices, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000028, "Member 'AudioWindow_C_Update_Output_Devices::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Output_Devices, CallFunc_GetAvailableAudioOutputDevice_OutAvailableDevice) == 0x000030, "Member 'AudioWindow_C_Update_Output_Devices::CallFunc_GetAvailableAudioOutputDevice_OutAvailableDevice' has a wrong offset!");
static_assert(offsetof(AudioWindow_C_Update_Output_Devices, CallFunc_GetAvailableAudioOutputDevice_OutCurrentDevice) == 0x000040, "Member 'AudioWindow_C_Update_Output_Devices::CallFunc_GetAvailableAudioOutputDevice_OutCurrentDevice' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_LayerVoteDetails

#include "Basic.hpp"

#include "ESQLayerSpecialTag_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ESQLayerSize_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_LayerVoteDetails.UMG_LayerVoteDetails_C
// 0x0178 (0x03D8 - 0x0260)
class UUMG_LayerVoteDetails_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                BottomBorder;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      CircularThrobber_174;                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                CloseButton;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           FactionsListVB;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FlagsDesc;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FlagsNameText;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FlagsValue;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameModeNameText;                                  // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_170;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Reflection;                                  // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LightingText_1;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LightingValue;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MapNameText;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_MapPreviewPOI_C*                   MapPreviewPOI;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        MapSwitcher;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                NextButton;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                PrevButton;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SetupsListVB;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SizeText;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SizeValue;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SpecialValue;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TicketsValue;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopBorder;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_VoteButton_C*                       UI_VoteButton;                                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             CloseWindow;                                       // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USQVoteSessionClient*                   CurrentSession;                                    // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           UsedFactionSetupList;                              // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentLayerChoiceIndex;                           // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C0F[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESQLayerSpecialTag, class FText>         LayerSpecialTagsTranslation;                       // 0x0358(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUMG_VoteLayer_C*                       VoteLayerRef;                                      // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_VoteItem_C*                        AssignedChoiceWidget;                              // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OptionsCount;                                      // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C10[0x4];                                     // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           FlagsTexts;                                        // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SingleMode;                                        // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void CloseWindow__DelegateSignature();
	void ExecuteUbergraph_UMG_LayerVoteDetails(int32 EntryPoint);
	void BndEvt__UMG_LayerVoteDetails_UI_VoteButton_K2Node_ComponentBoundEvent_3_VoteSelected__DelegateSignature(class FName VoteId);
	void BndEvt__UMG_LayerVoteDetails_PrevButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__UMG_LayerVoteDetails_NextButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void PresentLayerMap(TSoftObjectPtr<class UTexture> LayerTexture, class USQLayer* Layer);
	void BndEvt__UMG_LayerVoteDetails_CloseButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnLoaded_B8D412B7470916A6DC89C38415086618(class UObject* Loaded);
	void FillFromLayer(class UBP_SQLayer_C* Layer, class USQVoteSessionClient* Session, class FName LayerID, bool Param_SingleMode);
	void GetAllAvailableFactions(class UBP_SQLayer_C* Layer, TArray<class UBP_SQFactionSetup_C*>* ID);
	void FillAvailableFactionSetups(class UBP_SQLayer_C* Layer);
	void AddFactionSetup(TSoftObjectPtr<class UObject> FactionSetup);
	void GetChoiceIndex(class FName ChoiceId, int32* Param_Index);
	void GetLayer(int32 ChoiceIndex, class USQLayer** OutLayer, class FName* LayerID);
	void UpdateGameModeData(class UBP_SQLayer_C* Layer);
	void UpdateSpecialTags(class UBP_SQLayer_C* Layer);
	void UpdateLighting(class UBP_SQLayer_C* Layer);
	void ConcatSpecialTags(class FText& Source, class FText& Add);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_LayerVoteDetails_C">();
	}
	static class UUMG_LayerVoteDetails_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_LayerVoteDetails_C>();
	}
};
static_assert(alignof(UUMG_LayerVoteDetails_C) == 0x000008, "Wrong alignment on UUMG_LayerVoteDetails_C");
static_assert(sizeof(UUMG_LayerVoteDetails_C) == 0x0003D8, "Wrong size on UUMG_LayerVoteDetails_C");
static_assert(offsetof(UUMG_LayerVoteDetails_C, UberGraphFrame) == 0x000260, "Member 'UUMG_LayerVoteDetails_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, BottomBorder) == 0x000268, "Member 'UUMG_LayerVoteDetails_C::BottomBorder' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, CircularThrobber_174) == 0x000270, "Member 'UUMG_LayerVoteDetails_C::CircularThrobber_174' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, CloseButton) == 0x000278, "Member 'UUMG_LayerVoteDetails_C::CloseButton' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, FactionsListVB) == 0x000280, "Member 'UUMG_LayerVoteDetails_C::FactionsListVB' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, FlagsDesc) == 0x000288, "Member 'UUMG_LayerVoteDetails_C::FlagsDesc' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, FlagsNameText) == 0x000290, "Member 'UUMG_LayerVoteDetails_C::FlagsNameText' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, FlagsValue) == 0x000298, "Member 'UUMG_LayerVoteDetails_C::FlagsValue' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, GameModeNameText) == 0x0002A0, "Member 'UUMG_LayerVoteDetails_C::GameModeNameText' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, Image_170) == 0x0002A8, "Member 'UUMG_LayerVoteDetails_C::Image_170' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, Image_Reflection) == 0x0002B0, "Member 'UUMG_LayerVoteDetails_C::Image_Reflection' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, LightingText_1) == 0x0002B8, "Member 'UUMG_LayerVoteDetails_C::LightingText_1' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, LightingValue) == 0x0002C0, "Member 'UUMG_LayerVoteDetails_C::LightingValue' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, MapNameText) == 0x0002C8, "Member 'UUMG_LayerVoteDetails_C::MapNameText' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, MapPreviewPOI) == 0x0002D0, "Member 'UUMG_LayerVoteDetails_C::MapPreviewPOI' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, MapSwitcher) == 0x0002D8, "Member 'UUMG_LayerVoteDetails_C::MapSwitcher' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, NextButton) == 0x0002E0, "Member 'UUMG_LayerVoteDetails_C::NextButton' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, PrevButton) == 0x0002E8, "Member 'UUMG_LayerVoteDetails_C::PrevButton' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, SetupsListVB) == 0x0002F0, "Member 'UUMG_LayerVoteDetails_C::SetupsListVB' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, SizeText) == 0x0002F8, "Member 'UUMG_LayerVoteDetails_C::SizeText' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, SizeValue) == 0x000300, "Member 'UUMG_LayerVoteDetails_C::SizeValue' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, SpecialValue) == 0x000308, "Member 'UUMG_LayerVoteDetails_C::SpecialValue' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, TicketsValue) == 0x000310, "Member 'UUMG_LayerVoteDetails_C::TicketsValue' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, TopBorder) == 0x000318, "Member 'UUMG_LayerVoteDetails_C::TopBorder' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, UI_VoteButton) == 0x000320, "Member 'UUMG_LayerVoteDetails_C::UI_VoteButton' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, CloseWindow) == 0x000328, "Member 'UUMG_LayerVoteDetails_C::CloseWindow' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, CurrentSession) == 0x000338, "Member 'UUMG_LayerVoteDetails_C::CurrentSession' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, UsedFactionSetupList) == 0x000340, "Member 'UUMG_LayerVoteDetails_C::UsedFactionSetupList' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, CurrentLayerChoiceIndex) == 0x000350, "Member 'UUMG_LayerVoteDetails_C::CurrentLayerChoiceIndex' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, LayerSpecialTagsTranslation) == 0x000358, "Member 'UUMG_LayerVoteDetails_C::LayerSpecialTagsTranslation' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, VoteLayerRef) == 0x0003A8, "Member 'UUMG_LayerVoteDetails_C::VoteLayerRef' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, AssignedChoiceWidget) == 0x0003B0, "Member 'UUMG_LayerVoteDetails_C::AssignedChoiceWidget' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, OptionsCount) == 0x0003B8, "Member 'UUMG_LayerVoteDetails_C::OptionsCount' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, FlagsTexts) == 0x0003C0, "Member 'UUMG_LayerVoteDetails_C::FlagsTexts' has a wrong offset!");
static_assert(offsetof(UUMG_LayerVoteDetails_C, SingleMode) == 0x0003D0, "Member 'UUMG_LayerVoteDetails_C::SingleMode' has a wrong offset!");

}


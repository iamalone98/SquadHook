#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQVehicleSpawnerSettings

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ESQVehicle_structs.hpp"
#include "ESQVehicleSpawnerSize_structs.hpp"
#include "ESQVehicleTag_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SQVehicleSpawnerSettings.BP_SQVehicleSpawnerSettings_C
// 0x0100 (0x0160 - 0x0060)
class UBP_SQVehicleSpawnerSettings_C final : public USQVehicleSpawnerSettings
{
public:
	TSet<ESQVehicle>                              AuthorizedVehicleTypes;                            // 0x0060(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	ESQVehicleSpawnerSize                         Size;                                              // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ABB[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESQVehicleTag, int32>                    Tag_Priorities;                                    // 0x00B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<ESQVehicle, int32>                       Types_Priorities;                                  // 0x0108(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimespan                              AdditionalDelay;                                   // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void GetPriorityFor(class UBP_SQVehicleSettings_C* In_Setting, int32* Out_Priority);
	void IsPrioritarySpawner(bool* Is_Prioritary_Spawner);

	bool IsVehicleMatching(const class USQVehicleSettings* InAvailableVehicle) const;
	void IsGroundSpawner(bool* IsGround) const;
	void GetVehicleSpawnerEntry(bool* Success, struct FSQVehicleSpawnerEntry* VehicleSpawnerEntry) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SQVehicleSpawnerSettings_C">();
	}
	static class UBP_SQVehicleSpawnerSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SQVehicleSpawnerSettings_C>();
	}
};
static_assert(alignof(UBP_SQVehicleSpawnerSettings_C) == 0x000008, "Wrong alignment on UBP_SQVehicleSpawnerSettings_C");
static_assert(sizeof(UBP_SQVehicleSpawnerSettings_C) == 0x000160, "Wrong size on UBP_SQVehicleSpawnerSettings_C");
static_assert(offsetof(UBP_SQVehicleSpawnerSettings_C, AuthorizedVehicleTypes) == 0x000060, "Member 'UBP_SQVehicleSpawnerSettings_C::AuthorizedVehicleTypes' has a wrong offset!");
static_assert(offsetof(UBP_SQVehicleSpawnerSettings_C, Size) == 0x0000B0, "Member 'UBP_SQVehicleSpawnerSettings_C::Size' has a wrong offset!");
static_assert(offsetof(UBP_SQVehicleSpawnerSettings_C, Tag_Priorities) == 0x0000B8, "Member 'UBP_SQVehicleSpawnerSettings_C::Tag_Priorities' has a wrong offset!");
static_assert(offsetof(UBP_SQVehicleSpawnerSettings_C, Types_Priorities) == 0x000108, "Member 'UBP_SQVehicleSpawnerSettings_C::Types_Priorities' has a wrong offset!");
static_assert(offsetof(UBP_SQVehicleSpawnerSettings_C, AdditionalDelay) == 0x000158, "Member 'UBP_SQVehicleSpawnerSettings_C::AdditionalDelay' has a wrong offset!");

}


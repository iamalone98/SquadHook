#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_Compass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_Compass.UMG_Compass_C
// 0x0078 (0x03B8 - 0x0340)
class UUMG_Compass_C final : public USQCompassMK2
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BearingBorderImage;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               BearingOverlay;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BPCompass_IMG;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BPCompassBearingText;                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BPLeftArrow;                                       // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           BPMain_P;                                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BPRightArrow;                                      // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CompassTickerArrow;                                // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_SwayPips;                                 // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_WeaponHandlingIndicator_C*         UMG_SwayPips;                                      // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             CheckVisibilityStatus_0;                           // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ASQPlayerController*                    My_PC;                                             // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckVisibilityStatus_0__DelegateSignature();
	void ExecuteUbergraph_UMG_Compass(int32 EntryPoint);
	void OnUserSettingsChanged(const class USQGameUserSettings* UserSettings);
	void PreConstruct(bool IsDesignTime);
	void Set_Compass_Visibility();
	void BPInit();
	void Construct();
	void ChangeDisplayMode(bool Param_bTopScreenView);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_Compass_C">();
	}
	static class UUMG_Compass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_Compass_C>();
	}
};
static_assert(alignof(UUMG_Compass_C) == 0x000008, "Wrong alignment on UUMG_Compass_C");
static_assert(sizeof(UUMG_Compass_C) == 0x0003B8, "Wrong size on UUMG_Compass_C");
static_assert(offsetof(UUMG_Compass_C, UberGraphFrame) == 0x000340, "Member 'UUMG_Compass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, Background) == 0x000348, "Member 'UUMG_Compass_C::Background' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, BearingBorderImage) == 0x000350, "Member 'UUMG_Compass_C::BearingBorderImage' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, BearingOverlay) == 0x000358, "Member 'UUMG_Compass_C::BearingOverlay' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, BPCompass_IMG) == 0x000360, "Member 'UUMG_Compass_C::BPCompass_IMG' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, BPCompassBearingText) == 0x000368, "Member 'UUMG_Compass_C::BPCompassBearingText' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, BPLeftArrow) == 0x000370, "Member 'UUMG_Compass_C::BPLeftArrow' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, BPMain_P) == 0x000378, "Member 'UUMG_Compass_C::BPMain_P' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, BPRightArrow) == 0x000380, "Member 'UUMG_Compass_C::BPRightArrow' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, CompassTickerArrow) == 0x000388, "Member 'UUMG_Compass_C::CompassTickerArrow' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, ScaleBox_SwayPips) == 0x000390, "Member 'UUMG_Compass_C::ScaleBox_SwayPips' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, UMG_SwayPips) == 0x000398, "Member 'UUMG_Compass_C::UMG_SwayPips' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, CheckVisibilityStatus_0) == 0x0003A0, "Member 'UUMG_Compass_C::CheckVisibilityStatus_0' has a wrong offset!");
static_assert(offsetof(UUMG_Compass_C, My_PC) == 0x0003B0, "Member 'UUMG_Compass_C::My_PC' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_VehicleSeatInfo

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FSQRoleEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.ExecuteUbergraph_W_VehicleSeatInfo
// 0x00B0 (0x00B0 - 0x0000)
struct W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C5[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	int32                                         K2Node_CustomEvent_Seat_Index;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C6[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_CustomEvent_Player_State;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Driver;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C7[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C8[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFullPlayerName_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C9[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo) == 0x000008, "Wrong alignment on W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo");
static_assert(sizeof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo) == 0x0000B0, "Wrong size on W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, EntryPoint) == 0x000000, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, K2Node_DynamicCast_AsSQHUD) == 0x000010, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, K2Node_CustomEvent_Seat_Index) == 0x000038, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::K2Node_CustomEvent_Seat_Index' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, K2Node_CustomEvent_Player_State) == 0x000040, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::K2Node_CustomEvent_Player_State' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, K2Node_CustomEvent_Driver) == 0x000048, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::K2Node_CustomEvent_Driver' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, CallFunc_GetOwningPlayer_ReturnValue) == 0x000050, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000058, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, CallFunc_GetFullPlayerName_ReturnValue) == 0x000068, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::CallFunc_GetFullPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000098, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo, K2Node_MakeStruct_Margin) == 0x0000A0, "Member 'W_VehicleSeatInfo_C_ExecuteUbergraph_W_VehicleSeatInfo::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.Update Occupant
// 0x0018 (0x0018 - 0x0000)
struct W_VehicleSeatInfo_C_Update_Occupant final
{
public:
	int32                                         Param_Seat_Index;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30CA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         Param_Player_State;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Driver;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleSeatInfo_C_Update_Occupant) == 0x000008, "Wrong alignment on W_VehicleSeatInfo_C_Update_Occupant");
static_assert(sizeof(W_VehicleSeatInfo_C_Update_Occupant) == 0x000018, "Wrong size on W_VehicleSeatInfo_C_Update_Occupant");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Occupant, Param_Seat_Index) == 0x000000, "Member 'W_VehicleSeatInfo_C_Update_Occupant::Param_Seat_Index' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Occupant, Param_Player_State) == 0x000008, "Member 'W_VehicleSeatInfo_C_Update_Occupant::Param_Player_State' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Occupant, Param_Driver) == 0x000010, "Member 'W_VehicleSeatInfo_C_Update_Occupant::Param_Driver' has a wrong offset!");

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.Get Tint
// 0x0048 (0x0048 - 0x0000)
struct W_VehicleSeatInfo_C_Get_Tint final
{
public:
	struct FLinearColor                           Out_Color;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              Temp_byte_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_3;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_4;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30CB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCommander_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              K2Node_Select_Default;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Self_Squad_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_1;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_2;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_3;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30CC[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VehicleSeatInfo_C_Get_Tint) == 0x000008, "Wrong alignment on W_VehicleSeatInfo_C_Get_Tint");
static_assert(sizeof(W_VehicleSeatInfo_C_Get_Tint) == 0x000048, "Wrong size on W_VehicleSeatInfo_C_Get_Tint");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, Out_Color) == 0x000000, "Member 'W_VehicleSeatInfo_C_Get_Tint::Out_Color' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, Temp_bool_Variable) == 0x000010, "Member 'W_VehicleSeatInfo_C_Get_Tint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, Temp_byte_Variable) == 0x000011, "Member 'W_VehicleSeatInfo_C_Get_Tint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, Temp_bool_Variable_1) == 0x000012, "Member 'W_VehicleSeatInfo_C_Get_Tint::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, Temp_byte_Variable_1) == 0x000013, "Member 'W_VehicleSeatInfo_C_Get_Tint::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, Temp_byte_Variable_2) == 0x000014, "Member 'W_VehicleSeatInfo_C_Get_Tint::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, Temp_bool_Variable_2) == 0x000015, "Member 'W_VehicleSeatInfo_C_Get_Tint::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, Temp_byte_Variable_3) == 0x000016, "Member 'W_VehicleSeatInfo_C_Get_Tint::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, Temp_bool_Variable_3) == 0x000017, "Member 'W_VehicleSeatInfo_C_Get_Tint::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, Temp_byte_Variable_4) == 0x000018, "Member 'W_VehicleSeatInfo_C_Get_Tint::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'W_VehicleSeatInfo_C_Get_Tint::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'W_VehicleSeatInfo_C_Get_Tint::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, CallFunc_IsCommander_ReturnValue) == 0x000029, "Member 'W_VehicleSeatInfo_C_Get_Tint::CallFunc_IsCommander_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, K2Node_Select_Default) == 0x00002A, "Member 'W_VehicleSeatInfo_C_Get_Tint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, CallFunc_Self_Squad_ReturnValue) == 0x00002B, "Member 'W_VehicleSeatInfo_C_Get_Tint::CallFunc_Self_Squad_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, CallFunc_GetFireTeamIndex_ReturnValue) == 0x00002C, "Member 'W_VehicleSeatInfo_C_Get_Tint::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, K2Node_Select_Default_1) == 0x000030, "Member 'W_VehicleSeatInfo_C_Get_Tint::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, K2Node_Select_Default_2) == 0x000031, "Member 'W_VehicleSeatInfo_C_Get_Tint::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, K2Node_Select_Default_3) == 0x000032, "Member 'W_VehicleSeatInfo_C_Get_Tint::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Get_Tint, CallFunc_GetColor_ReturnValue) == 0x000034, "Member 'W_VehicleSeatInfo_C_Get_Tint::CallFunc_GetColor_ReturnValue' has a wrong offset!");

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.UpdateKitVisuals
// 0x00E0 (0x00E0 - 0x0000)
struct W_VehicleSeatInfo_C_UpdateKitVisuals final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30CD[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQRoleSettings_C*                   K2Node_DynamicCast_AsBP_SQRole_Settings;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRoleEntry_Success;                     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30CE[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_RoleEntry;                   // 0x0018(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VehicleSeatInfo_C_UpdateKitVisuals) == 0x000008, "Wrong alignment on W_VehicleSeatInfo_C_UpdateKitVisuals");
static_assert(sizeof(W_VehicleSeatInfo_C_UpdateKitVisuals) == 0x0000E0, "Wrong size on W_VehicleSeatInfo_C_UpdateKitVisuals");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, Temp_bool_Variable) == 0x000000, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, Temp_byte_Variable) == 0x000001, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, Temp_byte_Variable_1) == 0x000002, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, K2Node_DynamicCast_AsBP_SQRole_Settings) == 0x000008, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::K2Node_DynamicCast_AsBP_SQRole_Settings' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, CallFunc_GetRoleEntry_Success) == 0x000012, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::CallFunc_GetRoleEntry_Success' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, CallFunc_GetRoleEntry_RoleEntry) == 0x000018, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::CallFunc_GetRoleEntry_RoleEntry' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D9, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateKitVisuals, K2Node_Select_Default) == 0x0000DA, "Member 'W_VehicleSeatInfo_C_UpdateKitVisuals::K2Node_Select_Default' has a wrong offset!");

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.UpdateSquadVisuals
// 0x0098 (0x0098 - 0x0000)
struct W_VehicleSeatInfo_C_UpdateSquadVisuals final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30CF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D0[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
	bool                                          CallFunc_IsSquadLeader_ReturnValue_1;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D1[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0070(0x0018)()
	struct FLinearColor                           CallFunc_Get_Tint_Out_Color;                       // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VehicleSeatInfo_C_UpdateSquadVisuals) == 0x000008, "Wrong alignment on W_VehicleSeatInfo_C_UpdateSquadVisuals");
static_assert(sizeof(W_VehicleSeatInfo_C_UpdateSquadVisuals) == 0x000098, "Wrong size on W_VehicleSeatInfo_C_UpdateSquadVisuals");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, Temp_bool_Variable) == 0x000000, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, Temp_struct_Variable) == 0x000004, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, Temp_struct_Variable_1) == 0x000014, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, Temp_bool_Variable_1) == 0x000024, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, Temp_byte_Variable) == 0x000025, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, Temp_byte_Variable_1) == 0x000026, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, Temp_bool_Variable_2) == 0x000027, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, Temp_byte_Variable_2) == 0x000028, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, Temp_byte_Variable_3) == 0x000029, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, CallFunc_IsSquadLeader_ReturnValue) == 0x00002A, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00002B, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, K2Node_Select_Default) == 0x00002C, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, K2Node_Select_Default_1) == 0x00003C, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, CallFunc_IsSquadLeader_ReturnValue_1) == 0x000068, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::CallFunc_IsSquadLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, K2Node_Select_Default_2) == 0x000069, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, CallFunc_Conv_IntToText_ReturnValue) == 0x000070, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateSquadVisuals, CallFunc_Get_Tint_Out_Color) == 0x000088, "Member 'W_VehicleSeatInfo_C_UpdateSquadVisuals::CallFunc_Get_Tint_Out_Color' has a wrong offset!");

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.UpdateRank
// 0x0050 (0x0050 - 0x0000)
struct W_VehicleSeatInfo_C_UpdateRank final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D4[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D5[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VehicleSeatInfo_C_UpdateRank) == 0x000008, "Wrong alignment on W_VehicleSeatInfo_C_UpdateRank");
static_assert(sizeof(W_VehicleSeatInfo_C_UpdateRank) == 0x000050, "Wrong size on W_VehicleSeatInfo_C_UpdateRank");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, Temp_bool_Variable) == 0x000000, "Member 'W_VehicleSeatInfo_C_UpdateRank::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, Temp_byte_Variable) == 0x000001, "Member 'W_VehicleSeatInfo_C_UpdateRank::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, Temp_byte_Variable_1) == 0x000002, "Member 'W_VehicleSeatInfo_C_UpdateRank::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, Temp_bool_Variable_1) == 0x000003, "Member 'W_VehicleSeatInfo_C_UpdateRank::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, Temp_object_Variable) == 0x000008, "Member 'W_VehicleSeatInfo_C_UpdateRank::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, Temp_object_Variable_1) == 0x000010, "Member 'W_VehicleSeatInfo_C_UpdateRank::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, Temp_bool_Variable_2) == 0x000018, "Member 'W_VehicleSeatInfo_C_UpdateRank::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, Temp_object_Variable_2) == 0x000020, "Member 'W_VehicleSeatInfo_C_UpdateRank::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, CallFunc_IsFireTeamLeader_ReturnValue) == 0x000028, "Member 'W_VehicleSeatInfo_C_UpdateRank::CallFunc_IsFireTeamLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, CallFunc_IsSquadLeader_ReturnValue) == 0x000029, "Member 'W_VehicleSeatInfo_C_UpdateRank::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, K2Node_Select_Default) == 0x000030, "Member 'W_VehicleSeatInfo_C_UpdateRank::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'W_VehicleSeatInfo_C_UpdateRank::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, K2Node_Select_Default_1) == 0x000040, "Member 'W_VehicleSeatInfo_C_UpdateRank::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_UpdateRank, K2Node_Select_Default_2) == 0x000048, "Member 'W_VehicleSeatInfo_C_UpdateRank::K2Node_Select_Default_2' has a wrong offset!");

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.Update Fireteam
// 0x0048 (0x0048 - 0x0000)
struct W_VehicleSeatInfo_C_Update_Fireteam final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAlphabetLetterString_ReturnValue;      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(W_VehicleSeatInfo_C_Update_Fireteam) == 0x000008, "Wrong alignment on W_VehicleSeatInfo_C_Update_Fireteam");
static_assert(sizeof(W_VehicleSeatInfo_C_Update_Fireteam) == 0x000048, "Wrong size on W_VehicleSeatInfo_C_Update_Fireteam");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Fireteam, Temp_bool_Variable) == 0x000000, "Member 'W_VehicleSeatInfo_C_Update_Fireteam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Fireteam, Temp_byte_Variable) == 0x000001, "Member 'W_VehicleSeatInfo_C_Update_Fireteam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Fireteam, Temp_byte_Variable_1) == 0x000002, "Member 'W_VehicleSeatInfo_C_Update_Fireteam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Fireteam, CallFunc_Less_IntInt_ReturnValue) == 0x000003, "Member 'W_VehicleSeatInfo_C_Update_Fireteam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Fireteam, CallFunc_GetFireTeamIndex_ReturnValue) == 0x000004, "Member 'W_VehicleSeatInfo_C_Update_Fireteam::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Fireteam, CallFunc_GetAlphabetLetterString_ReturnValue) == 0x000008, "Member 'W_VehicleSeatInfo_C_Update_Fireteam::CallFunc_GetAlphabetLetterString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Fireteam, K2Node_Select_Default) == 0x000018, "Member 'W_VehicleSeatInfo_C_Update_Fireteam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Fireteam, CallFunc_ToUpper_ReturnValue) == 0x000020, "Member 'W_VehicleSeatInfo_C_Update_Fireteam::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Update_Fireteam, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'W_VehicleSeatInfo_C_Update_Fireteam::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.Self Squad
// 0x0006 (0x0006 - 0x0000)
struct W_VehicleSeatInfo_C_Self_Squad final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleSeatInfo_C_Self_Squad) == 0x000001, "Wrong alignment on W_VehicleSeatInfo_C_Self_Squad");
static_assert(sizeof(W_VehicleSeatInfo_C_Self_Squad) == 0x000006, "Wrong size on W_VehicleSeatInfo_C_Self_Squad");
static_assert(offsetof(W_VehicleSeatInfo_C_Self_Squad, ReturnValue) == 0x000000, "Member 'W_VehicleSeatInfo_C_Self_Squad::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Self_Squad, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'W_VehicleSeatInfo_C_Self_Squad::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Self_Squad, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'W_VehicleSeatInfo_C_Self_Squad::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Self_Squad, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000003, "Member 'W_VehicleSeatInfo_C_Self_Squad::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Self_Squad, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'W_VehicleSeatInfo_C_Self_Squad::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Self_Squad, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'W_VehicleSeatInfo_C_Self_Squad::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.Set Self Team
// 0x0010 (0x0010 - 0x0000)
struct W_VehicleSeatInfo_C_Set_Self_Team final
{
public:
	class ASQTeamState*                           CallFunc_GetTeamState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleSeatInfo_C_Set_Self_Team) == 0x000008, "Wrong alignment on W_VehicleSeatInfo_C_Set_Self_Team");
static_assert(sizeof(W_VehicleSeatInfo_C_Set_Self_Team) == 0x000010, "Wrong size on W_VehicleSeatInfo_C_Set_Self_Team");
static_assert(offsetof(W_VehicleSeatInfo_C_Set_Self_Team, CallFunc_GetTeamState_ReturnValue) == 0x000000, "Member 'W_VehicleSeatInfo_C_Set_Self_Team::CallFunc_GetTeamState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Set_Self_Team, CallFunc_GetTeam_ReturnValue) == 0x000008, "Member 'W_VehicleSeatInfo_C_Set_Self_Team::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_Set_Self_Team, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'W_VehicleSeatInfo_C_Set_Self_Team::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.Set Squad ID
// 0x0001 (0x0001 - 0x0000)
struct W_VehicleSeatInfo_C_Set_Squad_ID final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleSeatInfo_C_Set_Squad_ID) == 0x000001, "Wrong alignment on W_VehicleSeatInfo_C_Set_Squad_ID");
static_assert(sizeof(W_VehicleSeatInfo_C_Set_Squad_ID) == 0x000001, "Wrong size on W_VehicleSeatInfo_C_Set_Squad_ID");
static_assert(offsetof(W_VehicleSeatInfo_C_Set_Squad_ID, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_VehicleSeatInfo_C_Set_Squad_ID::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_VehicleSeatInfo.W_VehicleSeatInfo_C.ShowHideCommanderStar
// 0x0009 (0x0009 - 0x0000)
struct W_VehicleSeatInfo_C_ShowHideCommanderStar final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCommander_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VehicleSeatInfo_C_ShowHideCommanderStar) == 0x000001, "Wrong alignment on W_VehicleSeatInfo_C_ShowHideCommanderStar");
static_assert(sizeof(W_VehicleSeatInfo_C_ShowHideCommanderStar) == 0x000009, "Wrong size on W_VehicleSeatInfo_C_ShowHideCommanderStar");
static_assert(offsetof(W_VehicleSeatInfo_C_ShowHideCommanderStar, Temp_bool_Variable) == 0x000000, "Member 'W_VehicleSeatInfo_C_ShowHideCommanderStar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ShowHideCommanderStar, Temp_byte_Variable) == 0x000001, "Member 'W_VehicleSeatInfo_C_ShowHideCommanderStar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ShowHideCommanderStar, Temp_byte_Variable_1) == 0x000002, "Member 'W_VehicleSeatInfo_C_ShowHideCommanderStar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ShowHideCommanderStar, Temp_bool_Variable_1) == 0x000003, "Member 'W_VehicleSeatInfo_C_ShowHideCommanderStar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ShowHideCommanderStar, Temp_byte_Variable_2) == 0x000004, "Member 'W_VehicleSeatInfo_C_ShowHideCommanderStar::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ShowHideCommanderStar, Temp_byte_Variable_3) == 0x000005, "Member 'W_VehicleSeatInfo_C_ShowHideCommanderStar::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ShowHideCommanderStar, CallFunc_IsCommander_ReturnValue) == 0x000006, "Member 'W_VehicleSeatInfo_C_ShowHideCommanderStar::CallFunc_IsCommander_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ShowHideCommanderStar, K2Node_Select_Default) == 0x000007, "Member 'W_VehicleSeatInfo_C_ShowHideCommanderStar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_VehicleSeatInfo_C_ShowHideCommanderStar, K2Node_Select_Default_1) == 0x000008, "Member 'W_VehicleSeatInfo_C_ShowHideCommanderStar::K2Node_Select_Default_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_WeaponHandlingIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_WeaponHandlingIndicator.UMG_WeaponHandlingIndicator_C
// 0x0040 (0x02A0 - 0x0260)
class UUMG_WeaponHandlingIndicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 LeftPip;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightPip;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_104;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AlignmentMultiplier;                               // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RecoilMultiplier;                                  // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RecoilAlignmentMultiplier;                         // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MOAMultiplier;                                     // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeaponSpringMultiplier;                            // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UMG_WeaponHandlingIndicator(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_WeaponHandlingIndicator_C">();
	}
	static class UUMG_WeaponHandlingIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_WeaponHandlingIndicator_C>();
	}
};
static_assert(alignof(UUMG_WeaponHandlingIndicator_C) == 0x000008, "Wrong alignment on UUMG_WeaponHandlingIndicator_C");
static_assert(sizeof(UUMG_WeaponHandlingIndicator_C) == 0x0002A0, "Wrong size on UUMG_WeaponHandlingIndicator_C");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, UberGraphFrame) == 0x000260, "Member 'UUMG_WeaponHandlingIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, LeftPip) == 0x000268, "Member 'UUMG_WeaponHandlingIndicator_C::LeftPip' has a wrong offset!");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, RightPip) == 0x000270, "Member 'UUMG_WeaponHandlingIndicator_C::RightPip' has a wrong offset!");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, Spacer_104) == 0x000278, "Member 'UUMG_WeaponHandlingIndicator_C::Spacer_104' has a wrong offset!");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, Distance) == 0x000280, "Member 'UUMG_WeaponHandlingIndicator_C::Distance' has a wrong offset!");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, Scale) == 0x000284, "Member 'UUMG_WeaponHandlingIndicator_C::Scale' has a wrong offset!");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, AlignmentMultiplier) == 0x000288, "Member 'UUMG_WeaponHandlingIndicator_C::AlignmentMultiplier' has a wrong offset!");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, RecoilMultiplier) == 0x00028C, "Member 'UUMG_WeaponHandlingIndicator_C::RecoilMultiplier' has a wrong offset!");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, RecoilAlignmentMultiplier) == 0x000290, "Member 'UUMG_WeaponHandlingIndicator_C::RecoilAlignmentMultiplier' has a wrong offset!");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, MOAMultiplier) == 0x000294, "Member 'UUMG_WeaponHandlingIndicator_C::MOAMultiplier' has a wrong offset!");
static_assert(offsetof(UUMG_WeaponHandlingIndicator_C, WeaponSpringMultiplier) == 0x000298, "Member 'UUMG_WeaponHandlingIndicator_C::WeaponSpringMultiplier' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Menu_Input_ToolTip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Menu_Input_ToolTip.W_Menu_Input_ToolTip_C
// 0x00A0 (0x0300 - 0x0260)
class UW_Menu_Input_ToolTip_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OnHovered;                                         // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_0;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ContextText;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KeybindText;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TextOverlay;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   KeyBind;                                           // 0x0290(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Action;                                            // 0x02A8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             OnToolTipPressed;                                  // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bDisplayIconOnly;                                  // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bIsHUD;                                            // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_410A[0x6];                                     // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   IngameKeybind;                                     // 0x02D8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FMargin                                KeybindTextPadding;                                // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void OnToolTipPressed__DelegateSignature();
	void ExecuteUbergraph_W_Menu_Input_ToolTip(int32 EntryPoint);
	void BndEvt__W_Menu_Input_ToolTip_Button_0_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__W_Menu_Input_ToolTip_Button_0_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void UpdateAction(const class FText& Param_Action);
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void UpdateKeybind();
	void Construct();
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void ParseKeybind(const class FString& InString, class FText* Short_Name);
	void GetShortName(class FName InputPin, class FText* Short_Name);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Menu_Input_ToolTip_C">();
	}
	static class UW_Menu_Input_ToolTip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Menu_Input_ToolTip_C>();
	}
};
static_assert(alignof(UW_Menu_Input_ToolTip_C) == 0x000008, "Wrong alignment on UW_Menu_Input_ToolTip_C");
static_assert(sizeof(UW_Menu_Input_ToolTip_C) == 0x000300, "Wrong size on UW_Menu_Input_ToolTip_C");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, UberGraphFrame) == 0x000260, "Member 'UW_Menu_Input_ToolTip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, OnHovered) == 0x000268, "Member 'UW_Menu_Input_ToolTip_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, Button_0) == 0x000270, "Member 'UW_Menu_Input_ToolTip_C::Button_0' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, ContextText) == 0x000278, "Member 'UW_Menu_Input_ToolTip_C::ContextText' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, KeybindText) == 0x000280, "Member 'UW_Menu_Input_ToolTip_C::KeybindText' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, TextOverlay) == 0x000288, "Member 'UW_Menu_Input_ToolTip_C::TextOverlay' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, KeyBind) == 0x000290, "Member 'UW_Menu_Input_ToolTip_C::KeyBind' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, Action) == 0x0002A8, "Member 'UW_Menu_Input_ToolTip_C::Action' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, OnToolTipPressed) == 0x0002C0, "Member 'UW_Menu_Input_ToolTip_C::OnToolTipPressed' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, bDisplayIconOnly) == 0x0002D0, "Member 'UW_Menu_Input_ToolTip_C::bDisplayIconOnly' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, bIsHUD) == 0x0002D1, "Member 'UW_Menu_Input_ToolTip_C::bIsHUD' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, IngameKeybind) == 0x0002D8, "Member 'UW_Menu_Input_ToolTip_C::IngameKeybind' has a wrong offset!");
static_assert(offsetof(UW_Menu_Input_ToolTip_C, KeybindTextPadding) == 0x0002F0, "Member 'UW_Menu_Input_ToolTip_C::KeybindTextPadding' has a wrong offset!");

}


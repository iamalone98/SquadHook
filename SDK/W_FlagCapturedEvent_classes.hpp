#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FlagCapturedEvent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_FlagCapturedEvent.W_FlagCapturedEvent_C
// 0x0040 (0x02A0 - 0x0260)
class UW_FlagCapturedEvent_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FlagAnim;                                          // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AlphaAnim;                                         // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_Flag;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Progress;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_FlagName;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_State;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         New_Team;                                          // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Old_Team;                                          // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_FlagCapturedEvent(int32 EntryPoint);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Play_Capture_Animation(const class FText& Flag_Name, uint8 New_Owning_Team, uint8 Last_Owning_Team);
	void Change_Flag_Image();
	void Setup_Fill_Image();
	void Set_State_Text();
	void Set_Owner_Flag_Image();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_FlagCapturedEvent_C">();
	}
	static class UW_FlagCapturedEvent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_FlagCapturedEvent_C>();
	}
};
static_assert(alignof(UW_FlagCapturedEvent_C) == 0x000008, "Wrong alignment on UW_FlagCapturedEvent_C");
static_assert(sizeof(UW_FlagCapturedEvent_C) == 0x0002A0, "Wrong size on UW_FlagCapturedEvent_C");
static_assert(offsetof(UW_FlagCapturedEvent_C, UberGraphFrame) == 0x000260, "Member 'UW_FlagCapturedEvent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_FlagCapturedEvent_C, FlagAnim) == 0x000268, "Member 'UW_FlagCapturedEvent_C::FlagAnim' has a wrong offset!");
static_assert(offsetof(UW_FlagCapturedEvent_C, AlphaAnim) == 0x000270, "Member 'UW_FlagCapturedEvent_C::AlphaAnim' has a wrong offset!");
static_assert(offsetof(UW_FlagCapturedEvent_C, Image_Flag) == 0x000278, "Member 'UW_FlagCapturedEvent_C::Image_Flag' has a wrong offset!");
static_assert(offsetof(UW_FlagCapturedEvent_C, Image_Progress) == 0x000280, "Member 'UW_FlagCapturedEvent_C::Image_Progress' has a wrong offset!");
static_assert(offsetof(UW_FlagCapturedEvent_C, TB_FlagName) == 0x000288, "Member 'UW_FlagCapturedEvent_C::TB_FlagName' has a wrong offset!");
static_assert(offsetof(UW_FlagCapturedEvent_C, TB_State) == 0x000290, "Member 'UW_FlagCapturedEvent_C::TB_State' has a wrong offset!");
static_assert(offsetof(UW_FlagCapturedEvent_C, New_Team) == 0x000298, "Member 'UW_FlagCapturedEvent_C::New_Team' has a wrong offset!");
static_assert(offsetof(UW_FlagCapturedEvent_C, Old_Team) == 0x000299, "Member 'UW_FlagCapturedEvent_C::Old_Team' has a wrong offset!");

}


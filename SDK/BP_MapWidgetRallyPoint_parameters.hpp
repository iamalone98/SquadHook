#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWidgetRallyPoint

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MapWidgetRallyPoint.BP_MapWidgetRallyPoint_C.ExecuteUbergraph_BP_MapWidgetRallyPoint
// 0x00E8 (0x00E8 - 0x0000)
struct BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1670[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_DeployConfirmation_C*>        CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1671[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1672[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1673[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1674[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1675[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_DeployConfirmation_C*                CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1676[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0090(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1677[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1678[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_UniformScale;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1679[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetTintColor_ReturnValue;                 // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint) == 0x000008, "Wrong alignment on BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint");
static_assert(sizeof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint) == 0x0000E8, "Wrong size on BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, EntryPoint) == 0x000000, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, Temp_byte_Variable) == 0x000018, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, Temp_byte_Variable_1) == 0x000020, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, Temp_bool_Variable) == 0x000021, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, Temp_text_Variable) == 0x000028, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, Temp_bool_Variable_1) == 0x000040, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, Temp_struct_Variable) == 0x000044, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, K2Node_Select_Default) == 0x000090, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0000A9, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_PlayAnimation_ReturnValue) == 0x0000B0, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, Temp_bool_Variable_2) == 0x0000B8, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, K2Node_Event_UniformScale) == 0x0000BC, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::K2Node_Event_UniformScale' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, K2Node_Select_Default_1) == 0x0000C0, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, CallFunc_GetTintColor_ReturnValue) == 0x0000C4, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::CallFunc_GetTintColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint, K2Node_Select_Default_2) == 0x0000D4, "Member 'BP_MapWidgetRallyPoint_C_ExecuteUbergraph_BP_MapWidgetRallyPoint::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_MapWidgetRallyPoint.BP_MapWidgetRallyPoint_C.OnScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MapWidgetRallyPoint_C_OnScaleChanged final
{
public:
	float                                         UniformScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetRallyPoint_C_OnScaleChanged) == 0x000004, "Wrong alignment on BP_MapWidgetRallyPoint_C_OnScaleChanged");
static_assert(sizeof(BP_MapWidgetRallyPoint_C_OnScaleChanged) == 0x000004, "Wrong size on BP_MapWidgetRallyPoint_C_OnScaleChanged");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnScaleChanged, UniformScale) == 0x000000, "Member 'BP_MapWidgetRallyPoint_C_OnScaleChanged::UniformScale' has a wrong offset!");

// Function BP_MapWidgetRallyPoint.BP_MapWidgetRallyPoint_C.Get_SpawnFront_IMG_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct BP_MapWidgetRallyPoint_C_Get_SpawnFront_IMG_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Tooltip_RallyPoint_C*                CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetRallyPoint_C_Get_SpawnFront_IMG_ToolTipWidget_0) == 0x000008, "Wrong alignment on BP_MapWidgetRallyPoint_C_Get_SpawnFront_IMG_ToolTipWidget_0");
static_assert(sizeof(BP_MapWidgetRallyPoint_C_Get_SpawnFront_IMG_ToolTipWidget_0) == 0x000010, "Wrong size on BP_MapWidgetRallyPoint_C_Get_SpawnFront_IMG_ToolTipWidget_0");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Get_SpawnFront_IMG_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'BP_MapWidgetRallyPoint_C_Get_SpawnFront_IMG_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Get_SpawnFront_IMG_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_MapWidgetRallyPoint_C_Get_SpawnFront_IMG_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetRallyPoint.BP_MapWidgetRallyPoint_C.Update Rally Spawns Visibility
// 0x0018 (0x0018 - 0x0000)
struct BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_167A[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility) == 0x000008, "Wrong alignment on BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility");
static_assert(sizeof(BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility) == 0x000018, "Wrong size on BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility, Temp_bool_Variable) == 0x000000, "Member 'BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility, Temp_byte_Variable) == 0x000001, "Member 'BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility, Temp_byte_Variable_1) == 0x000002, "Member 'BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000008, "Member 'BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility, K2Node_Select_Default) == 0x000010, "Member 'BP_MapWidgetRallyPoint_C_Update_Rally_Spawns_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function BP_MapWidgetRallyPoint.BP_MapWidgetRallyPoint_C.Update Color
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MapWidgetRallyPoint_C_Update_Color final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167C[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167D[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167E[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetRallyPoint_C_Update_Color) == 0x000004, "Wrong alignment on BP_MapWidgetRallyPoint_C_Update_Color");
static_assert(sizeof(BP_MapWidgetRallyPoint_C_Update_Color) == 0x0000A0, "Wrong size on BP_MapWidgetRallyPoint_C_Update_Color");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_bool_Variable) == 0x000000, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_struct_Variable) == 0x000004, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_struct_Variable_1) == 0x00000C, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_bool_Variable_1) == 0x000014, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_struct_Variable_2) == 0x000018, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_struct_Variable_3) == 0x000028, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_bool_Variable_2) == 0x000038, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_struct_Variable_4) == 0x00003C, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_struct_Variable_5) == 0x000044, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_bool_Variable_3) == 0x00004C, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_struct_Variable_6) == 0x000050, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, Temp_struct_Variable_7) == 0x000060, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, K2Node_Select_Default) == 0x000070, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, K2Node_Select_Default_1) == 0x000078, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, K2Node_Select_Default_2) == 0x000088, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_Update_Color, K2Node_Select_Default_3) == 0x000098, "Member 'BP_MapWidgetRallyPoint_C_Update_Color::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_MapWidgetRallyPoint.BP_MapWidgetRallyPoint_C.OnMouseButtonDown
// 0x0250 (0x0250 - 0x0000)
struct BP_MapWidgetRallyPoint_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167F[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1680[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQFactionSetup_C*                   K2Node_DynamicCast_AsBP_SQFaction_Setup;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1681[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0198(0x00B8)()
};
static_assert(alignof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on BP_MapWidgetRallyPoint_C_OnMouseButtonDown");
static_assert(sizeof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown) == 0x000250, "Wrong size on BP_MapWidgetRallyPoint_C_OnMouseButtonDown");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, CallFunc_GetOwningPlayer_ReturnValue) == 0x000160, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000168, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, CallFunc_K2_GetPawn_ReturnValue) == 0x000178, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue_1) == 0x000181, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, K2Node_DynamicCast_AsBP_SQFaction_Setup) == 0x000188, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::K2Node_DynamicCast_AsBP_SQFaction_Setup' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, CallFunc_IsSquadLeader_ReturnValue) == 0x000191, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, CallFunc_BooleanAND_ReturnValue) == 0x000192, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, CallFunc_Not_PreBool_ReturnValue) == 0x000193, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000198, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetRallyPoint.BP_MapWidgetRallyPoint_C.OnMouseButtonUp
// 0x0260 (0x0260 - 0x0000)
struct BP_MapWidgetRallyPoint_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1682[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0170(0x00B8)()
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1683[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_DeployConfirmation_C*>        CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0230(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1684[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_DeployConfirmation_C*                CallFunc_Array_Get_Item;                           // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1685[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on BP_MapWidgetRallyPoint_C_OnMouseButtonUp");
static_assert(sizeof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp) == 0x000260, "Wrong size on BP_MapWidgetRallyPoint_C_OnMouseButtonUp");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, Temp_int_Array_Index_Variable) == 0x000160, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, Temp_int_Loop_Counter_Variable) == 0x000164, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000170, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000228, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000230, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000240, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, CallFunc_Array_Get_Item) == 0x000248, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000250, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, CallFunc_Array_Length_ReturnValue) == 0x000254, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetRallyPoint_C_OnMouseButtonUp, CallFunc_Less_IntInt_ReturnValue) == 0x000258, "Member 'BP_MapWidgetRallyPoint_C_OnMouseButtonUp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}


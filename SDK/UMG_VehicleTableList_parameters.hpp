#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VehicleTableList

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UMG_VehicleTableList.UMG_VehicleTableList_C.ExecuteUbergraph_UMG_VehicleTableList
// 0x0008 (0x0008 - 0x0000)
struct UMG_VehicleTableList_C_ExecuteUbergraph_UMG_VehicleTableList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VehicleTableList_C_ExecuteUbergraph_UMG_VehicleTableList) == 0x000004, "Wrong alignment on UMG_VehicleTableList_C_ExecuteUbergraph_UMG_VehicleTableList");
static_assert(sizeof(UMG_VehicleTableList_C_ExecuteUbergraph_UMG_VehicleTableList) == 0x000008, "Wrong size on UMG_VehicleTableList_C_ExecuteUbergraph_UMG_VehicleTableList");
static_assert(offsetof(UMG_VehicleTableList_C_ExecuteUbergraph_UMG_VehicleTableList, EntryPoint) == 0x000000, "Member 'UMG_VehicleTableList_C_ExecuteUbergraph_UMG_VehicleTableList::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableList_C_ExecuteUbergraph_UMG_VehicleTableList, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UMG_VehicleTableList_C_ExecuteUbergraph_UMG_VehicleTableList::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UMG_VehicleTableList.UMG_VehicleTableList_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_VehicleTableList_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VehicleTableList_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_VehicleTableList_C_PreConstruct");
static_assert(sizeof(UMG_VehicleTableList_C_PreConstruct) == 0x000001, "Wrong size on UMG_VehicleTableList_C_PreConstruct");
static_assert(offsetof(UMG_VehicleTableList_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_VehicleTableList_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_VehicleTableList.UMG_VehicleTableList_C.AddRow
// 0x0020 (0x0020 - 0x0000)
struct UMG_VehicleTableList_C_AddRow final
{
public:
	class UUserWidget*                            Row;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleTableList_C_AddRow) == 0x000008, "Wrong alignment on UMG_VehicleTableList_C_AddRow");
static_assert(sizeof(UMG_VehicleTableList_C_AddRow) == 0x000020, "Wrong size on UMG_VehicleTableList_C_AddRow");
static_assert(offsetof(UMG_VehicleTableList_C_AddRow, Row) == 0x000000, "Member 'UMG_VehicleTableList_C_AddRow::Row' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableList_C_AddRow, K2Node_MakeStruct_Margin) == 0x000008, "Member 'UMG_VehicleTableList_C_AddRow::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableList_C_AddRow, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000018, "Member 'UMG_VehicleTableList_C_AddRow::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

}


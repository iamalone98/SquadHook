#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Pip.BP_Pip_C
// 0x0070 (0x0A60 - 0x09F0)
class UBP_Pip_C final : public USQPipScopeCaptureComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FVector2D>                      Out_Pixel_Locations;                               // 0x09F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        DebugPoints;                                       // 0x0A08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ASQProjectile*>                  Out_Actors;                                        // 0x0A18(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ASQProjectile*                          Projectile;                                        // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Meters_value;                                      // 0x0A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FirstDebugIndex;                                   // 0x0A34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastDebugIndex;                                    // 0x0A38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA6[0x4];                                     // 0x0A3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 IndexesToSkip;                                     // 0x0A40(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MOADebugIndex;                                     // 0x0A50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugMarks;                                       // 0x0A54(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDebugSpheres;                                     // 0x0A55(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA7[0x2];                                     // 0x0A56(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceIncrements;                                // 0x0A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialDistance;                                   // 0x0A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Pip(int32 EntryPoint);
	void CVarUpdated(const class FString& CVarName);
	void BPPostCaptureScene();
	void ClearDebugPoints(bool bIsStateA);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void CalculateMOA(const struct FVector& ZeroPosition, const struct FVector& TargetPosition, float* OutMOA, float* OutDegrees);
	void PrintMOA();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Pip_C">();
	}
	static class UBP_Pip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Pip_C>();
	}
};
static_assert(alignof(UBP_Pip_C) == 0x000010, "Wrong alignment on UBP_Pip_C");
static_assert(sizeof(UBP_Pip_C) == 0x000A60, "Wrong size on UBP_Pip_C");
static_assert(offsetof(UBP_Pip_C, UberGraphFrame) == 0x0009F0, "Member 'UBP_Pip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, Out_Pixel_Locations) == 0x0009F8, "Member 'UBP_Pip_C::Out_Pixel_Locations' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, DebugPoints) == 0x000A08, "Member 'UBP_Pip_C::DebugPoints' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, Out_Actors) == 0x000A18, "Member 'UBP_Pip_C::Out_Actors' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, Projectile) == 0x000A28, "Member 'UBP_Pip_C::Projectile' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, Meters_value) == 0x000A30, "Member 'UBP_Pip_C::Meters_value' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, FirstDebugIndex) == 0x000A34, "Member 'UBP_Pip_C::FirstDebugIndex' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, LastDebugIndex) == 0x000A38, "Member 'UBP_Pip_C::LastDebugIndex' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, IndexesToSkip) == 0x000A40, "Member 'UBP_Pip_C::IndexesToSkip' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, MOADebugIndex) == 0x000A50, "Member 'UBP_Pip_C::MOADebugIndex' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, bDebugMarks) == 0x000A54, "Member 'UBP_Pip_C::bDebugMarks' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, bDebugSpheres) == 0x000A55, "Member 'UBP_Pip_C::bDebugSpheres' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, DistanceIncrements) == 0x000A58, "Member 'UBP_Pip_C::DistanceIncrements' has a wrong offset!");
static_assert(offsetof(UBP_Pip_C, InitialDistance) == 0x000A5C, "Member 'UBP_Pip_C::InitialDistance' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModelRenderPanel

#include "Basic.hpp"

#include "ModelRenderPanel_classes.hpp"
#include "ModelRenderPanel_parameters.hpp"


namespace SDK
{

// Function ModelRenderPanel.ModelRenderPanel_C.ExecuteUbergraph_ModelRenderPanel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModelRenderPanel_C::ExecuteUbergraph_ModelRenderPanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "ExecuteUbergraph_ModelRenderPanel");

	Params::ModelRenderPanel_C_ExecuteUbergraph_ModelRenderPanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModelRenderPanel.ModelRenderPanel_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UModelRenderPanel_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModelRenderPanel.ModelRenderPanel_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModelRenderPanel_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "Tick");

	Params::ModelRenderPanel_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModelRenderPanel.ModelRenderPanel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UModelRenderPanel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "PreConstruct");

	Params::ModelRenderPanel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModelRenderPanel.ModelRenderPanel_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UModelRenderPanel_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "OnMouseLeave");

	Params::ModelRenderPanel_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModelRenderPanel.ModelRenderPanel_C.RendererSetup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UModelRenderPanel_C::RendererSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "RendererSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModelRenderPanel.ModelRenderPanel_C.UpdateRender
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UModelRenderPanel_C::UpdateRender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "UpdateRender");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModelRenderPanel.ModelRenderPanel_C.RotateCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   XDelta                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   YDelta                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModelRenderPanel_C::RotateCamera(float XDelta, float YDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "RotateCamera");

	Params::ModelRenderPanel_C_RotateCamera Parms{};

	Parms.XDelta = XDelta;
	Parms.YDelta = YDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModelRenderPanel.ModelRenderPanel_C.OnMouseButtonDown_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UModelRenderPanel_C::OnMouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "OnMouseButtonDown_0");

	Params::ModelRenderPanel_C_OnMouseButtonDown_0 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ModelRenderPanel.ModelRenderPanel_C.OnMouseButtonUp_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UModelRenderPanel_C::OnMouseButtonUp_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "OnMouseButtonUp_0");

	Params::ModelRenderPanel_C_OnMouseButtonUp_0 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ModelRenderPanel.ModelRenderPanel_C.RemoveRenderActors
// (Public, BlueprintCallable, BlueprintEvent)

void UModelRenderPanel_C::RemoveRenderActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "RemoveRenderActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModelRenderPanel.ModelRenderPanel_C.ClearRender
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UModelRenderPanel_C::ClearRender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "ClearRender");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModelRenderPanel.ModelRenderPanel_C.SetupAsImage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       OverrideTexture                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModelRenderPanel_C::SetupAsImage(class UTexture2D* OverrideTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "SetupAsImage");

	Params::ModelRenderPanel_C_SetupAsImage Parms{};

	Parms.OverrideTexture = OverrideTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModelRenderPanel.ModelRenderPanel_C.SetupSkeletalMesh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    SkeletalMesh                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInterface*>       Materials                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UModelRenderPanel_C::SetupSkeletalMesh(class USkeletalMesh* SkeletalMesh, TArray<class UMaterialInterface*>& Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "SetupSkeletalMesh");

	Params::ModelRenderPanel_C_SetupSkeletalMesh Parms{};

	Parms.SkeletalMesh = SkeletalMesh;
	Parms.Materials = std::move(Materials);

	UObject::ProcessEvent(Func, &Parms);

	Materials = std::move(Parms.Materials);
}


// Function ModelRenderPanel.ModelRenderPanel_C.SetupStaticMesh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      StaticMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInterface*>       Materials                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UModelRenderPanel_C::SetupStaticMesh(class UStaticMesh* StaticMesh, TArray<class UMaterialInterface*>& Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "SetupStaticMesh");

	Params::ModelRenderPanel_C_SetupStaticMesh Parms{};

	Parms.StaticMesh = StaticMesh;
	Parms.Materials = std::move(Materials);

	UObject::ProcessEvent(Func, &Parms);

	Materials = std::move(Parms.Materials);
}


// Function ModelRenderPanel.ModelRenderPanel_C.SetupCustomActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           CustomActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModelRenderPanel_C::SetupCustomActor(class AActor* CustomActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "SetupCustomActor");

	Params::ModelRenderPanel_C_SetupCustomActor Parms{};

	Parms.CustomActor = CustomActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModelRenderPanel.ModelRenderPanel_C.SetCameraModelOffset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UModelRenderPanel_C::SetCameraModelOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "SetCameraModelOffset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModelRenderPanel.ModelRenderPanel_C.SetCustomOrthoWidth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_CustomOrthoWidth                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UModelRenderPanel_C::SetCustomOrthoWidth(float Param_CustomOrthoWidth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "SetCustomOrthoWidth");

	Params::ModelRenderPanel_C_SetCustomOrthoWidth Parms{};

	Parms.Param_CustomOrthoWidth = Param_CustomOrthoWidth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModelRenderPanel.ModelRenderPanel_C.SetCustomPostProcess
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPostProcessSettings             InPostProcessSettings                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void UModelRenderPanel_C::SetCustomPostProcess(const struct FPostProcessSettings& InPostProcessSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModelRenderPanel_C", "SetCustomPostProcess");

	Params::ModelRenderPanel_C_SetCustomPostProcess Parms{};

	Parms.InPostProcessSettings = std::move(InPostProcessSettings);

	UObject::ProcessEvent(Func, &Parms);
}

}


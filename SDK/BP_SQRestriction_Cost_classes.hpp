#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQRestriction_Cost

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SQCostEntry_structs.hpp"
#include "ESQTargetPurse_structs.hpp"
#include "ESQCurrency_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SQRestriction_Cost.BP_SQRestriction_Cost_C
// 0x0138 (0x0198 - 0x0060)
class UBP_SQRestriction_Cost_C final : public USQRestriction_Cost
{
public:
	TArray<struct FSQCostEntry>                   Prices;                                            // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly)
	ESQTargetPurse                                Payer;                                             // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1B[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESQCurrency, struct FDataTableRowHandle> FOBUnavailabilityReason;                           // 0x0078(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AdvancedDisplay)
	TMap<ESQCurrency, struct FDataTableRowHandle> TeamUnavailabilityReason;                          // 0x00C8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AdvancedDisplay)
	TMap<ESQCurrency, struct FDataTableRowHandle> VehicleUnavailabilityReason;                       // 0x0118(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AdvancedDisplay)
	struct FDataTableRowHandle                    PlayerNotInFOBReason;                              // 0x0168(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay)
	struct FDataTableRowHandle                    PlayerNotInVehicleReason;                          // 0x0178(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay)
	struct FDataTableRowHandle                    PlayerNotInVehicleWithResourcesReason;             // 0x0188(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay)

public:
	bool CanPlayerBuy(class ASQPlayerController* InPlayer, struct FDataTableRowHandle* OutRestrictionReason) const;
	bool CanTeamBuy(class ASQTeam* InTeam, struct FDataTableRowHandle* OutRestrictionReason) const;
	bool HasPlayerBasedCost() const;
	bool HasTeamBasedCost() const;
	void PayCostForTeam(class ASQTeam* InTeam) const;
	void PayCostForPlayer(class ASQPlayerController* InPlayer) const;
	void RefundCostForTeam(class ASQTeam* InTeam, int32 InPercentage) const;
	void RefundCostForPlayer(class ASQPlayerController* InPlayer, int32 InPercentage) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SQRestriction_Cost_C">();
	}
	static class UBP_SQRestriction_Cost_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SQRestriction_Cost_C>();
	}
};
static_assert(alignof(UBP_SQRestriction_Cost_C) == 0x000008, "Wrong alignment on UBP_SQRestriction_Cost_C");
static_assert(sizeof(UBP_SQRestriction_Cost_C) == 0x000198, "Wrong size on UBP_SQRestriction_Cost_C");
static_assert(offsetof(UBP_SQRestriction_Cost_C, Prices) == 0x000060, "Member 'UBP_SQRestriction_Cost_C::Prices' has a wrong offset!");
static_assert(offsetof(UBP_SQRestriction_Cost_C, Payer) == 0x000070, "Member 'UBP_SQRestriction_Cost_C::Payer' has a wrong offset!");
static_assert(offsetof(UBP_SQRestriction_Cost_C, FOBUnavailabilityReason) == 0x000078, "Member 'UBP_SQRestriction_Cost_C::FOBUnavailabilityReason' has a wrong offset!");
static_assert(offsetof(UBP_SQRestriction_Cost_C, TeamUnavailabilityReason) == 0x0000C8, "Member 'UBP_SQRestriction_Cost_C::TeamUnavailabilityReason' has a wrong offset!");
static_assert(offsetof(UBP_SQRestriction_Cost_C, VehicleUnavailabilityReason) == 0x000118, "Member 'UBP_SQRestriction_Cost_C::VehicleUnavailabilityReason' has a wrong offset!");
static_assert(offsetof(UBP_SQRestriction_Cost_C, PlayerNotInFOBReason) == 0x000168, "Member 'UBP_SQRestriction_Cost_C::PlayerNotInFOBReason' has a wrong offset!");
static_assert(offsetof(UBP_SQRestriction_Cost_C, PlayerNotInVehicleReason) == 0x000178, "Member 'UBP_SQRestriction_Cost_C::PlayerNotInVehicleReason' has a wrong offset!");
static_assert(offsetof(UBP_SQRestriction_Cost_C, PlayerNotInVehicleWithResourcesReason) == 0x000188, "Member 'UBP_SQRestriction_Cost_C::PlayerNotInVehicleWithResourcesReason' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MapVehicleList

#include "Basic.hpp"

#include "Squad_structs.hpp"
#include "S_VehicleListData_structs.hpp"
#include "ESQVehicle_structs.hpp"
#include "S_VehicleListDataArray_structs.hpp"
#include "ESQVehicleTag_structs.hpp"
#include "SQVehicleEntry_structs.hpp"
#include "ESQIntelligence_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_MapVehicleList.W_MapVehicleList_C.ExecuteUbergraph_W_MapVehicleList
// 0x00E0 (0x00E0 - 0x0000)
struct W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4009[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           CallFunc_TryGetTeamState_OutTeamState;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetTeamState_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_400A[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSQAvailabilityState_Vehicle>   CallFunc_GetVehiclesForTeam_OutVehicles;           // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FSQAvailabilityState_Vehicle           CallFunc_Array_Get_Item;                           // 0x0050(0x0050)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_400B[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetId_ReturnValue;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_400C[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ConvertId_Out_Key;                        // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MapVehicleListItem_C*                CallFunc_Map_Find_Value;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_400D[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MapVehicleListItem_C*                CallFunc_Map_Find_Value_1;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList) == 0x000008, "Wrong alignment on W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList");
static_assert(sizeof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList) == 0x0000E0, "Wrong size on W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, EntryPoint) == 0x000000, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, Temp_int_Array_Index_Variable) == 0x000014, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, Temp_int_Variable) == 0x000028, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_TryGetTeamState_OutTeamState) == 0x000030, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_TryGetTeamState_OutTeamState' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_TryGetTeamState_ReturnValue) == 0x000038, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_TryGetTeamState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000039, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_GetVehiclesForTeam_OutVehicles) == 0x000040, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_GetVehiclesForTeam_OutVehicles' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_Array_Get_Item) == 0x000050, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_GetId_ReturnValue) == 0x0000A8, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_GetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_ConvertId_Out_Key) == 0x0000B4, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_ConvertId_Out_Key' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_Map_Find_Value_1) == 0x0000D0, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList, CallFunc_Map_Find_ReturnValue_1) == 0x0000D8, "Member 'W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function W_MapVehicleList.W_MapVehicleList_C.Collect Vehicle Data
// 0x00A0 (0x00A0 - 0x0000)
struct W_MapVehicleList_C_Collect_Vehicle_Data final
{
public:
	int32                                         L_LocalPlayerTeamId;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   L_Name;                                            // 0x0008(0x0018)(Edit, BlueprintVisible)
	int32                                         L_Ticket_Cost;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Same_Team;                                       // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_400F[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Team;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4010[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQFactionSetup_C*                   CallFunc_TryGetCurrentFactionSetup_OutFactionSetup; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetCurrentFactionSetup_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4011[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4012[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4013[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQAvailability_Vehicle*                CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQAvailability_Vehicle_C*           K2Node_DynamicCast_AsBP_SQAvailability_Vehicle;    // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4014[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4015[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISQTeamInterface>      K2Node_DynamicCast_AsSQTeam_Interface;             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4016[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamId_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapVehicleList_C_Collect_Vehicle_Data) == 0x000008, "Wrong alignment on W_MapVehicleList_C_Collect_Vehicle_Data");
static_assert(sizeof(W_MapVehicleList_C_Collect_Vehicle_Data) == 0x0000A0, "Wrong size on W_MapVehicleList_C_Collect_Vehicle_Data");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, L_LocalPlayerTeamId) == 0x000000, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::L_LocalPlayerTeamId' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, L_Name) == 0x000008, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::L_Name' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, L_Ticket_Cost) == 0x000020, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::L_Ticket_Cost' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, L_Same_Team) == 0x000024, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::L_Same_Team' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, L_Team) == 0x000028, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::L_Team' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, Temp_int_Variable) == 0x000030, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, Temp_int_Variable_1) == 0x000038, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_TryGetCurrentFactionSetup_OutFactionSetup) == 0x000040, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_TryGetCurrentFactionSetup_OutFactionSetup' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_TryGetCurrentFactionSetup_ReturnValue) == 0x000048, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_TryGetCurrentFactionSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000049, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, Temp_int_Array_Index_Variable) == 0x000058, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_Array_Get_Item) == 0x000060, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, K2Node_DynamicCast_AsBP_SQAvailability_Vehicle) == 0x000068, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::K2Node_DynamicCast_AsBP_SQAvailability_Vehicle' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_GetOwningPlayer_ReturnValue) == 0x000078, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, K2Node_DynamicCast_AsSQTeam_Interface) == 0x000088, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::K2Node_DynamicCast_AsSQTeam_Interface' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Collect_Vehicle_Data, CallFunc_GetTeamId_ReturnValue) == 0x00009C, "Member 'W_MapVehicleList_C_Collect_Vehicle_Data::CallFunc_GetTeamId_ReturnValue' has a wrong offset!");

// Function W_MapVehicleList.W_MapVehicleList_C.Draw Sorted Vehicle Data
// 0x0390 (0x0390 - 0x0000)
struct W_MapVehicleList_C_Draw_Sorted_Vehicle_Data final
{
public:
	TArray<struct FS_VehicleListData>             LArray;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<ESQVehicle>                            CategoryOrder;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	TMap<ESQVehicle, struct FS_VehicleListDataArray> EnemyCategorySorted;                               // 0x0020(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	TMap<ESQVehicle, struct FS_VehicleListDataArray> AllyCategorySorted;                                // 0x0070(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class FName>                           SortedEnemiesNames;                                // 0x00C0(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           SortedAlliesNames;                                 // 0x00D0(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_VehicleListData>             SortedEnemies;                                     // 0x00E0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FS_VehicleListData>             SortedAllies;                                      // 0x00F0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          L_Draw_Enemy;                                      // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Inserted;                                        // 0x0101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4017[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleListData                     L_Vic;                                             // 0x0108(0x0090)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_VehicleListData>             L_Cost_Sorted_Vics;                                // 0x0198(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4018[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESQVehicle>                            K2Node_MakeArray_Array;                            // 0x01C8(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MapVehicleListItem_C*                CallFunc_Create_ReturnValue;                       // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MapVehicleListItem_C*                CallFunc_Create_ReturnValue_1;                     // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQVehicle                                    CallFunc_Array_Get_Item;                           // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4019[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VehicleListDataArray                CallFunc_Map_Find_Value;                           // 0x0218(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401A[0x6];                                     // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleListData                     CallFunc_Array_Get_Item_1;                         // 0x0230(0x0090)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401B[0x3];                                     // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ConvertId_Out_Key;                        // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VehicleListDataArray                CallFunc_Map_Find_Value_1;                         // 0x02D0(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401C[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleListData                     CallFunc_Array_Get_Item_2;                         // 0x02E8(0x0090)(ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   CallFunc_ConvertId_Out_Key_1;                      // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldShowEnemyDetails_ShowDetails;       // 0x0385(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldShowEnemyDetails_ShowDetails_1;     // 0x0386(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldShowEnemyDetails_ShowDetails_2;     // 0x0387(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldShowEnemyDetails_ShowDetails_3;     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldShowEnemyDetails_ShowDetails_4;     // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data) == 0x000008, "Wrong alignment on W_MapVehicleList_C_Draw_Sorted_Vehicle_Data");
static_assert(sizeof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data) == 0x000390, "Wrong size on W_MapVehicleList_C_Draw_Sorted_Vehicle_Data");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, LArray) == 0x000000, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::LArray' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CategoryOrder) == 0x000010, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CategoryOrder' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, EnemyCategorySorted) == 0x000020, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::EnemyCategorySorted' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, AllyCategorySorted) == 0x000070, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::AllyCategorySorted' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, SortedEnemiesNames) == 0x0000C0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::SortedEnemiesNames' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, SortedAlliesNames) == 0x0000D0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::SortedAlliesNames' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, SortedEnemies) == 0x0000E0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::SortedEnemies' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, SortedAllies) == 0x0000F0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::SortedAllies' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, L_Draw_Enemy) == 0x000100, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::L_Draw_Enemy' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, L_Inserted) == 0x000101, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::L_Inserted' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, L_Vic) == 0x000108, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::L_Vic' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, L_Cost_Sorted_Vics) == 0x000198, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::L_Cost_Sorted_Vics' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, Temp_int_Array_Index_Variable) == 0x0001A8, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, Temp_int_Loop_Counter_Variable) == 0x0001AC, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, Temp_int_Array_Index_Variable_1) == 0x0001B0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Add_IntInt_ReturnValue) == 0x0001B4, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, Temp_int_Loop_Counter_Variable_1) == 0x0001B8, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001BC, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, Temp_int_Array_Index_Variable_2) == 0x0001C0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, K2Node_MakeArray_Array) == 0x0001C8, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_GetOwningPlayer_ReturnValue) == 0x0001D8, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Create_ReturnValue) == 0x0001E0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0001E8, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_AddChild_ReturnValue) == 0x0001F0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Create_ReturnValue_1) == 0x0001F8, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, Temp_int_Loop_Counter_Variable_2) == 0x000200, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Add_IntInt_ReturnValue_2) == 0x000204, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_AddChild_ReturnValue_1) == 0x000208, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Array_Get_Item) == 0x000210, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Array_Length_ReturnValue) == 0x000214, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Map_Find_Value) == 0x000218, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Map_Find_ReturnValue) == 0x000228, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Less_IntInt_ReturnValue) == 0x000229, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Array_Get_Item_1) == 0x000230, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Array_Length_ReturnValue_1) == 0x0002C0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002C4, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_ConvertId_Out_Key) == 0x0002C8, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_ConvertId_Out_Key' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Map_Find_Value_1) == 0x0002D0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Map_Find_ReturnValue_1) == 0x0002E0, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Array_Get_Item_2) == 0x0002E8, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_ConvertId_Out_Key_1) == 0x000378, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_ConvertId_Out_Key_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Array_Length_ReturnValue_2) == 0x000380, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_Less_IntInt_ReturnValue_2) == 0x000384, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_ShouldShowEnemyDetails_ShowDetails) == 0x000385, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_ShouldShowEnemyDetails_ShowDetails' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_ShouldShowEnemyDetails_ShowDetails_1) == 0x000386, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_ShouldShowEnemyDetails_ShowDetails_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_ShouldShowEnemyDetails_ShowDetails_2) == 0x000387, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_ShouldShowEnemyDetails_ShowDetails_2' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_ShouldShowEnemyDetails_ShowDetails_3) == 0x000388, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_ShouldShowEnemyDetails_ShowDetails_3' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Draw_Sorted_Vehicle_Data, CallFunc_ShouldShowEnemyDetails_ShowDetails_4) == 0x000389, "Member 'W_MapVehicleList_C_Draw_Sorted_Vehicle_Data::CallFunc_ShouldShowEnemyDetails_ShowDetails_4' has a wrong offset!");

// Function W_MapVehicleList.W_MapVehicleList_C.Sort Vics by Cost
// 0x0220 (0x0220 - 0x0000)
struct W_MapVehicleList_C_Sort_Vics_by_Cost final
{
public:
	TArray<struct FS_VehicleListData>             To_Sort;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_VehicleListData>             Out_Sorted;                                        // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_VehicleListData>             L_Cost_Sorted_Vics;                                // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          L_Inserted;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401D[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleListData                     L_Vic;                                             // 0x0038(0x0090)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401E[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401F[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4020[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleListData                     CallFunc_Array_Get_Item;                           // 0x00E8(0x0090)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VehicleListData                     CallFunc_Array_Get_Item_1;                         // 0x0180(0x0090)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapVehicleList_C_Sort_Vics_by_Cost) == 0x000008, "Wrong alignment on W_MapVehicleList_C_Sort_Vics_by_Cost");
static_assert(sizeof(W_MapVehicleList_C_Sort_Vics_by_Cost) == 0x000220, "Wrong size on W_MapVehicleList_C_Sort_Vics_by_Cost");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, To_Sort) == 0x000000, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::To_Sort' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, Out_Sorted) == 0x000010, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::Out_Sorted' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, L_Cost_Sorted_Vics) == 0x000020, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::L_Cost_Sorted_Vics' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, L_Inserted) == 0x000030, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::L_Inserted' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, L_Vic) == 0x000038, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::L_Vic' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, Temp_bool_True_if_break_was_hit_Variable) == 0x0000D0, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Not_PreBool_ReturnValue) == 0x0000D1, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, Temp_int_Array_Index_Variable_1) == 0x0000E0, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Array_Add_ReturnValue) == 0x000178, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, Temp_int_Loop_Counter_Variable_1) == 0x00017C, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Array_Length_ReturnValue_1) == 0x000210, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Less_IntInt_ReturnValue_1) == 0x000214, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Greater_IntInt_ReturnValue) == 0x000215, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_BooleanAND_ReturnValue) == 0x000216, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000217, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Array_Add_ReturnValue_1) == 0x000218, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Sort_Vics_by_Cost, CallFunc_Add_IntInt_ReturnValue_1) == 0x00021C, "Member 'W_MapVehicleList_C_Sort_Vics_by_Cost::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_MapVehicleList.W_MapVehicleList_C.Cache KillDeath Ruleset
// 0x0058 (0x0058 - 0x0000)
struct W_MapVehicleList_C_Cache_KillDeath_Ruleset final
{
public:
	TArray<TSubclassOf<class ASQGameRuleSet>>     Temp_class_Variable;                               // 0x0000(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4021[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWorldSettings*                         CallFunc_GetWorldSettings_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSQGame_Mode;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4022[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4023[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Ruleset_Vehicle;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MapVehicleList_C_Cache_KillDeath_Ruleset) == 0x000008, "Wrong alignment on W_MapVehicleList_C_Cache_KillDeath_Ruleset");
static_assert(sizeof(W_MapVehicleList_C_Cache_KillDeath_Ruleset) == 0x000058, "Wrong size on W_MapVehicleList_C_Cache_KillDeath_Ruleset");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, Temp_class_Variable) == 0x000000, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, CallFunc_GetWorldSettings_ReturnValue) == 0x000020, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::CallFunc_GetWorldSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, K2Node_ClassDynamicCast_AsSQGame_Mode) == 0x000028, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::K2Node_ClassDynamicCast_AsSQGame_Mode' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, K2Node_ClassDynamicCast_AsBP_Ruleset_Vehicle) == 0x000048, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::K2Node_ClassDynamicCast_AsBP_Ruleset_Vehicle' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_Cache_KillDeath_Ruleset, K2Node_ClassDynamicCast_bSuccess_1) == 0x000050, "Member 'W_MapVehicleList_C_Cache_KillDeath_Ruleset::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");

// Function W_MapVehicleList.W_MapVehicleList_C.AddVehicleToList
// 0x03B8 (0x03B8 - 0x0000)
struct W_MapVehicleList_C_AddVehicleToList final
{
public:
	class UBP_SQAvailability_Vehicle_C*           Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFriendly;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LWasAdded;                                         // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4024[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_VehicleListData>             LArr;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         InsertLocation;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4025[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CategoryNames;                                     // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         RangeEnd;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RangeStart;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQVehicle                                    TargetCategory;                                    // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4026[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleListData                     LocalVehicleData;                                  // 0x0048(0x0090)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4027[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4028[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetId_ReturnValue;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTicketsForVehicleLoss_Tickets;         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTicketsForEnemyVehicleKill_Tickets;    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetVehicleEntry_Success;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4029[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQVehicleEntry                        CallFunc_GetVehicleEntry_VehicleEntry;             // 0x0108(0x0070)(HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402A[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402B[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VehicleListDataArray                CallFunc_Map_Find_Value;                           // 0x0198(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402C[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleListDataArray                CallFunc_Map_Find_Value_1;                         // 0x01B0(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402D[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleListData                     CallFunc_Array_Get_Item;                           // 0x01C8(0x0090)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_VehicleListData                     CallFunc_Array_Get_Item_1;                         // 0x0258(0x0090)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NameLexicalLess_ReturnValue;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NameLexicalLess_ReturnValue_1;            // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402E[0x2];                                     // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_402F[0x2];                                     // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4030[0x1];                                     // 0x02FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VehicleListDataArray                K2Node_MakeStruct_S_VehicleListDataArray;          // 0x0300(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_VehicleListDataArray                K2Node_MakeStruct_S_VehicleListDataArray_1;        // 0x0310(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	ESQVehicleTag                                 Temp_byte_Variable;                                // 0x0320(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4031[0x6];                                     // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleListData                     K2Node_MakeStruct_S_VehicleListData;               // 0x0328(0x0090)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(W_MapVehicleList_C_AddVehicleToList) == 0x000008, "Wrong alignment on W_MapVehicleList_C_AddVehicleToList");
static_assert(sizeof(W_MapVehicleList_C_AddVehicleToList) == 0x0003B8, "Wrong size on W_MapVehicleList_C_AddVehicleToList");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, Vehicle) == 0x000000, "Member 'W_MapVehicleList_C_AddVehicleToList::Vehicle' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, TeamId) == 0x000008, "Member 'W_MapVehicleList_C_AddVehicleToList::TeamId' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, IsFriendly) == 0x00000C, "Member 'W_MapVehicleList_C_AddVehicleToList::IsFriendly' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, LWasAdded) == 0x00000D, "Member 'W_MapVehicleList_C_AddVehicleToList::LWasAdded' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, LArr) == 0x000010, "Member 'W_MapVehicleList_C_AddVehicleToList::LArr' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, InsertLocation) == 0x000020, "Member 'W_MapVehicleList_C_AddVehicleToList::InsertLocation' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CategoryNames) == 0x000028, "Member 'W_MapVehicleList_C_AddVehicleToList::CategoryNames' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, RangeEnd) == 0x000038, "Member 'W_MapVehicleList_C_AddVehicleToList::RangeEnd' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, RangeStart) == 0x00003C, "Member 'W_MapVehicleList_C_AddVehicleToList::RangeStart' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, TargetCategory) == 0x000040, "Member 'W_MapVehicleList_C_AddVehicleToList::TargetCategory' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, LocalVehicleData) == 0x000048, "Member 'W_MapVehicleList_C_AddVehicleToList::LocalVehicleData' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, Temp_bool_True_if_break_was_hit_Variable) == 0x0000D8, "Member 'W_MapVehicleList_C_AddVehicleToList::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Not_PreBool_ReturnValue) == 0x0000D9, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x0000E0, "Member 'W_MapVehicleList_C_AddVehicleToList::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'W_MapVehicleList_C_AddVehicleToList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'W_MapVehicleList_C_AddVehicleToList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_GetId_ReturnValue) == 0x0000F0, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_GetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_GetTicketsForVehicleLoss_Tickets) == 0x0000FC, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_GetTicketsForVehicleLoss_Tickets' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_GetTicketsForEnemyVehicleKill_Tickets) == 0x000100, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_GetTicketsForEnemyVehicleKill_Tickets' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_GetVehicleEntry_Success) == 0x000104, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_GetVehicleEntry_Success' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_GetVehicleEntry_VehicleEntry) == 0x000108, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_GetVehicleEntry_VehicleEntry' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000178, "Member 'W_MapVehicleList_C_AddVehicleToList::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, Temp_int_Array_Index_Variable) == 0x00017C, "Member 'W_MapVehicleList_C_AddVehicleToList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Not_PreBool_ReturnValue_1) == 0x000180, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Array_Add_ReturnValue) == 0x000184, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Array_Add_ReturnValue_1) == 0x000188, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, Temp_int_Loop_Counter_Variable_1) == 0x00018C, "Member 'W_MapVehicleList_C_AddVehicleToList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000190, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, Temp_int_Array_Index_Variable_1) == 0x000194, "Member 'W_MapVehicleList_C_AddVehicleToList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Map_Find_Value) == 0x000198, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Map_Find_ReturnValue) == 0x0001A8, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Map_Find_Value_1) == 0x0001B0, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Map_Find_ReturnValue_1) == 0x0001C0, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Array_Get_Item_1) == 0x000258, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_NameLexicalLess_ReturnValue) == 0x0002E8, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_NameLexicalLess_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_NameLexicalLess_ReturnValue_1) == 0x0002E9, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_NameLexicalLess_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Array_Length_ReturnValue) == 0x0002EC, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Less_IntInt_ReturnValue) == 0x0002F0, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_BooleanAND_ReturnValue) == 0x0002F1, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Array_Length_ReturnValue_1) == 0x0002F4, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F8, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_BooleanAND_ReturnValue_1) == 0x0002F9, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, Temp_bool_Variable) == 0x0002FA, "Member 'W_MapVehicleList_C_AddVehicleToList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, K2Node_Select_Default) == 0x0002FC, "Member 'W_MapVehicleList_C_AddVehicleToList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, K2Node_MakeStruct_S_VehicleListDataArray) == 0x000300, "Member 'W_MapVehicleList_C_AddVehicleToList::K2Node_MakeStruct_S_VehicleListDataArray' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, K2Node_MakeStruct_S_VehicleListDataArray_1) == 0x000310, "Member 'W_MapVehicleList_C_AddVehicleToList::K2Node_MakeStruct_S_VehicleListDataArray_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, Temp_byte_Variable) == 0x000320, "Member 'W_MapVehicleList_C_AddVehicleToList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, CallFunc_Set_Contains_ReturnValue) == 0x000321, "Member 'W_MapVehicleList_C_AddVehicleToList::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_AddVehicleToList, K2Node_MakeStruct_S_VehicleListData) == 0x000328, "Member 'W_MapVehicleList_C_AddVehicleToList::K2Node_MakeStruct_S_VehicleListData' has a wrong offset!");

// Function W_MapVehicleList.W_MapVehicleList_C.ConvertId
// 0x0060 (0x0060 - 0x0000)
struct W_MapVehicleList_C_ConvertId final
{
public:
	class FName                                   In_Id;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQAvailability*                        Availability;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Out_Key;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapVehicleList_C_ConvertId) == 0x000008, "Wrong alignment on W_MapVehicleList_C_ConvertId");
static_assert(sizeof(W_MapVehicleList_C_ConvertId) == 0x000060, "Wrong size on W_MapVehicleList_C_ConvertId");
static_assert(offsetof(W_MapVehicleList_C_ConvertId, In_Id) == 0x000000, "Member 'W_MapVehicleList_C_ConvertId::In_Id' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ConvertId, Availability) == 0x000008, "Member 'W_MapVehicleList_C_ConvertId::Availability' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ConvertId, Out_Key) == 0x000010, "Member 'W_MapVehicleList_C_ConvertId::Out_Key' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ConvertId, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'W_MapVehicleList_C_ConvertId::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ConvertId, CallFunc_GetObjectName_ReturnValue) == 0x000028, "Member 'W_MapVehicleList_C_ConvertId::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ConvertId, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'W_MapVehicleList_C_ConvertId::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ConvertId, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'W_MapVehicleList_C_ConvertId::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ConvertId, CallFunc_Conv_StringToName_ReturnValue) == 0x000058, "Member 'W_MapVehicleList_C_ConvertId::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function W_MapVehicleList.W_MapVehicleList_C.ShouldShowEnemyDetails
// 0x0028 (0x0028 - 0x0000)
struct W_MapVehicleList_C_ShouldShowEnemyDetails final
{
public:
	ESQIntelligence                               Intel;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDetails;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4032[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        CallFunc_TryGetCurrentFactionSetup_OutFactionSetup; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetCurrentFactionSetup_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4033[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQFactionSetup_C*                   K2Node_DynamicCast_AsBP_SQFaction_Setup;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasIntel_Out_Has_Intel;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MapVehicleList_C_ShouldShowEnemyDetails) == 0x000008, "Wrong alignment on W_MapVehicleList_C_ShouldShowEnemyDetails");
static_assert(sizeof(W_MapVehicleList_C_ShouldShowEnemyDetails) == 0x000028, "Wrong size on W_MapVehicleList_C_ShouldShowEnemyDetails");
static_assert(offsetof(W_MapVehicleList_C_ShouldShowEnemyDetails, Intel) == 0x000000, "Member 'W_MapVehicleList_C_ShouldShowEnemyDetails::Intel' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ShouldShowEnemyDetails, ShowDetails) == 0x000001, "Member 'W_MapVehicleList_C_ShouldShowEnemyDetails::ShowDetails' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ShouldShowEnemyDetails, CallFunc_TryGetCurrentFactionSetup_OutFactionSetup) == 0x000008, "Member 'W_MapVehicleList_C_ShouldShowEnemyDetails::CallFunc_TryGetCurrentFactionSetup_OutFactionSetup' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ShouldShowEnemyDetails, CallFunc_TryGetCurrentFactionSetup_ReturnValue) == 0x000010, "Member 'W_MapVehicleList_C_ShouldShowEnemyDetails::CallFunc_TryGetCurrentFactionSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ShouldShowEnemyDetails, K2Node_DynamicCast_AsBP_SQFaction_Setup) == 0x000018, "Member 'W_MapVehicleList_C_ShouldShowEnemyDetails::K2Node_DynamicCast_AsBP_SQFaction_Setup' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ShouldShowEnemyDetails, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_MapVehicleList_C_ShouldShowEnemyDetails::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_ShouldShowEnemyDetails, CallFunc_HasIntel_Out_Has_Intel) == 0x000021, "Member 'W_MapVehicleList_C_ShouldShowEnemyDetails::CallFunc_HasIntel_Out_Has_Intel' has a wrong offset!");

// Function W_MapVehicleList.W_MapVehicleList_C.EnsureMappingsSet
// 0x0060 (0x0060 - 0x0000)
struct W_MapVehicleList_C_EnsureMappingsSet final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4034[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_VehicleListData>             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_VehicleListDataArray                K2Node_MakeStruct_S_VehicleListDataArray;          // 0x0020(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_VehicleListDataArray                K2Node_MakeStruct_S_VehicleListDataArray_1;        // 0x0030(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	ESQVehicle                                    CallFunc_Array_Get_Item;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4035[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4036[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_MapVehicleList_C_EnsureMappingsSet) == 0x000008, "Wrong alignment on W_MapVehicleList_C_EnsureMappingsSet");
static_assert(sizeof(W_MapVehicleList_C_EnsureMappingsSet) == 0x000060, "Wrong size on W_MapVehicleList_C_EnsureMappingsSet");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_MapVehicleList_C_EnsureMappingsSet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_MapVehicleList_C_EnsureMappingsSet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, K2Node_MakeArray_Array) == 0x000010, "Member 'W_MapVehicleList_C_EnsureMappingsSet::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, K2Node_MakeStruct_S_VehicleListDataArray) == 0x000020, "Member 'W_MapVehicleList_C_EnsureMappingsSet::K2Node_MakeStruct_S_VehicleListDataArray' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, K2Node_MakeStruct_S_VehicleListDataArray_1) == 0x000030, "Member 'W_MapVehicleList_C_EnsureMappingsSet::K2Node_MakeStruct_S_VehicleListDataArray_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_Map_Contains_ReturnValue) == 0x000048, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_Map_Contains_ReturnValue_1) == 0x00004A, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_Map_Length_ReturnValue) == 0x000050, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_Map_Length_ReturnValue_1) == 0x000054, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000058, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000059, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_EnsureMappingsSet, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'W_MapVehicleList_C_EnsureMappingsSet::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_MapVehicleList.W_MapVehicleList_C.GetTicketsForEnemyVehicleKill
// 0x0068 (0x0068 - 0x0000)
struct W_MapVehicleList_C_GetTicketsForEnemyVehicleKill final
{
public:
	int32                                         Team_ID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4037[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                In_Vehicle_Setting;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Tickets;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_OutTickets;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4038[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4039[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetTeamsFromSingleRelationShipById_OutTeamIds; // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_403A[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Ruleset_Vehicle_C*                  K2Node_DynamicCast_AsBP_Ruleset_Vehicle;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_403B[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTicketsForVehicleKill_Out_Tickets;     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill) == 0x000008, "Wrong alignment on W_MapVehicleList_C_GetTicketsForEnemyVehicleKill");
static_assert(sizeof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill) == 0x000068, "Wrong size on W_MapVehicleList_C_GetTicketsForEnemyVehicleKill");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, Team_ID) == 0x000000, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::Team_ID' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, In_Vehicle_Setting) == 0x000008, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::In_Vehicle_Setting' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, Tickets) == 0x000010, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::Tickets' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, L_OutTickets) == 0x000014, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::L_OutTickets' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, CallFunc_Conv_IntToByte_ReturnValue) == 0x000018, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, CallFunc_GetValidValue_ReturnValue) == 0x000020, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, CallFunc_GetTeamsFromSingleRelationShipById_OutTeamIds) == 0x000028, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::CallFunc_GetTeamsFromSingleRelationShipById_OutTeamIds' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000048, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, K2Node_DynamicCast_AsBP_Ruleset_Vehicle) == 0x000050, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::K2Node_DynamicCast_AsBP_Ruleset_Vehicle' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, CallFunc_GetTicketsForVehicleKill_Out_Tickets) == 0x00005C, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::CallFunc_GetTicketsForVehicleKill_Out_Tickets' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForEnemyVehicleKill, CallFunc_Max_ReturnValue) == 0x000060, "Member 'W_MapVehicleList_C_GetTicketsForEnemyVehicleKill::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function W_MapVehicleList.W_MapVehicleList_C.GetTicketsForVehicleLoss
// 0x0060 (0x0060 - 0x0000)
struct W_MapVehicleList_C_GetTicketsForVehicleLoss final
{
public:
	class UBP_SQVehicleSettings_C*                In_Vehicle_Setting;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Tickets;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_OutTickets;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403C[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Ruleset_Vehicle_C*                  K2Node_DynamicCast_AsBP_Ruleset_Vehicle;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_403D[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetTeamsFromSingleRelationShipById_OutTeamIds; // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_403E[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTicketsForVehicleKill_Out_Tickets;     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MapVehicleList_C_GetTicketsForVehicleLoss) == 0x000008, "Wrong alignment on W_MapVehicleList_C_GetTicketsForVehicleLoss");
static_assert(sizeof(W_MapVehicleList_C_GetTicketsForVehicleLoss) == 0x000060, "Wrong size on W_MapVehicleList_C_GetTicketsForVehicleLoss");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, In_Vehicle_Setting) == 0x000000, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::In_Vehicle_Setting' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, Tickets) == 0x000008, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::Tickets' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, L_OutTickets) == 0x00000C, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::L_OutTickets' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, CallFunc_Conv_IntToByte_ReturnValue) == 0x00001C, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, CallFunc_GetValidValue_ReturnValue) == 0x00001D, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000020, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, K2Node_DynamicCast_AsBP_Ruleset_Vehicle) == 0x000028, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::K2Node_DynamicCast_AsBP_Ruleset_Vehicle' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, CallFunc_GetTeamsFromSingleRelationShipById_OutTeamIds) == 0x000038, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::CallFunc_GetTeamsFromSingleRelationShipById_OutTeamIds' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, CallFunc_Array_Get_Item) == 0x00004C, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, CallFunc_GetTicketsForVehicleKill_Out_Tickets) == 0x000054, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::CallFunc_GetTicketsForVehicleKill_Out_Tickets' has a wrong offset!");
static_assert(offsetof(W_MapVehicleList_C_GetTicketsForVehicleLoss, CallFunc_Max_ReturnValue) == 0x000058, "Member 'W_MapVehicleList_C_GetTicketsForVehicleLoss::CallFunc_Max_ReturnValue' has a wrong offset!");

}


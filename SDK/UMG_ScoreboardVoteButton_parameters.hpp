#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_ScoreboardVoteButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UMG_ScoreboardVoteButton.UMG_ScoreboardVoteButton_C.ExecuteUbergraph_UMG_ScoreboardVoteButton
// 0x0044 (0x0044 - 0x0000)
struct UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton) == 0x000004, "Wrong alignment on UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton");
static_assert(sizeof(UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton) == 0x000044, "Wrong size on UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton, EntryPoint) == 0x000000, "Member 'UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton, K2Node_Event_MyGeometry) == 0x000004, "Member 'UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton, K2Node_Event_IsDesignTime) == 0x000040, "Member 'UMG_ScoreboardVoteButton_C_ExecuteUbergraph_UMG_ScoreboardVoteButton::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UMG_ScoreboardVoteButton.UMG_ScoreboardVoteButton_C.Tick
// 0x003C (0x003C - 0x0000)
struct UMG_ScoreboardVoteButton_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_ScoreboardVoteButton_C_Tick) == 0x000004, "Wrong alignment on UMG_ScoreboardVoteButton_C_Tick");
static_assert(sizeof(UMG_ScoreboardVoteButton_C_Tick) == 0x00003C, "Wrong size on UMG_ScoreboardVoteButton_C_Tick");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_Tick, MyGeometry) == 0x000000, "Member 'UMG_ScoreboardVoteButton_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_Tick, InDeltaTime) == 0x000038, "Member 'UMG_ScoreboardVoteButton_C_Tick::InDeltaTime' has a wrong offset!");

// Function UMG_ScoreboardVoteButton.UMG_ScoreboardVoteButton_C.EnableVote
// 0x0018 (0x0018 - 0x0000)
struct UMG_ScoreboardVoteButton_C_EnableVote final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_ScoreboardVoteButton_C_EnableVote) == 0x000008, "Wrong alignment on UMG_ScoreboardVoteButton_C_EnableVote");
static_assert(sizeof(UMG_ScoreboardVoteButton_C_EnableVote) == 0x000018, "Wrong size on UMG_ScoreboardVoteButton_C_EnableVote");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_EnableVote, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UMG_ScoreboardVoteButton_C_EnableVote::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_EnableVote, CallFunc_GetSquadGameState_Return_Value) == 0x000010, "Member 'UMG_ScoreboardVoteButton_C_EnableVote::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");

// Function UMG_ScoreboardVoteButton.UMG_ScoreboardVoteButton_C.OnNewResult
// 0x0018 (0x0018 - 0x0000)
struct UMG_ScoreboardVoteButton_C_OnNewResult final
{
public:
	int32                                         CallFunc_TryGetLocalPlayerTeamId_OutTeamId;        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamId_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_423C[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_ScoreboardVoteButton_C_OnNewResult) == 0x000008, "Wrong alignment on UMG_ScoreboardVoteButton_C_OnNewResult");
static_assert(sizeof(UMG_ScoreboardVoteButton_C_OnNewResult) == 0x000018, "Wrong size on UMG_ScoreboardVoteButton_C_OnNewResult");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_OnNewResult, CallFunc_TryGetLocalPlayerTeamId_OutTeamId) == 0x000000, "Member 'UMG_ScoreboardVoteButton_C_OnNewResult::CallFunc_TryGetLocalPlayerTeamId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_OnNewResult, CallFunc_TryGetLocalPlayerTeamId_ReturnValue) == 0x000004, "Member 'UMG_ScoreboardVoteButton_C_OnNewResult::CallFunc_TryGetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_OnNewResult, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000005, "Member 'UMG_ScoreboardVoteButton_C_OnNewResult::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_OnNewResult, CallFunc_GetSquadGameState_Return_Value) == 0x000008, "Member 'UMG_ScoreboardVoteButton_C_OnNewResult::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_OnNewResult, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000010, "Member 'UMG_ScoreboardVoteButton_C_OnNewResult::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_OnNewResult, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000011, "Member 'UMG_ScoreboardVoteButton_C_OnNewResult::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function UMG_ScoreboardVoteButton.UMG_ScoreboardVoteButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_ScoreboardVoteButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_ScoreboardVoteButton_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_ScoreboardVoteButton_C_PreConstruct");
static_assert(sizeof(UMG_ScoreboardVoteButton_C_PreConstruct) == 0x000001, "Wrong size on UMG_ScoreboardVoteButton_C_PreConstruct");
static_assert(offsetof(UMG_ScoreboardVoteButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_ScoreboardVoteButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MusicPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MusicPlayer.MusicPlayer_C
// 0x00A0 (0x0300 - 0x0260)
class UMusicPlayer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Slide;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UMainMenu_Button_C*                     ButtonPlayStop;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenu_Button_C*                     ButtonSkipBack;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenu_Button_C*                     ButtonSkipForward;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenu_Button_C*                     HideButton;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_127;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Time;                                  // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider_Time;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider_Volume;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TBSongName;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class USoundBase>>      Tracks;                                            // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USoundBase*>                     LoadedTracks;                                      // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentTrack;                                      // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EA[0x4];                                     // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    PC;                                                // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Muted;                                             // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EB[0x3];                                     // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Song_Elapsed_Percent;                              // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Scrub_Time;                                        // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MusicPlayer(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Play_Sound(class USoundBase* NewSound);
	void Load_Sound(int32 Param_Index);
	void Next_Track();
	void Play_Time(const class USoundWave* PlayingSoundWave, const float PlaybackPercent);
	void BndEvt__Slider_Time_K2Node_ComponentBoundEvent_0_OnMouseCaptureBeginEvent__DelegateSignature();
	void BndEvt__Slider_Time_K2Node_ComponentBoundEvent_146_OnMouseCaptureEndEvent__DelegateSignature();
	void Construct();
	void BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature(bool bSelected, class UMainMenu_Button_C* Button);
	void BndEvt__Slider_0_K2Node_ComponentBoundEvent_45_OnMouseCaptureEndEvent__DelegateSignature();
	void BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, class UMainMenu_Button_C* Button);
	void BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature(bool bSelected, class UMainMenu_Button_C* Button);
	void BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, class UMainMenu_Button_C* Button);
	void OnLoaded_64894CBD4CB9747691437E9B69432F5B(class UObject* Loaded);
	void Skip_Track(bool Forward);
	void Refresh_Audio();
	void Mute_Audio(bool Mute);
	void Update_Menu_Settings();
	class FText Get_TBSongName_Text_0();
	void GetPercent_0();
	float Get_Song_Progress();
	void Get_Music_AC(class UAudioComponent** MusicAC);
	void Play_Music();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MusicPlayer_C">();
	}
	static class UMusicPlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicPlayer_C>();
	}
};
static_assert(alignof(UMusicPlayer_C) == 0x000008, "Wrong alignment on UMusicPlayer_C");
static_assert(sizeof(UMusicPlayer_C) == 0x000300, "Wrong size on UMusicPlayer_C");
static_assert(offsetof(UMusicPlayer_C, UberGraphFrame) == 0x000260, "Member 'UMusicPlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, Slide) == 0x000268, "Member 'UMusicPlayer_C::Slide' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, ButtonPlayStop) == 0x000270, "Member 'UMusicPlayer_C::ButtonPlayStop' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, ButtonSkipBack) == 0x000278, "Member 'UMusicPlayer_C::ButtonSkipBack' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, ButtonSkipForward) == 0x000280, "Member 'UMusicPlayer_C::ButtonSkipForward' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, HideButton) == 0x000288, "Member 'UMusicPlayer_C::HideButton' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, Image_1) == 0x000290, "Member 'UMusicPlayer_C::Image_1' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, Image_127) == 0x000298, "Member 'UMusicPlayer_C::Image_127' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, ProgressBar_Time) == 0x0002A0, "Member 'UMusicPlayer_C::ProgressBar_Time' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, Slider_Time) == 0x0002A8, "Member 'UMusicPlayer_C::Slider_Time' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, Slider_Volume) == 0x0002B0, "Member 'UMusicPlayer_C::Slider_Volume' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, TBSongName) == 0x0002B8, "Member 'UMusicPlayer_C::TBSongName' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, Tracks) == 0x0002C0, "Member 'UMusicPlayer_C::Tracks' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, LoadedTracks) == 0x0002D0, "Member 'UMusicPlayer_C::LoadedTracks' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, CurrentTrack) == 0x0002E0, "Member 'UMusicPlayer_C::CurrentTrack' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, PC) == 0x0002E8, "Member 'UMusicPlayer_C::PC' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, Muted) == 0x0002F0, "Member 'UMusicPlayer_C::Muted' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, Song_Elapsed_Percent) == 0x0002F4, "Member 'UMusicPlayer_C::Song_Elapsed_Percent' has a wrong offset!");
static_assert(offsetof(UMusicPlayer_C, Scrub_Time) == 0x0002F8, "Member 'UMusicPlayer_C::Scrub_Time' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mtlb_animBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysXVehicles_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass mtlb_animBP.mtlb_animBP_C
// 0x2520 (0x3000 - 0x0AE0)
class UMtlb_animBP_C final : public USQAmphibiousVehicleAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0AE8(0x0030)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_11;             // 0x0B18(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_10;             // 0x0C30(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_9;              // 0x0D48(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_8;              // 0x0E60(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_7;              // 0x0F78(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_6;              // 0x1090(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_5;              // 0x11A8(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_4;              // 0x12C0(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_3;              // 0x13D8(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_2;              // 0x14F0(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController_1;              // 0x1608(0x0118)()
	struct FAnimNode_BoneDrivenController         AnimGraphNode_BoneDrivenController;                // 0x1720(0x0118)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1838(0x0158)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1990(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x19D8(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1A98(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1B18(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x1B98(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1C60(0x00C8)()
	uint8                                         Pad_4C4F[0x8];                                     // 0x1D28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_2;                      // 0x1D30(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0x2170(0x0440)()
	struct FAnimNode_WheelHandler                 AnimGraphNode_WheelHandler;                        // 0x25B0(0x00E0)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x2690(0x0440)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x2AD0(0x0158)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x2C28(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x2C48(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x2C70(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x2C90(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x2CB0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x2CD0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2CF8(0x0158)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x2E50(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2F10(0x0080)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x2F90(0x0018)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2FA8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2FD0(0x0028)()
	bool                                          bIsTrackLeftDestroyed;                             // 0x2FF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsTrackRightDestroyed;                            // 0x2FF9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_mtlb_animBP(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"mtlb_animBP_C">();
	}
	static class UMtlb_animBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMtlb_animBP_C>();
	}
};
static_assert(alignof(UMtlb_animBP_C) == 0x000010, "Wrong alignment on UMtlb_animBP_C");
static_assert(sizeof(UMtlb_animBP_C) == 0x003000, "Wrong size on UMtlb_animBP_C");
static_assert(offsetof(UMtlb_animBP_C, UberGraphFrame) == 0x000AE0, "Member 'UMtlb_animBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_Root) == 0x000AE8, "Member 'UMtlb_animBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_11) == 0x000B18, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_11' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_10) == 0x000C30, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_10' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_9) == 0x000D48, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_9' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_8) == 0x000E60, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_8' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_7) == 0x000F78, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_7' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_6) == 0x001090, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_6' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_5) == 0x0011A8, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_5' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_4) == 0x0012C0, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_4' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_3) == 0x0013D8, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_3' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_2) == 0x0014F0, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_2' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController_1) == 0x001608, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController_1' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_BoneDrivenController) == 0x001720, "Member 'UMtlb_animBP_C::AnimGraphNode_BoneDrivenController' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_SaveCachedPose_2) == 0x001838, "Member 'UMtlb_animBP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_Slot) == 0x001990, "Member 'UMtlb_animBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0019D8, "Member 'UMtlb_animBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_SequencePlayer_2) == 0x001A98, "Member 'UMtlb_animBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_SequencePlayer_1) == 0x001B18, "Member 'UMtlb_animBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_ApplyAdditive_1) == 0x001B98, "Member 'UMtlb_animBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_ApplyAdditive) == 0x001C60, "Member 'UMtlb_animBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_AnimDynamics_2) == 0x001D30, "Member 'UMtlb_animBP_C::AnimGraphNode_AnimDynamics_2' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_AnimDynamics_1) == 0x002170, "Member 'UMtlb_animBP_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_WheelHandler) == 0x0025B0, "Member 'UMtlb_animBP_C::AnimGraphNode_WheelHandler' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_AnimDynamics) == 0x002690, "Member 'UMtlb_animBP_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_SaveCachedPose_1) == 0x002AD0, "Member 'UMtlb_animBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x002C28, "Member 'UMtlb_animBP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_UseCachedPose_3) == 0x002C48, "Member 'UMtlb_animBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x002C70, "Member 'UMtlb_animBP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x002C90, "Member 'UMtlb_animBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_LocalToComponentSpace) == 0x002CB0, "Member 'UMtlb_animBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_UseCachedPose_2) == 0x002CD0, "Member 'UMtlb_animBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_SaveCachedPose) == 0x002CF8, "Member 'UMtlb_animBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_LayeredBoneBlend) == 0x002E50, "Member 'UMtlb_animBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_SequencePlayer) == 0x002F10, "Member 'UMtlb_animBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_LocalRefPose) == 0x002F90, "Member 'UMtlb_animBP_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_UseCachedPose_1) == 0x002FA8, "Member 'UMtlb_animBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, AnimGraphNode_UseCachedPose) == 0x002FD0, "Member 'UMtlb_animBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, bIsTrackLeftDestroyed) == 0x002FF8, "Member 'UMtlb_animBP_C::bIsTrackLeftDestroyed' has a wrong offset!");
static_assert(offsetof(UMtlb_animBP_C, bIsTrackRightDestroyed) == 0x002FF9, "Member 'UMtlb_animBP_C::bIsTrackRightDestroyed' has a wrong offset!");

}


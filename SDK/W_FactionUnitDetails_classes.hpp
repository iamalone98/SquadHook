#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FactionUnitDetails

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ESQVehicle_structs.hpp"
#include "ESQVehicleTag_structs.hpp"
#include "ESQDeployable_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_FactionUnitDetails.W_FactionUnitDetails_C
// 0x01D8 (0x0438 - 0x0260)
class UW_FactionUnitDetails_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUMG_VehicleTableList_C*                BoatsTableList;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_SimpleTableList_C*                 CommanderAbilities;                                // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DisabledAbilitiesText;                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DisabledBoatsText;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DisabledHeliText;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DisabledTanksText;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FactionImage;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FactionNameText;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FactionSetupNameText;                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FlagImage;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_SimpleTableList_C*                 Fob;                                               // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_VehicleTableList_C*                ForwardTableList;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_VehicleTableList_C*                HelicopterTableList;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           LeftColumn;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           RightColumn;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SingleModeText;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_SimpleTableList_C*                 SpecialCharacteristics;                            // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_VehicleTableList_C*                TankTableList;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_UnitTypeIcon_C*                      UnitType;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_VehicleTableList_C*                VehicleTableList;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             CloseWindow;                                       // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USQVoteSessionClient*                   CurrentSession;                                    // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentFactionChoiceIndex;                         // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41F5[0x4];                                     // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQLayer*                               LayerRef;                                          // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamId;                                            // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41F6[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESQVehicle, class FName>                 VehicleGroups;                                     // 0x0338(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class UUMG_VehicleTableList_C*> VehicleListMap;                                    // 0x0388(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUMG_VehicleTableItem_C*>        VehicleRowCache;                                   // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UClass*                                 Kill_Death_Ruleset;                                // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUMG_SimpleTableItem_C*>         SimpleRowCache;                                    // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<ESQDeployable>                         FOBFilter;                                         // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUMG_VoteFaction_C*                     FactionScreenRef;                                  // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_VoteItem_C*                        AssignedChoiceWidget;                              // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OptionsCount;                                      // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SingleMode;                                        // 0x0424(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41F7[0x3];                                     // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        ColumnChildren;                                    // 0x0428(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void CloseWindow__DelegateSignature();
	void ExecuteUbergraph_W_FactionUnitDetails(int32 EntryPoint);
	void Construct();
	void FillFromFaction(class USQFactionSetup* Faction, class USQLayer* Layer, int32 Param_TeamId, bool EnemyTeam);
	void GetChoiceIndex(class FName ChoiceId, int32* Param_Index);
	void GetFactionSetup(int32 Param_Index, class USQFactionSetup** Faction, class FName* FactionID);
	void FillVehicles(class USQFactionSetup* Faction);
	void GetVehicleRow(class USQAvailability_Vehicle* Settings, int32 RowIndex, class ABP_Ruleset_Vehicle_C* RuleSet, class UUMG_VehicleTableItem_C** Row, bool* Valid);
	void FillRightTable(class USQFactionSetup* Faction);
	void GetSimpleRow(int32 Param_Index, class UUMG_SimpleTableItem_C** Row);
	void UpdateUnitTypeIcon(TSoftObjectPtr<class UTexture2D> InRoleIcon, const class FText& InUnitName);
	void UpdateLayerAvailability();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_FactionUnitDetails_C">();
	}
	static class UW_FactionUnitDetails_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_FactionUnitDetails_C>();
	}
};
static_assert(alignof(UW_FactionUnitDetails_C) == 0x000008, "Wrong alignment on UW_FactionUnitDetails_C");
static_assert(sizeof(UW_FactionUnitDetails_C) == 0x000438, "Wrong size on UW_FactionUnitDetails_C");
static_assert(offsetof(UW_FactionUnitDetails_C, UberGraphFrame) == 0x000260, "Member 'UW_FactionUnitDetails_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, BoatsTableList) == 0x000268, "Member 'UW_FactionUnitDetails_C::BoatsTableList' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, CommanderAbilities) == 0x000270, "Member 'UW_FactionUnitDetails_C::CommanderAbilities' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, DisabledAbilitiesText) == 0x000278, "Member 'UW_FactionUnitDetails_C::DisabledAbilitiesText' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, DisabledBoatsText) == 0x000280, "Member 'UW_FactionUnitDetails_C::DisabledBoatsText' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, DisabledHeliText) == 0x000288, "Member 'UW_FactionUnitDetails_C::DisabledHeliText' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, DisabledTanksText) == 0x000290, "Member 'UW_FactionUnitDetails_C::DisabledTanksText' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, FactionImage) == 0x000298, "Member 'UW_FactionUnitDetails_C::FactionImage' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, FactionNameText) == 0x0002A0, "Member 'UW_FactionUnitDetails_C::FactionNameText' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, FactionSetupNameText) == 0x0002A8, "Member 'UW_FactionUnitDetails_C::FactionSetupNameText' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, FlagImage) == 0x0002B0, "Member 'UW_FactionUnitDetails_C::FlagImage' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, Fob) == 0x0002B8, "Member 'UW_FactionUnitDetails_C::Fob' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, ForwardTableList) == 0x0002C0, "Member 'UW_FactionUnitDetails_C::ForwardTableList' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, HelicopterTableList) == 0x0002C8, "Member 'UW_FactionUnitDetails_C::HelicopterTableList' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, LeftColumn) == 0x0002D0, "Member 'UW_FactionUnitDetails_C::LeftColumn' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, RightColumn) == 0x0002D8, "Member 'UW_FactionUnitDetails_C::RightColumn' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, SingleModeText) == 0x0002E0, "Member 'UW_FactionUnitDetails_C::SingleModeText' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, SpecialCharacteristics) == 0x0002E8, "Member 'UW_FactionUnitDetails_C::SpecialCharacteristics' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, TankTableList) == 0x0002F0, "Member 'UW_FactionUnitDetails_C::TankTableList' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, UnitType) == 0x0002F8, "Member 'UW_FactionUnitDetails_C::UnitType' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, VehicleTableList) == 0x000300, "Member 'UW_FactionUnitDetails_C::VehicleTableList' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, CloseWindow) == 0x000308, "Member 'UW_FactionUnitDetails_C::CloseWindow' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, CurrentSession) == 0x000318, "Member 'UW_FactionUnitDetails_C::CurrentSession' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, CurrentFactionChoiceIndex) == 0x000320, "Member 'UW_FactionUnitDetails_C::CurrentFactionChoiceIndex' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, LayerRef) == 0x000328, "Member 'UW_FactionUnitDetails_C::LayerRef' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, TeamId) == 0x000330, "Member 'UW_FactionUnitDetails_C::TeamId' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, VehicleGroups) == 0x000338, "Member 'UW_FactionUnitDetails_C::VehicleGroups' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, VehicleListMap) == 0x000388, "Member 'UW_FactionUnitDetails_C::VehicleListMap' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, VehicleRowCache) == 0x0003D8, "Member 'UW_FactionUnitDetails_C::VehicleRowCache' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, Kill_Death_Ruleset) == 0x0003E8, "Member 'UW_FactionUnitDetails_C::Kill_Death_Ruleset' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, SimpleRowCache) == 0x0003F0, "Member 'UW_FactionUnitDetails_C::SimpleRowCache' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, FOBFilter) == 0x000400, "Member 'UW_FactionUnitDetails_C::FOBFilter' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, FactionScreenRef) == 0x000410, "Member 'UW_FactionUnitDetails_C::FactionScreenRef' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, AssignedChoiceWidget) == 0x000418, "Member 'UW_FactionUnitDetails_C::AssignedChoiceWidget' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, OptionsCount) == 0x000420, "Member 'UW_FactionUnitDetails_C::OptionsCount' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, SingleMode) == 0x000424, "Member 'UW_FactionUnitDetails_C::SingleMode' has a wrong offset!");
static_assert(offsetof(UW_FactionUnitDetails_C, ColumnChildren) == 0x000428, "Member 'UW_FactionUnitDetails_C::ColumnChildren' has a wrong offset!");

}


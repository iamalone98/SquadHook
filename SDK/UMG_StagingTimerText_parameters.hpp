#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_StagingTimerText

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UMG_StagingTimerText.UMG_StagingTimerText_C.ExecuteUbergraph_UMG_StagingTimerText
// 0x00A0 (0x00A0 - 0x0000)
struct UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQTeamState* OldTeam, class ASQTeamState* NewTeam)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389F[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A0[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_38A1[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A2[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           K2Node_CustomEvent_OldTeam;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           K2Node_CustomEvent_NewTeam;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasVehicleStagging_ShouldShowStagging;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A3[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_HasVehicleStagging_LocalTeamId;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasVehicleStagging_ValidResult;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasDefenderRush_ShouldShowDefenderRush;   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText) == 0x000008, "Wrong alignment on UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText");
static_assert(sizeof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText) == 0x0000A0, "Wrong size on UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, EntryPoint) == 0x000000, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, Temp_bool_Variable) == 0x000004, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, Temp_byte_Variable) == 0x000018, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, Temp_byte_Variable_1) == 0x000019, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, Temp_bool_Variable_1) == 0x00001A, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, Temp_byte_Variable_2) == 0x00001B, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, Temp_byte_Variable_3) == 0x00001C, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, K2Node_DynamicCast_AsSQPlayer_State) == 0x000070, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, K2Node_CustomEvent_OldTeam) == 0x000080, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::K2Node_CustomEvent_OldTeam' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, K2Node_CustomEvent_NewTeam) == 0x000088, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::K2Node_CustomEvent_NewTeam' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, CallFunc_HasVehicleStagging_ShouldShowStagging) == 0x000090, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::CallFunc_HasVehicleStagging_ShouldShowStagging' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, CallFunc_HasVehicleStagging_LocalTeamId) == 0x000094, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::CallFunc_HasVehicleStagging_LocalTeamId' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, CallFunc_HasVehicleStagging_ValidResult) == 0x000098, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::CallFunc_HasVehicleStagging_ValidResult' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, K2Node_Select_Default) == 0x000099, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, CallFunc_HasDefenderRush_ShouldShowDefenderRush) == 0x00009A, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::CallFunc_HasDefenderRush_ShouldShowDefenderRush' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText, K2Node_Select_Default_1) == 0x00009B, "Member 'UMG_StagingTimerText_C_ExecuteUbergraph_UMG_StagingTimerText::K2Node_Select_Default_1' has a wrong offset!");

// Function UMG_StagingTimerText.UMG_StagingTimerText_C.Team State Changed
// 0x0010 (0x0010 - 0x0000)
struct UMG_StagingTimerText_C_Team_State_Changed final
{
public:
	class ASQTeamState*                           OldTeam;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           NewTeam;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_StagingTimerText_C_Team_State_Changed) == 0x000008, "Wrong alignment on UMG_StagingTimerText_C_Team_State_Changed");
static_assert(sizeof(UMG_StagingTimerText_C_Team_State_Changed) == 0x000010, "Wrong size on UMG_StagingTimerText_C_Team_State_Changed");
static_assert(offsetof(UMG_StagingTimerText_C_Team_State_Changed, OldTeam) == 0x000000, "Member 'UMG_StagingTimerText_C_Team_State_Changed::OldTeam' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_Team_State_Changed, NewTeam) == 0x000008, "Member 'UMG_StagingTimerText_C_Team_State_Changed::NewTeam' has a wrong offset!");

// Function UMG_StagingTimerText.UMG_StagingTimerText_C.HasVehicleStagging
// 0x0028 (0x0028 - 0x0000)
struct UMG_StagingTimerText_C_HasVehicleStagging final
{
public:
	bool                                          ShouldShowStagging;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalTeamId;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidResult;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A5[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TryGetLocalPlayerTeamId_OutTeamId;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamId_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A6[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQLayerTeamConfig_C*                CallFunc_TryGetTeamLayerConfig_OutTeamConfig;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetTeamLayerConfig_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_StagingTimerText_C_HasVehicleStagging) == 0x000008, "Wrong alignment on UMG_StagingTimerText_C_HasVehicleStagging");
static_assert(sizeof(UMG_StagingTimerText_C_HasVehicleStagging) == 0x000028, "Wrong size on UMG_StagingTimerText_C_HasVehicleStagging");
static_assert(offsetof(UMG_StagingTimerText_C_HasVehicleStagging, ShouldShowStagging) == 0x000000, "Member 'UMG_StagingTimerText_C_HasVehicleStagging::ShouldShowStagging' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasVehicleStagging, LocalTeamId) == 0x000004, "Member 'UMG_StagingTimerText_C_HasVehicleStagging::LocalTeamId' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasVehicleStagging, ValidResult) == 0x000008, "Member 'UMG_StagingTimerText_C_HasVehicleStagging::ValidResult' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasVehicleStagging, CallFunc_TryGetLocalPlayerTeamId_OutTeamId) == 0x00000C, "Member 'UMG_StagingTimerText_C_HasVehicleStagging::CallFunc_TryGetLocalPlayerTeamId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasVehicleStagging, CallFunc_TryGetLocalPlayerTeamId_ReturnValue) == 0x000010, "Member 'UMG_StagingTimerText_C_HasVehicleStagging::CallFunc_TryGetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasVehicleStagging, CallFunc_TryGetTeamLayerConfig_OutTeamConfig) == 0x000018, "Member 'UMG_StagingTimerText_C_HasVehicleStagging::CallFunc_TryGetTeamLayerConfig_OutTeamConfig' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasVehicleStagging, CallFunc_TryGetTeamLayerConfig_ReturnValue) == 0x000020, "Member 'UMG_StagingTimerText_C_HasVehicleStagging::CallFunc_TryGetTeamLayerConfig_ReturnValue' has a wrong offset!");

// Function UMG_StagingTimerText.UMG_StagingTimerText_C.HasDefenderRush
// 0x0038 (0x0038 - 0x0000)
struct UMG_StagingTimerText_C_HasDefenderRush final
{
public:
	bool                                          HasVehicleStagging;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TeamId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldShowDefenderRush;                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A8[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A9[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AA[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQLayerTeamConfig_C*                CallFunc_TryGetTeamLayerConfig_OutTeamConfig;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetTeamLayerConfig_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_StagingTimerText_C_HasDefenderRush) == 0x000008, "Wrong alignment on UMG_StagingTimerText_C_HasDefenderRush");
static_assert(sizeof(UMG_StagingTimerText_C_HasDefenderRush) == 0x000038, "Wrong size on UMG_StagingTimerText_C_HasDefenderRush");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, HasVehicleStagging) == 0x000000, "Member 'UMG_StagingTimerText_C_HasDefenderRush::HasVehicleStagging' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, TeamId) == 0x000004, "Member 'UMG_StagingTimerText_C_HasDefenderRush::TeamId' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, ShouldShowDefenderRush) == 0x000008, "Member 'UMG_StagingTimerText_C_HasDefenderRush::ShouldShowDefenderRush' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, Temp_int_Variable) == 0x00000C, "Member 'UMG_StagingTimerText_C_HasDefenderRush::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'UMG_StagingTimerText_C_HasDefenderRush::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, Temp_int_Variable_1) == 0x000014, "Member 'UMG_StagingTimerText_C_HasDefenderRush::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, Temp_int_Variable_2) == 0x000018, "Member 'UMG_StagingTimerText_C_HasDefenderRush::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, Temp_int_Variable_3) == 0x00001C, "Member 'UMG_StagingTimerText_C_HasDefenderRush::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, K2Node_Select_Default) == 0x000020, "Member 'UMG_StagingTimerText_C_HasDefenderRush::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, CallFunc_TryGetTeamLayerConfig_OutTeamConfig) == 0x000028, "Member 'UMG_StagingTimerText_C_HasDefenderRush::CallFunc_TryGetTeamLayerConfig_OutTeamConfig' has a wrong offset!");
static_assert(offsetof(UMG_StagingTimerText_C_HasDefenderRush, CallFunc_TryGetTeamLayerConfig_ReturnValue) == 0x000030, "Member 'UMG_StagingTimerText_C_HasDefenderRush::CallFunc_TryGetTeamLayerConfig_ReturnValue' has a wrong offset!");

}


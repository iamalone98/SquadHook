#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnableGhost

#include "Basic.hpp"

#include "BP_SpawnableGhost_classes.hpp"
#include "BP_SpawnableGhost_parameters.hpp"


namespace SDK
{

// Function BP_SpawnableGhost.BP_SpawnableGhost_C.ExecuteUbergraph_BP_SpawnableGhost
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnableGhost_C::ExecuteUbergraph_BP_SpawnableGhost(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "ExecuteUbergraph_BP_SpawnableGhost");

	Params::BP_SpawnableGhost_C_ExecuteUbergraph_BP_SpawnableGhost Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.ConfirmPlacement
// (Event, Public, BlueprintEvent)

void ABP_SpawnableGhost_C::ConfirmPlacement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "ConfirmPlacement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.CameraManDestroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnableGhost_C::CameraManDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "CameraManDestroyed");

	Params::BP_SpawnableGhost_C_CameraManDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SpawnableGhost_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.RotatePreview
// (BlueprintCallable, BlueprintEvent)

void ABP_SpawnableGhost_C::RotatePreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "RotatePreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.InpActEvt_RotateGhostRight_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_SpawnableGhost_C::InpActEvt_RotateGhostRight_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "InpActEvt_RotateGhostRight_K2Node_InputActionEvent_0");

	Params::BP_SpawnableGhost_C_InpActEvt_RotateGhostRight_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.InpActEvt_RotateGhostRight_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_SpawnableGhost_C::InpActEvt_RotateGhostRight_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "InpActEvt_RotateGhostRight_K2Node_InputActionEvent_1");

	Params::BP_SpawnableGhost_C_InpActEvt_RotateGhostRight_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.InpActEvt_RotateGhostLeft_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_SpawnableGhost_C::InpActEvt_RotateGhostLeft_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "InpActEvt_RotateGhostLeft_K2Node_InputActionEvent_2");

	Params::BP_SpawnableGhost_C_InpActEvt_RotateGhostLeft_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.InpActEvt_RotateGhostLeft_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_SpawnableGhost_C::InpActEvt_RotateGhostLeft_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "InpActEvt_RotateGhostLeft_K2Node_InputActionEvent_3");

	Params::BP_SpawnableGhost_C_InpActEvt_RotateGhostLeft_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.IsFullyLoaded
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SpawnableGhost_C::IsFullyLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "IsFullyLoaded");

	Params::BP_SpawnableGhost_C_IsFullyLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.ConfirmRequirements
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SpawnableGhost_C::ConfirmRequirements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "ConfirmRequirements");

	Params::BP_SpawnableGhost_C_ConfirmRequirements Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SpawnableGhost.BP_SpawnableGhost_C.SetUpPreviewMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpawnableGhost_C::SetUpPreviewMaterial(class UMeshComponent* Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpawnableGhost_C", "SetUpPreviewMaterial");

	Params::BP_SpawnableGhost_C_SetUpPreviewMaterial Parms{};

	Parms.Mesh = Mesh;

	UObject::ProcessEvent(Func, &Parms);
}

}


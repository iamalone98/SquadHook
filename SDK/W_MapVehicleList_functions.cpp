#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MapVehicleList

#include "Basic.hpp"

#include "W_MapVehicleList_classes.hpp"
#include "W_MapVehicleList_parameters.hpp"


namespace SDK
{

// Function W_MapVehicleList.W_MapVehicleList_C.ExecuteUbergraph_W_MapVehicleList
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MapVehicleList_C::ExecuteUbergraph_W_MapVehicleList(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "ExecuteUbergraph_W_MapVehicleList");

	Params::W_MapVehicleList_C_ExecuteUbergraph_W_MapVehicleList Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MapVehicleList.W_MapVehicleList_C.UpdateVehicleStatus
// (BlueprintCallable, BlueprintEvent)

void UW_MapVehicleList_C::UpdateVehicleStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "UpdateVehicleStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MapVehicleList.W_MapVehicleList_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_MapVehicleList_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MapVehicleList.W_MapVehicleList_C.Collect Vehicle Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_MapVehicleList_C::Collect_Vehicle_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "Collect Vehicle Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MapVehicleList.W_MapVehicleList_C.Draw Sorted Vehicle Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_MapVehicleList_C::Draw_Sorted_Vehicle_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "Draw Sorted Vehicle Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MapVehicleList.W_MapVehicleList_C.Sort Vics by Cost
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_VehicleListData>       To_Sort                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FS_VehicleListData>       Out_Sorted                                             (Parm, OutParm, ContainsInstancedReference)

void UW_MapVehicleList_C::Sort_Vics_by_Cost(TArray<struct FS_VehicleListData>& To_Sort, TArray<struct FS_VehicleListData>* Out_Sorted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "Sort Vics by Cost");

	Params::W_MapVehicleList_C_Sort_Vics_by_Cost Parms{};

	Parms.To_Sort = std::move(To_Sort);

	UObject::ProcessEvent(Func, &Parms);

	To_Sort = std::move(Parms.To_Sort);

	if (Out_Sorted != nullptr)
		*Out_Sorted = std::move(Parms.Out_Sorted);
}


// Function W_MapVehicleList.W_MapVehicleList_C.Cache KillDeath Ruleset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_MapVehicleList_C::Cache_KillDeath_Ruleset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "Cache KillDeath Ruleset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MapVehicleList.W_MapVehicleList_C.AddVehicleToList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SQAvailability_Vehicle_C*     Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TeamId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFriendly                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_MapVehicleList_C::AddVehicleToList(class UBP_SQAvailability_Vehicle_C* Vehicle, int32 TeamId, bool IsFriendly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "AddVehicleToList");

	Params::W_MapVehicleList_C_AddVehicleToList Parms{};

	Parms.Vehicle = Vehicle;
	Parms.TeamId = TeamId;
	Parms.IsFriendly = IsFriendly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MapVehicleList.W_MapVehicleList_C.ConvertId
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             In_Id                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQAvailability*                  Availability                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Out_Key                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MapVehicleList_C::ConvertId(class FName In_Id, class USQAvailability* Availability, class FName* Out_Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "ConvertId");

	Params::W_MapVehicleList_C_ConvertId Parms{};

	Parms.In_Id = In_Id;
	Parms.Availability = Availability;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Key != nullptr)
		*Out_Key = Parms.Out_Key;
}


// Function W_MapVehicleList.W_MapVehicleList_C.ShouldShowEnemyDetails
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQIntelligence                         Intel                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowDetails                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_MapVehicleList_C::ShouldShowEnemyDetails(ESQIntelligence Intel, bool* ShowDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "ShouldShowEnemyDetails");

	Params::W_MapVehicleList_C_ShouldShowEnemyDetails Parms{};

	Parms.Intel = Intel;

	UObject::ProcessEvent(Func, &Parms);

	if (ShowDetails != nullptr)
		*ShowDetails = Parms.ShowDetails;
}


// Function W_MapVehicleList.W_MapVehicleList_C.SortColumn
// (Public, BlueprintCallable, BlueprintEvent)

void UW_MapVehicleList_C::SortColumn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "SortColumn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MapVehicleList.W_MapVehicleList_C.EnsureMappingsSet
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_MapVehicleList_C::EnsureMappingsSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "EnsureMappingsSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MapVehicleList.W_MapVehicleList_C.GetTicketsForEnemyVehicleKill
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Team_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_SQVehicleSettings_C*          In_Vehicle_Setting                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Tickets                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MapVehicleList_C::GetTicketsForEnemyVehicleKill(int32 Team_ID, class UBP_SQVehicleSettings_C* In_Vehicle_Setting, int32* Tickets) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "GetTicketsForEnemyVehicleKill");

	Params::W_MapVehicleList_C_GetTicketsForEnemyVehicleKill Parms{};

	Parms.Team_ID = Team_ID;
	Parms.In_Vehicle_Setting = In_Vehicle_Setting;

	UObject::ProcessEvent(Func, &Parms);

	if (Tickets != nullptr)
		*Tickets = Parms.Tickets;
}


// Function W_MapVehicleList.W_MapVehicleList_C.GetTicketsForVehicleLoss
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UBP_SQVehicleSettings_C*          In_Vehicle_Setting                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Tickets                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MapVehicleList_C::GetTicketsForVehicleLoss(class UBP_SQVehicleSettings_C* In_Vehicle_Setting, int32* Tickets) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MapVehicleList_C", "GetTicketsForVehicleLoss");

	Params::W_MapVehicleList_C_GetTicketsForVehicleLoss Parms{};

	Parms.In_Vehicle_Setting = In_Vehicle_Setting;

	UObject::ProcessEvent(Func, &Parms);

	if (Tickets != nullptr)
		*Tickets = Parms.Tickets;
}

}


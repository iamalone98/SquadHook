#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ControlledCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ControlledCamera.BP_ControlledCamera_C
// 0x00D8 (0x0300 - 0x0228)
class ABP_ControlledCamera_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Pitch;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Yaw;                                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Desired_Zoom;                                      // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C4[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    My_SQPC;                                           // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Button_Icon;                                       // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_CamControlButton_C*                  Cam_Control_Button;                                // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Active;                                         // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43C5[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Created_Button;                                    // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ExtraSpeed;                                        // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43C6[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Follow_Actor;                                      // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Battery_Percent;                                   // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C7[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Action;                                            // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Possess;                                       // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43C8[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Camera_Widget;                                     // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min_Pitch;                                         // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Pitch;                                         // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_CameraWidget_C*                      W_CameraUI;                                        // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min_Yaw;                                           // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Yaw;                                           // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Zoom_Level;                                        // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cam_Rotate_Speed;                                  // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 Zoom_Levels;                                       // 0x02D8(0x0010)(Edit, BlueprintVisible)
	class USoundBase*                             Open_Sound;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Close_Sound;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NearClipPlaneDistance;                             // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastNearClipPlaneDistance;                         // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void Created_Button__DelegateSignature(class UW_CamControlButton_C* Cam_Button);
	void ExecuteUbergraph_BP_ControlledCamera(int32 EntryPoint);
	void Disable_Cam();
	void K2_OnEndViewTarget(class APlayerController* PC);
	void K2_OnBecomeViewTarget(class APlayerController* PC);
	void Toggle_View(bool Active);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1(float AxisValue);
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0(float AxisValue);
	void InpActEvt_Interact_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_ToggleStabilization_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_Sprint_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_Sprint_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_LeanLeft_K2Node_InputActionEvent_4(const struct FKey& Key);
	void Add_Zoom_Delta();
	void Add_Camera_Movement(float X_Delta, float Y_Delta);
	void Clamp_Camera_Rotation();
	void Update_Zoom();
	void Find_Vehicle(bool* Found_Vehicle);
	void Update_Follow();
	void Create_Stabilisation_Point();
	void Check_Soldier_Wound();
	void Init_Camera();
	void Can_Become_View_Target(bool* Can_View);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ControlledCamera_C">();
	}
	static class ABP_ControlledCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ControlledCamera_C>();
	}
};
static_assert(alignof(ABP_ControlledCamera_C) == 0x000008, "Wrong alignment on ABP_ControlledCamera_C");
static_assert(sizeof(ABP_ControlledCamera_C) == 0x000300, "Wrong size on ABP_ControlledCamera_C");
static_assert(offsetof(ABP_ControlledCamera_C, UberGraphFrame) == 0x000228, "Member 'ABP_ControlledCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Camera) == 0x000230, "Member 'ABP_ControlledCamera_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Scene) == 0x000238, "Member 'ABP_ControlledCamera_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Pitch) == 0x000240, "Member 'ABP_ControlledCamera_C::Pitch' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Yaw) == 0x000248, "Member 'ABP_ControlledCamera_C::Yaw' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Desired_Zoom) == 0x000250, "Member 'ABP_ControlledCamera_C::Desired_Zoom' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, My_SQPC) == 0x000258, "Member 'ABP_ControlledCamera_C::My_SQPC' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Button_Icon) == 0x000260, "Member 'ABP_ControlledCamera_C::Button_Icon' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Cam_Control_Button) == 0x000268, "Member 'ABP_ControlledCamera_C::Cam_Control_Button' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Is_Active) == 0x000270, "Member 'ABP_ControlledCamera_C::Is_Active' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Created_Button) == 0x000278, "Member 'ABP_ControlledCamera_C::Created_Button' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, ExtraSpeed) == 0x000288, "Member 'ABP_ControlledCamera_C::ExtraSpeed' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Follow_Actor) == 0x000290, "Member 'ABP_ControlledCamera_C::Follow_Actor' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Battery_Percent) == 0x000298, "Member 'ABP_ControlledCamera_C::Battery_Percent' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Action) == 0x0002A0, "Member 'ABP_ControlledCamera_C::Action' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Can_Possess) == 0x0002A8, "Member 'ABP_ControlledCamera_C::Can_Possess' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Camera_Widget) == 0x0002B0, "Member 'ABP_ControlledCamera_C::Camera_Widget' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Min_Pitch) == 0x0002B8, "Member 'ABP_ControlledCamera_C::Min_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Max_Pitch) == 0x0002BC, "Member 'ABP_ControlledCamera_C::Max_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, W_CameraUI) == 0x0002C0, "Member 'ABP_ControlledCamera_C::W_CameraUI' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Min_Yaw) == 0x0002C8, "Member 'ABP_ControlledCamera_C::Min_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Max_Yaw) == 0x0002CC, "Member 'ABP_ControlledCamera_C::Max_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Zoom_Level) == 0x0002D0, "Member 'ABP_ControlledCamera_C::Zoom_Level' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Cam_Rotate_Speed) == 0x0002D4, "Member 'ABP_ControlledCamera_C::Cam_Rotate_Speed' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Zoom_Levels) == 0x0002D8, "Member 'ABP_ControlledCamera_C::Zoom_Levels' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Open_Sound) == 0x0002E8, "Member 'ABP_ControlledCamera_C::Open_Sound' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, Close_Sound) == 0x0002F0, "Member 'ABP_ControlledCamera_C::Close_Sound' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, NearClipPlaneDistance) == 0x0002F8, "Member 'ABP_ControlledCamera_C::NearClipPlaneDistance' has a wrong offset!");
static_assert(offsetof(ABP_ControlledCamera_C, LastNearClipPlaneDistance) == 0x0002FC, "Member 'ABP_ControlledCamera_C::LastNearClipPlaneDistance' has a wrong offset!");

}


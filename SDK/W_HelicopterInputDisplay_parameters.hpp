#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HelicopterInputDisplay

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_HelicopterInputDisplay.W_HelicopterInputDisplay_C.ExecuteUbergraph_W_HelicopterInputDisplay
// 0x0070 (0x0070 - 0x0000)
struct W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISQHelicopterInstruments> K2Node_CustomEvent_ParentVehicle;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetYawInput_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA6[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0030(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay) == 0x000008, "Wrong alignment on W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay");
static_assert(sizeof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay) == 0x000070, "Wrong size on W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay");
static_assert(offsetof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay, EntryPoint) == 0x000000, "Member 'W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay, K2Node_CustomEvent_ParentVehicle) == 0x000008, "Member 'W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay::K2Node_CustomEvent_ParentVehicle' has a wrong offset!");
static_assert(offsetof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay, CallFunc_GetYawInput_ReturnValue) == 0x000018, "Member 'W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay::CallFunc_GetYawInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay, CallFunc_MapRangeClamped_ReturnValue) == 0x00001C, "Member 'W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000028, "Member 'W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay, K2Node_Event_MyGeometry) == 0x000030, "Member 'W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay, K2Node_Event_InDeltaTime) == 0x000068, "Member 'W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'W_HelicopterInputDisplay_C_ExecuteUbergraph_W_HelicopterInputDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_HelicopterInputDisplay.W_HelicopterInputDisplay_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_HelicopterInputDisplay_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HelicopterInputDisplay_C_Tick) == 0x000004, "Wrong alignment on W_HelicopterInputDisplay_C_Tick");
static_assert(sizeof(W_HelicopterInputDisplay_C_Tick) == 0x00003C, "Wrong size on W_HelicopterInputDisplay_C_Tick");
static_assert(offsetof(W_HelicopterInputDisplay_C_Tick, MyGeometry) == 0x000000, "Member 'W_HelicopterInputDisplay_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_HelicopterInputDisplay_C_Tick, InDeltaTime) == 0x000038, "Member 'W_HelicopterInputDisplay_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_HelicopterInputDisplay.W_HelicopterInputDisplay_C.InitializeMeter
// 0x0010 (0x0010 - 0x0000)
struct W_HelicopterInputDisplay_C_InitializeMeter final
{
public:
	TScriptInterface<class ISQHelicopterInstruments> ParentVehicle;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_HelicopterInputDisplay_C_InitializeMeter) == 0x000008, "Wrong alignment on W_HelicopterInputDisplay_C_InitializeMeter");
static_assert(sizeof(W_HelicopterInputDisplay_C_InitializeMeter) == 0x000010, "Wrong size on W_HelicopterInputDisplay_C_InitializeMeter");
static_assert(offsetof(W_HelicopterInputDisplay_C_InitializeMeter, ParentVehicle) == 0x000000, "Member 'W_HelicopterInputDisplay_C_InitializeMeter::ParentVehicle' has a wrong offset!");

}


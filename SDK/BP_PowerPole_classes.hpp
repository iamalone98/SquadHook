#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PowerPole

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PowerPole.BP_PowerPole_C
// 0x0030 (0x0258 - 0x0228)
class ABP_PowerPole_C : public AActor
{
public:
	class UStaticCableComponent*                  SQCable3;                                          // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticCableComponent*                  SQCable2;                                          // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticCableComponent*                  SQCable1;                                          // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticCableComponent*                  SQCable;                                           // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PowerPole_C">();
	}
	static class ABP_PowerPole_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PowerPole_C>();
	}
};
static_assert(alignof(ABP_PowerPole_C) == 0x000008, "Wrong alignment on ABP_PowerPole_C");
static_assert(sizeof(ABP_PowerPole_C) == 0x000258, "Wrong size on ABP_PowerPole_C");
static_assert(offsetof(ABP_PowerPole_C, SQCable3) == 0x000228, "Member 'ABP_PowerPole_C::SQCable3' has a wrong offset!");
static_assert(offsetof(ABP_PowerPole_C, SQCable2) == 0x000230, "Member 'ABP_PowerPole_C::SQCable2' has a wrong offset!");
static_assert(offsetof(ABP_PowerPole_C, SQCable1) == 0x000238, "Member 'ABP_PowerPole_C::SQCable1' has a wrong offset!");
static_assert(offsetof(ABP_PowerPole_C, SQCable) == 0x000240, "Member 'ABP_PowerPole_C::SQCable' has a wrong offset!");
static_assert(offsetof(ABP_PowerPole_C, StaticMesh) == 0x000248, "Member 'ABP_PowerPole_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_PowerPole_C, DefaultSceneRoot) == 0x000250, "Member 'ABP_PowerPole_C::DefaultSceneRoot' has a wrong offset!");

}


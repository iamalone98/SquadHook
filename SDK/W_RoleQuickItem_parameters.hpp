#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RoleQuickItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_RoleQuickItem.W_RoleQuickItem_C.ExecuteUbergraph_W_RoleQuickItem
// 0x0020 (0x0020 - 0x0000)
struct W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetFirstRole_Out_Success;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D6E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_TryGetFirstRole_Out_Role_Setting;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetFirstRole_Out_Success_1;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D6F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_TryGetFirstRole_Out_Role_Setting_1;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem) == 0x000008, "Wrong alignment on W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem");
static_assert(sizeof(W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem) == 0x000020, "Wrong size on W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem");
static_assert(offsetof(W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem, EntryPoint) == 0x000000, "Member 'W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem, CallFunc_TryGetFirstRole_Out_Success) == 0x000004, "Member 'W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem::CallFunc_TryGetFirstRole_Out_Success' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem, CallFunc_TryGetFirstRole_Out_Role_Setting) == 0x000008, "Member 'W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem::CallFunc_TryGetFirstRole_Out_Role_Setting' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem, CallFunc_TryGetFirstRole_Out_Success_1) == 0x000010, "Member 'W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem::CallFunc_TryGetFirstRole_Out_Success_1' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem, CallFunc_TryGetFirstRole_Out_Role_Setting_1) == 0x000018, "Member 'W_RoleQuickItem_C_ExecuteUbergraph_W_RoleQuickItem::CallFunc_TryGetFirstRole_Out_Role_Setting_1' has a wrong offset!");

// Function W_RoleQuickItem.W_RoleQuickItem_C.UpdateExpositionQuick
// 0x0048 (0x0048 - 0x0000)
struct W_RoleQuickItem_C_UpdateExpositionQuick final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D70[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAvailable_Out_Is_Available;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelectedRole_Out_Selected;              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Get_State_Color_Out_Color;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleQuickItem_C_UpdateExpositionQuick) == 0x000004, "Wrong alignment on W_RoleQuickItem_C_UpdateExpositionQuick");
static_assert(sizeof(W_RoleQuickItem_C_UpdateExpositionQuick) == 0x000048, "Wrong size on W_RoleQuickItem_C_UpdateExpositionQuick");
static_assert(offsetof(W_RoleQuickItem_C_UpdateExpositionQuick, Temp_bool_Variable) == 0x000000, "Member 'W_RoleQuickItem_C_UpdateExpositionQuick::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_UpdateExpositionQuick, Temp_struct_Variable) == 0x000004, "Member 'W_RoleQuickItem_C_UpdateExpositionQuick::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_UpdateExpositionQuick, Temp_struct_Variable_1) == 0x000014, "Member 'W_RoleQuickItem_C_UpdateExpositionQuick::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_UpdateExpositionQuick, CallFunc_IsAvailable_Out_Is_Available) == 0x000024, "Member 'W_RoleQuickItem_C_UpdateExpositionQuick::CallFunc_IsAvailable_Out_Is_Available' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_UpdateExpositionQuick, CallFunc_IsSelectedRole_Out_Selected) == 0x000025, "Member 'W_RoleQuickItem_C_UpdateExpositionQuick::CallFunc_IsSelectedRole_Out_Selected' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_UpdateExpositionQuick, CallFunc_Not_PreBool_ReturnValue) == 0x000026, "Member 'W_RoleQuickItem_C_UpdateExpositionQuick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_UpdateExpositionQuick, CallFunc_BooleanAND_ReturnValue) == 0x000027, "Member 'W_RoleQuickItem_C_UpdateExpositionQuick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_UpdateExpositionQuick, CallFunc_Get_State_Color_Out_Color) == 0x000028, "Member 'W_RoleQuickItem_C_UpdateExpositionQuick::CallFunc_Get_State_Color_Out_Color' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_UpdateExpositionQuick, K2Node_Select_Default) == 0x000038, "Member 'W_RoleQuickItem_C_UpdateExpositionQuick::K2Node_Select_Default' has a wrong offset!");

// Function W_RoleQuickItem.W_RoleQuickItem_C.GetRoleToolTipWidget
// 0x0128 (0x0128 - 0x0000)
struct W_RoleQuickItem_C_GetRoleToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D71[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0010(0x0018)()
	class FText                                   CallFunc_GetUnavailabilityReason_OutReason;        // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetCountText_Out_CountText;               // 0x00C0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAvailable_Out_Is_Available;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D72[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0110(0x0018)()
};
static_assert(alignof(W_RoleQuickItem_C_GetRoleToolTipWidget) == 0x000008, "Wrong alignment on W_RoleQuickItem_C_GetRoleToolTipWidget");
static_assert(sizeof(W_RoleQuickItem_C_GetRoleToolTipWidget) == 0x000128, "Wrong size on W_RoleQuickItem_C_GetRoleToolTipWidget");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, ReturnValue) == 0x000000, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, Temp_bool_Variable) == 0x000008, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, CallFunc_GetDisplayName_OutDisplayName) == 0x000010, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, CallFunc_GetUnavailabilityReason_OutReason) == 0x000028, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::CallFunc_GetUnavailabilityReason_OutReason' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, CallFunc_GetCountText_Out_CountText) == 0x0000C0, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::CallFunc_GetCountText_Out_CountText' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, K2Node_MakeArray_Array) == 0x0000D8, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, CallFunc_Create_ReturnValue) == 0x000100, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, CallFunc_IsAvailable_Out_Is_Available) == 0x000108, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::CallFunc_IsAvailable_Out_Is_Available' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_GetRoleToolTipWidget, K2Node_Select_Default) == 0x000110, "Member 'W_RoleQuickItem_C_GetRoleToolTipWidget::K2Node_Select_Default' has a wrong offset!");

// Function W_RoleQuickItem.W_RoleQuickItem_C.SetupExpositionQuick
// 0x0028 (0x0028 - 0x0000)
struct W_RoleQuickItem_C_SetupExpositionQuick final
{
public:
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIcon_OutIcon;                          // 0x0000(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(W_RoleQuickItem_C_SetupExpositionQuick) == 0x000008, "Wrong alignment on W_RoleQuickItem_C_SetupExpositionQuick");
static_assert(sizeof(W_RoleQuickItem_C_SetupExpositionQuick) == 0x000028, "Wrong size on W_RoleQuickItem_C_SetupExpositionQuick");
static_assert(offsetof(W_RoleQuickItem_C_SetupExpositionQuick, CallFunc_GetIcon_OutIcon) == 0x000000, "Member 'W_RoleQuickItem_C_SetupExpositionQuick::CallFunc_GetIcon_OutIcon' has a wrong offset!");

// Function W_RoleQuickItem.W_RoleQuickItem_C.IsButtonHovered
// 0x0002 (0x0002 - 0x0000)
struct W_RoleQuickItem_C_IsButtonHovered final
{
public:
	bool                                          Is_Hovered;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleQuickItem_C_IsButtonHovered) == 0x000001, "Wrong alignment on W_RoleQuickItem_C_IsButtonHovered");
static_assert(sizeof(W_RoleQuickItem_C_IsButtonHovered) == 0x000002, "Wrong size on W_RoleQuickItem_C_IsButtonHovered");
static_assert(offsetof(W_RoleQuickItem_C_IsButtonHovered, Is_Hovered) == 0x000000, "Member 'W_RoleQuickItem_C_IsButtonHovered::Is_Hovered' has a wrong offset!");
static_assert(offsetof(W_RoleQuickItem_C_IsButtonHovered, CallFunc_IsHovered_ReturnValue) == 0x000001, "Member 'W_RoleQuickItem_C_IsButtonHovered::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

}


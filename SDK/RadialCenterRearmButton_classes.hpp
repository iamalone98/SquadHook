#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadialCenterRearmButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RadialCenterRearmButton.RadialCenterRearmButton_C
// 0x0108 (0x0550 - 0x0448)
class URadialCenterRearmButton_C final : public USQRadialIconButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BG;                                                // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BPIconImage;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RearmCostTextbox;                                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RearmItemsText;                                    // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ResupplyLitBG;                                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   RearmCostText;                                     // 0x0478(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBaseRadialMenu_C*                      OwnerRadialMenu;                                   // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_RadialItemModel_C*                  RelatedActionModel;                                // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQPawnInventoryComponent*              InventoryComponent;                                // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmmoCostToRearmSelectedWeapons;                    // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC7[0x4];                                     // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ASQEquipableItem*, int32>          WeaponsToRearm;                                    // 0x04B0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             UpdateAmmoRemaining;                               // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         AmmoInSourceRemaining;                             // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC8[0x4];                                     // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISQRearmSource>        RearmSource;                                       // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCachedCanRearmAll;                                // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRearmAllCostCached;                              // 0x0529(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EC9[0x6];                                     // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             InventoryUpdated;                                  // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         CachedCostToRearmAll;                              // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCachedCanRearmSelected;                           // 0x0544(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ECA[0x3];                                     // 0x0545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PreviousRearmCount;                                // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissingRearmItems;                                 // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateAmmoRemaining__DelegateSignature(float AmmoRemaining);
	void InventoryUpdated__DelegateSignature();
	void ExecuteUbergraph_RadialCenterRearmButton(int32 EntryPoint);
	void Destruct();
	void AmmoUpdated();
	void UpdateSelfCanClick();
	void InitializeRearmSourceListener();
	void InventoryAmmoUpdated();
	void SetInventoryComponent(class USQPawnInventoryComponent* Param_InventoryComponent);
	void OnHoverEnd();
	void RearmWeapons();
	void RemoveRearmItems(const class ASQEquipableItem*& WeaponToRemove, float RearmItemCount);
	void AddRearmItems(class ASQEquipableItem* EquippableItem, float RearmItemCount);
	void BPInit();
	void OnHoverBegin();
	class FText GetRearmingItemCountDisplay();
	bool CalculateTotalRearmCost(float* OutCost);
	void UpdateSelectedCost(float MagCost);
	void CreateRearmRequest(TArray<struct FSQRearmWeaponRequest>* RearmRequest);
	void UpdateSourceAmmoRemaining(float AmmoRemaining);
	void CheckIfCanRearm();
	struct FEventReply OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RadialCenterRearmButton_C">();
	}
	static class URadialCenterRearmButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URadialCenterRearmButton_C>();
	}
};
static_assert(alignof(URadialCenterRearmButton_C) == 0x000008, "Wrong alignment on URadialCenterRearmButton_C");
static_assert(sizeof(URadialCenterRearmButton_C) == 0x000550, "Wrong size on URadialCenterRearmButton_C");
static_assert(offsetof(URadialCenterRearmButton_C, UberGraphFrame) == 0x000448, "Member 'URadialCenterRearmButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, BG) == 0x000450, "Member 'URadialCenterRearmButton_C::BG' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, BPIconImage) == 0x000458, "Member 'URadialCenterRearmButton_C::BPIconImage' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, RearmCostTextbox) == 0x000460, "Member 'URadialCenterRearmButton_C::RearmCostTextbox' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, RearmItemsText) == 0x000468, "Member 'URadialCenterRearmButton_C::RearmItemsText' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, ResupplyLitBG) == 0x000470, "Member 'URadialCenterRearmButton_C::ResupplyLitBG' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, RearmCostText) == 0x000478, "Member 'URadialCenterRearmButton_C::RearmCostText' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, OwnerRadialMenu) == 0x000490, "Member 'URadialCenterRearmButton_C::OwnerRadialMenu' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, RelatedActionModel) == 0x000498, "Member 'URadialCenterRearmButton_C::RelatedActionModel' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, InventoryComponent) == 0x0004A0, "Member 'URadialCenterRearmButton_C::InventoryComponent' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, AmmoCostToRearmSelectedWeapons) == 0x0004A8, "Member 'URadialCenterRearmButton_C::AmmoCostToRearmSelectedWeapons' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, WeaponsToRearm) == 0x0004B0, "Member 'URadialCenterRearmButton_C::WeaponsToRearm' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, UpdateAmmoRemaining) == 0x000500, "Member 'URadialCenterRearmButton_C::UpdateAmmoRemaining' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, AmmoInSourceRemaining) == 0x000510, "Member 'URadialCenterRearmButton_C::AmmoInSourceRemaining' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, RearmSource) == 0x000518, "Member 'URadialCenterRearmButton_C::RearmSource' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, bCachedCanRearmAll) == 0x000528, "Member 'URadialCenterRearmButton_C::bCachedCanRearmAll' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, IsRearmAllCostCached) == 0x000529, "Member 'URadialCenterRearmButton_C::IsRearmAllCostCached' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, InventoryUpdated) == 0x000530, "Member 'URadialCenterRearmButton_C::InventoryUpdated' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, CachedCostToRearmAll) == 0x000540, "Member 'URadialCenterRearmButton_C::CachedCostToRearmAll' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, bCachedCanRearmSelected) == 0x000544, "Member 'URadialCenterRearmButton_C::bCachedCanRearmSelected' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, PreviousRearmCount) == 0x000548, "Member 'URadialCenterRearmButton_C::PreviousRearmCount' has a wrong offset!");
static_assert(offsetof(URadialCenterRearmButton_C, MissingRearmItems) == 0x00054C, "Member 'URadialCenterRearmButton_C::MissingRearmItems' has a wrong offset!");

}


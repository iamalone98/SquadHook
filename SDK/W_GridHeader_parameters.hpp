#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GridHeader

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_HeaderDirection_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_GridHeader.W_GridHeader_C.ExecuteUbergraph_W_GridHeader
// 0x0060 (0x0060 - 0x0000)
struct W_GridHeader_C_ExecuteUbergraph_W_GridHeader final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Squad_ID_ID;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD1[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD2[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD3[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_GridButton_C*                        CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD4[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD5[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Fireteam_ID_ID;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader) == 0x000008, "Wrong alignment on W_GridHeader_C_ExecuteUbergraph_W_GridHeader");
static_assert(sizeof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader) == 0x000060, "Wrong size on W_GridHeader_C_ExecuteUbergraph_W_GridHeader");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, EntryPoint) == 0x000000, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Get_Squad_ID_ID) == 0x000004, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Get_Squad_ID_ID' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Create_ReturnValue) == 0x000030, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00003C, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_AddChildToGrid_ReturnValue) == 0x000048, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_ExecuteUbergraph_W_GridHeader, CallFunc_Get_Fireteam_ID_ID) == 0x00005C, "Member 'W_GridHeader_C_ExecuteUbergraph_W_GridHeader::CallFunc_Get_Fireteam_ID_ID' has a wrong offset!");

// Function W_GridHeader.W_GridHeader_C.Set Viewport Position
// 0x0060 (0x0060 - 0x0000)
struct W_GridHeader_C_Set_Viewport_Position final
{
public:
	E_HeaderDirection                             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HeaderDirection                             Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD6[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GridHeader_C_Set_Viewport_Position) == 0x000004, "Wrong alignment on W_GridHeader_C_Set_Viewport_Position");
static_assert(sizeof(W_GridHeader_C_Set_Viewport_Position) == 0x000060, "Wrong size on W_GridHeader_C_Set_Viewport_Position");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, Temp_byte_Variable) == 0x000000, "Member 'W_GridHeader_C_Set_Viewport_Position::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, Temp_byte_Variable_1) == 0x000001, "Member 'W_GridHeader_C_Set_Viewport_Position::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, Temp_struct_Variable) == 0x000004, "Member 'W_GridHeader_C_Set_Viewport_Position::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, Temp_struct_Variable_1) == 0x00000C, "Member 'W_GridHeader_C_Set_Viewport_Position::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, Temp_struct_Variable_2) == 0x000014, "Member 'W_GridHeader_C_Set_Viewport_Position::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, Temp_struct_Variable_3) == 0x00001C, "Member 'W_GridHeader_C_Set_Viewport_Position::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, CallFunc_MakeVector2D_ReturnValue) == 0x000024, "Member 'W_GridHeader_C_Set_Viewport_Position::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, CallFunc_MakeVector2D_ReturnValue_1) == 0x00002C, "Member 'W_GridHeader_C_Set_Viewport_Position::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'W_GridHeader_C_Set_Viewport_Position::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, CallFunc_MakeVector2D_ReturnValue_2) == 0x000038, "Member 'W_GridHeader_C_Set_Viewport_Position::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, K2Node_Select_Default) == 0x000040, "Member 'W_GridHeader_C_Set_Viewport_Position::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, CallFunc_MakeVector2D_ReturnValue_3) == 0x000048, "Member 'W_GridHeader_C_Set_Viewport_Position::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, K2Node_Select_Default_1) == 0x000050, "Member 'W_GridHeader_C_Set_Viewport_Position::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Viewport_Position, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'W_GridHeader_C_Set_Viewport_Position::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function W_GridHeader.W_GridHeader_C.Set Buttons Visibility
// 0x0030 (0x0030 - 0x0000)
struct W_GridHeader_C_Set_Buttons_Visibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD7[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD8[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_GridButton_C*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_GridHeader_C_Set_Buttons_Visibility) == 0x000008, "Wrong alignment on W_GridHeader_C_Set_Buttons_Visibility");
static_assert(sizeof(W_GridHeader_C_Set_Buttons_Visibility) == 0x000030, "Wrong size on W_GridHeader_C_Set_Buttons_Visibility");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, Visible) == 0x000000, "Member 'W_GridHeader_C_Set_Buttons_Visibility::Visible' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, Temp_byte_Variable) == 0x000001, "Member 'W_GridHeader_C_Set_Buttons_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, Temp_byte_Variable_1) == 0x000002, "Member 'W_GridHeader_C_Set_Buttons_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_GridHeader_C_Set_Buttons_Visibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_GridHeader_C_Set_Buttons_Visibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_GridHeader_C_Set_Buttons_Visibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, Temp_bool_Variable) == 0x000010, "Member 'W_GridHeader_C_Set_Buttons_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_GridHeader_C_Set_Buttons_Visibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, K2Node_Select_Default) == 0x000020, "Member 'W_GridHeader_C_Set_Buttons_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'W_GridHeader_C_Set_Buttons_Visibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GridHeader_C_Set_Buttons_Visibility, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'W_GridHeader_C_Set_Buttons_Visibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_GridHeader.W_GridHeader_C.Get Fireteam ID
// 0x0004 (0x0004 - 0x0000)
struct W_GridHeader_C_Get_Fireteam_ID final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GridHeader_C_Get_Fireteam_ID) == 0x000004, "Wrong alignment on W_GridHeader_C_Get_Fireteam_ID");
static_assert(sizeof(W_GridHeader_C_Get_Fireteam_ID) == 0x000004, "Wrong size on W_GridHeader_C_Get_Fireteam_ID");
static_assert(offsetof(W_GridHeader_C_Get_Fireteam_ID, ID) == 0x000000, "Member 'W_GridHeader_C_Get_Fireteam_ID::ID' has a wrong offset!");

// Function W_GridHeader.W_GridHeader_C.Get Squad ID
// 0x0004 (0x0004 - 0x0000)
struct W_GridHeader_C_Get_Squad_ID final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GridHeader_C_Get_Squad_ID) == 0x000004, "Wrong alignment on W_GridHeader_C_Get_Squad_ID");
static_assert(sizeof(W_GridHeader_C_Get_Squad_ID) == 0x000004, "Wrong size on W_GridHeader_C_Get_Squad_ID");
static_assert(offsetof(W_GridHeader_C_Get_Squad_ID, ID) == 0x000000, "Member 'W_GridHeader_C_Get_Squad_ID::ID' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainMenu_Button

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ButtonLineSide_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MainMenu_Button.MainMenu_Button_C
// 0x0200 (0x0460 - 0x0260)
class UMainMenu_Button_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Press;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BottomLine;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxMain;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              IconScaleBox;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftLine;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LineParent;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MyIcon;                                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NewBadge;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightLine;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Bold;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Main;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLine;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Bold;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EHorizontalAlignment                          BoxAlignment;                                      // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EButtonLineSide                               Line_Position;                                     // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Line;                                          // 0x02DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_490D[0x1];                                     // 0x02DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RegularColor;                                      // 0x02DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490E[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLinearColor                           SelectedColor;                                     // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredColor;                                      // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedHoveredColor;                              // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHovered;                                          // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelected;                                         // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsToggle;                                         // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_490F[0x5];                                     // 0x0333(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHover;                                           // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Use_Icon;                                          // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Bold_Text;                                         // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4910[0x6];                                     // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon_Image;                                        // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Icon_Size_Y;                                       // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Icon_Size_X;                                       // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Icon_Color;                                        // 0x0360(0x0028)(Edit, BlueprintVisible)
	class FText                                   Display_Text;                                      // 0x0388(0x0018)(Edit, BlueprintVisible)
	int32                                         Text_Size;                                         // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Text_Padding_Amount;                               // 0x03A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                Button_Padding;                                    // 0x03B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Text_Normal;                                       // 0x03C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Toggle_Normal;                                // 0x03D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Selected;                                     // 0x03E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Hovered;                                      // 0x03F4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Selected_Hovered;                             // 0x0404(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Color;                                        // 0x0414(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Hover_Color;                                  // 0x0424(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Unhover_Color;                                // 0x0434(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4911[0x4];                                     // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDoubleClicked;                                   // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Last_Click_Time;                                   // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewContent;                                       // 0x045C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bDisabled;                                         // 0x045D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void OnClicked__DelegateSignature(bool Param_bSelected, class UMainMenu_Button_C* Param_Button);
	void OnHover__DelegateSignature(bool Param_bHovered);
	void OnDoubleClicked__DelegateSignature();
	void ExecuteUbergraph_MainMenu_Button(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Button_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SetSelected(bool Param_bSelected);
	void UpdateColors();
	void SetText(const class FText& Text);
	struct FLinearColor Bind_LineColor();
	struct FSlateColor Bind_TextColor();
	void Update_Button();
	void Setup_Button();
	void Refresh_Line();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void UpdateNewContentDisplay(bool Param_bNewContent);
	void UpdateIcon();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MainMenu_Button_C">();
	}
	static class UMainMenu_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenu_Button_C>();
	}
};
static_assert(alignof(UMainMenu_Button_C) == 0x000008, "Wrong alignment on UMainMenu_Button_C");
static_assert(sizeof(UMainMenu_Button_C) == 0x000460, "Wrong size on UMainMenu_Button_C");
static_assert(offsetof(UMainMenu_Button_C, UberGraphFrame) == 0x000260, "Member 'UMainMenu_Button_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Press) == 0x000268, "Member 'UMainMenu_Button_C::Press' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, BottomLine) == 0x000270, "Member 'UMainMenu_Button_C::BottomLine' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Button) == 0x000278, "Member 'UMainMenu_Button_C::Button' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, HorizontalBoxMain) == 0x000280, "Member 'UMainMenu_Button_C::HorizontalBoxMain' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, IconScaleBox) == 0x000288, "Member 'UMainMenu_Button_C::IconScaleBox' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, LeftLine) == 0x000290, "Member 'UMainMenu_Button_C::LeftLine' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, LineParent) == 0x000298, "Member 'UMainMenu_Button_C::LineParent' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, MyIcon) == 0x0002A0, "Member 'UMainMenu_Button_C::MyIcon' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, NewBadge) == 0x0002A8, "Member 'UMainMenu_Button_C::NewBadge' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, RightLine) == 0x0002B0, "Member 'UMainMenu_Button_C::RightLine' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, TB_Bold) == 0x0002B8, "Member 'UMainMenu_Button_C::TB_Bold' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, TB_Main) == 0x0002C0, "Member 'UMainMenu_Button_C::TB_Main' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, TopLine) == 0x0002C8, "Member 'UMainMenu_Button_C::TopLine' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, WidgetSwitcher_Bold) == 0x0002D0, "Member 'UMainMenu_Button_C::WidgetSwitcher_Bold' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, BoxAlignment) == 0x0002D8, "Member 'UMainMenu_Button_C::BoxAlignment' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Line_Position) == 0x0002D9, "Member 'UMainMenu_Button_C::Line_Position' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Use_Line) == 0x0002DA, "Member 'UMainMenu_Button_C::Use_Line' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, RegularColor) == 0x0002DC, "Member 'UMainMenu_Button_C::RegularColor' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, OnClicked) == 0x0002F0, "Member 'UMainMenu_Button_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, SelectedColor) == 0x000300, "Member 'UMainMenu_Button_C::SelectedColor' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, HoveredColor) == 0x000310, "Member 'UMainMenu_Button_C::HoveredColor' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, SelectedHoveredColor) == 0x000320, "Member 'UMainMenu_Button_C::SelectedHoveredColor' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, bHovered) == 0x000330, "Member 'UMainMenu_Button_C::bHovered' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, bSelected) == 0x000331, "Member 'UMainMenu_Button_C::bSelected' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, bIsToggle) == 0x000332, "Member 'UMainMenu_Button_C::bIsToggle' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, OnHover) == 0x000338, "Member 'UMainMenu_Button_C::OnHover' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Use_Icon) == 0x000348, "Member 'UMainMenu_Button_C::Use_Icon' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Bold_Text) == 0x000349, "Member 'UMainMenu_Button_C::Bold_Text' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Icon_Image) == 0x000350, "Member 'UMainMenu_Button_C::Icon_Image' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Icon_Size_Y) == 0x000358, "Member 'UMainMenu_Button_C::Icon_Size_Y' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Icon_Size_X) == 0x00035C, "Member 'UMainMenu_Button_C::Icon_Size_X' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Icon_Color) == 0x000360, "Member 'UMainMenu_Button_C::Icon_Color' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Display_Text) == 0x000388, "Member 'UMainMenu_Button_C::Display_Text' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Text_Size) == 0x0003A0, "Member 'UMainMenu_Button_C::Text_Size' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Text_Padding_Amount) == 0x0003A4, "Member 'UMainMenu_Button_C::Text_Padding_Amount' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Button_Padding) == 0x0003B4, "Member 'UMainMenu_Button_C::Button_Padding' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Text_Normal) == 0x0003C4, "Member 'UMainMenu_Button_C::Text_Normal' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Text_Toggle_Normal) == 0x0003D4, "Member 'UMainMenu_Button_C::Text_Toggle_Normal' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Text_Selected) == 0x0003E4, "Member 'UMainMenu_Button_C::Text_Selected' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Text_Hovered) == 0x0003F4, "Member 'UMainMenu_Button_C::Text_Hovered' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Text_Selected_Hovered) == 0x000404, "Member 'UMainMenu_Button_C::Text_Selected_Hovered' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Line_Color) == 0x000414, "Member 'UMainMenu_Button_C::Line_Color' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Line_Hover_Color) == 0x000424, "Member 'UMainMenu_Button_C::Line_Hover_Color' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Line_Unhover_Color) == 0x000434, "Member 'UMainMenu_Button_C::Line_Unhover_Color' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, OnDoubleClicked) == 0x000448, "Member 'UMainMenu_Button_C::OnDoubleClicked' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, Last_Click_Time) == 0x000458, "Member 'UMainMenu_Button_C::Last_Click_Time' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, bNewContent) == 0x00045C, "Member 'UMainMenu_Button_C::bNewContent' has a wrong offset!");
static_assert(offsetof(UMainMenu_Button_C, bDisabled) == 0x00045D, "Member 'UMainMenu_Button_C::bDisabled' has a wrong offset!");

}


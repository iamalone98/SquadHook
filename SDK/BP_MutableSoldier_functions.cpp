#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MutableSoldier

#include "Basic.hpp"

#include "BP_MutableSoldier_classes.hpp"
#include "BP_MutableSoldier_parameters.hpp"


namespace SDK
{

// Function BP_MutableSoldier.BP_MutableSoldier_C.ExecuteUbergraph_BP_MutableSoldier
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MutableSoldier_C::ExecuteUbergraph_BP_MutableSoldier(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "ExecuteUbergraph_BP_MutableSoldier");

	Params::BP_MutableSoldier_C_ExecuteUbergraph_BP_MutableSoldier Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MutableSoldier_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MutableSoldier_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "ReceiveTick");

	Params::BP_MutableSoldier_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.BPOnPawnPossessedEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_MutableSoldier_C::BPOnPawnPossessedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "BPOnPawnPossessedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.ReceivePossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MutableSoldier_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "ReceivePossessed");

	Params::BP_MutableSoldier_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.LeanPunchTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_MutableSoldier_C::LeanPunchTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "LeanPunchTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.OnSuppressionEventDelegate
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRadial                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   AddedSuppressionAmount                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewSupressionLevel                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SuppressionResistance                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ClosenessRatio                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SuppressionSourcePoint                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ProjStartOverlapPoint                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ProjEndOverlapPoint                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class USQSuppressionInfo>   SuppressionInfoClass                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_MutableSoldier_C::OnSuppressionEventDelegate(const bool IsRadial, const float AddedSuppressionAmount, const float NewSupressionLevel, const float SuppressionResistance, const float ClosenessRatio, const struct FVector& SuppressionSourcePoint, const struct FVector& ProjStartOverlapPoint, const struct FVector& ProjEndOverlapPoint, TSubclassOf<class USQSuppressionInfo> SuppressionInfoClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "OnSuppressionEventDelegate");

	Params::BP_MutableSoldier_C_OnSuppressionEventDelegate Parms{};

	Parms.IsRadial = IsRadial;
	Parms.AddedSuppressionAmount = AddedSuppressionAmount;
	Parms.NewSupressionLevel = NewSupressionLevel;
	Parms.SuppressionResistance = SuppressionResistance;
	Parms.ClosenessRatio = ClosenessRatio;
	Parms.SuppressionSourcePoint = std::move(SuppressionSourcePoint);
	Parms.ProjStartOverlapPoint = std::move(ProjStartOverlapPoint);
	Parms.ProjEndOverlapPoint = std::move(ProjEndOverlapPoint);
	Parms.SuppressionInfoClass = SuppressionInfoClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.OnLeanEventDelegate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQSoldierLeanDirection                 NewLeanPosition                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MutableSoldier_C::OnLeanEventDelegate(ESQSoldierLeanDirection NewLeanPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "OnLeanEventDelegate");

	Params::BP_MutableSoldier_C_OnLeanEventDelegate Parms{};

	Parms.NewLeanPosition = NewLeanPosition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.OnAdsEventDelegate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsStateA                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MutableSoldier_C::OnAdsEventDelegate(bool bIsStateA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "OnAdsEventDelegate");

	Params::BP_MutableSoldier_C_OnAdsEventDelegate Parms{};

	Parms.bIsStateA = bIsStateA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.Setup Prototype Suppression
// (BlueprintCallable, BlueprintEvent)

void ABP_MutableSoldier_C::Setup_Prototype_Suppression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "Setup Prototype Suppression");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.OnChangeStanceDelegate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQStance                               NewStance                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MutableSoldier_C::OnChangeStanceDelegate(ESQStance NewStance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "OnChangeStanceDelegate");

	Params::BP_MutableSoldier_C_OnChangeStanceDelegate Parms{};

	Parms.NewStance = NewStance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.OnJumpEventDelegate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQJumpState                            NewJumpState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MutableSoldier_C::OnJumpEventDelegate(ESQJumpState NewJumpState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "OnJumpEventDelegate");

	Params::BP_MutableSoldier_C_OnJumpEventDelegate Parms{};

	Parms.NewJumpState = NewJumpState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.InpActEvt_Subtract_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_MutableSoldier_C::InpActEvt_Subtract_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "InpActEvt_Subtract_K2Node_InputKeyEvent_0");

	Params::BP_MutableSoldier_C_InpActEvt_Subtract_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.InpActEvt_Add_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_MutableSoldier_C::InpActEvt_Add_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "InpActEvt_Add_K2Node_InputKeyEvent_1");

	Params::BP_MutableSoldier_C_InpActEvt_Add_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.InpActEvt_Alt_BackSpace_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_MutableSoldier_C::InpActEvt_Alt_BackSpace_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "InpActEvt_Alt_BackSpace_K2Node_InputKeyEvent_2");

	Params::BP_MutableSoldier_C_InpActEvt_Alt_BackSpace_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MutableSoldier_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.SwitchSuppressionVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SwitchForward                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MutableSoldier_C::SwitchSuppressionVFX(bool SwitchForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "SwitchSuppressionVFX");

	Params::BP_MutableSoldier_C_SwitchSuppressionVFX Parms{};

	Parms.SwitchForward = SwitchForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.AdjustSuppressionLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MutableSoldier_C::AdjustSuppressionLevel(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "AdjustSuppressionLevel");

	Params::BP_MutableSoldier_C_AdjustSuppressionLevel Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.Get Change Stance Punch
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveVector*                     Item_Static_Info_Curve                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveVector*                     Soldier_Curve                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSQGenericPunchInput             Punch                                                  (Parm, OutParm)

void ABP_MutableSoldier_C::Get_Change_Stance_Punch(class UCurveVector* Item_Static_Info_Curve, class UCurveVector* Soldier_Curve, struct FSQGenericPunchInput* Punch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "Get Change Stance Punch");

	Params::BP_MutableSoldier_C_Get_Change_Stance_Punch Parms{};

	Parms.Item_Static_Info_Curve = Item_Static_Info_Curve;
	Parms.Soldier_Curve = Soldier_Curve;

	UObject::ProcessEvent(Func, &Parms);

	if (Punch != nullptr)
		*Punch = std::move(Parms.Punch);
}


// Function BP_MutableSoldier.BP_MutableSoldier_C.SelectChangeStancePunch
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSQGenericPunchInput             WeaponSway                                             (Parm, OutParm)
// struct FSQGenericPunchInput             WeaponAlignment                                        (Parm, OutParm)
// struct FSQGenericPunchInput             CameraRotation                                         (Parm, OutParm)

void ABP_MutableSoldier_C::SelectChangeStancePunch(struct FSQGenericPunchInput* WeaponSway, struct FSQGenericPunchInput* WeaponAlignment, struct FSQGenericPunchInput* CameraRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MutableSoldier_C", "SelectChangeStancePunch");

	Params::BP_MutableSoldier_C_SelectChangeStancePunch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponSway != nullptr)
		*WeaponSway = std::move(Parms.WeaponSway);

	if (WeaponAlignment != nullptr)
		*WeaponAlignment = std::move(Parms.WeaponAlignment);

	if (CameraRotation != nullptr)
		*CameraRotation = std::move(Parms.CameraRotation);
}

}


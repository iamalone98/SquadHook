#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mortarround4

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Mortarround4.BP_Mortarround4_C
// 0x0050 (0x0568 - 0x0518)
class ABP_Mortarround4_C : public ASQMortarProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0518(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        DescendingAudio;                                   // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              ReachedNearGroundSound;                            // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseSecondaryExplosion;                            // 0x0538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA9[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 SecondaryExplosionDamageType;                      // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryExplosionBaseDmg;                         // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryExplosionMinDamage;                       // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryExplosionKillZone;                        // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryExplosionInnerRadius;                     // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryExplosionOuterRadius;                     // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryExplosionDamageFalloff;                   // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondaryExplosionDistanceFromImpact;              // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SecondaryOnlyDamageMeshes;                         // 0x0564(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Mortarround4(int32 EntryPoint);
	void BPOnBeginDescending();
	void OnImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BPOnNearGroundDistanceReached();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Mortarround4_C">();
	}
	static class ABP_Mortarround4_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Mortarround4_C>();
	}
};
static_assert(alignof(ABP_Mortarround4_C) == 0x000008, "Wrong alignment on ABP_Mortarround4_C");
static_assert(sizeof(ABP_Mortarround4_C) == 0x000568, "Wrong size on ABP_Mortarround4_C");
static_assert(offsetof(ABP_Mortarround4_C, UberGraphFrame) == 0x000518, "Member 'ABP_Mortarround4_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, DescendingAudio) == 0x000520, "Member 'ABP_Mortarround4_C::DescendingAudio' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, SkeletalMesh) == 0x000528, "Member 'ABP_Mortarround4_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, ReachedNearGroundSound) == 0x000530, "Member 'ABP_Mortarround4_C::ReachedNearGroundSound' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, bUseSecondaryExplosion) == 0x000538, "Member 'ABP_Mortarround4_C::bUseSecondaryExplosion' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, SecondaryExplosionDamageType) == 0x000540, "Member 'ABP_Mortarround4_C::SecondaryExplosionDamageType' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, SecondaryExplosionBaseDmg) == 0x000548, "Member 'ABP_Mortarround4_C::SecondaryExplosionBaseDmg' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, SecondaryExplosionMinDamage) == 0x00054C, "Member 'ABP_Mortarround4_C::SecondaryExplosionMinDamage' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, SecondaryExplosionKillZone) == 0x000550, "Member 'ABP_Mortarround4_C::SecondaryExplosionKillZone' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, SecondaryExplosionInnerRadius) == 0x000554, "Member 'ABP_Mortarround4_C::SecondaryExplosionInnerRadius' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, SecondaryExplosionOuterRadius) == 0x000558, "Member 'ABP_Mortarround4_C::SecondaryExplosionOuterRadius' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, SecondaryExplosionDamageFalloff) == 0x00055C, "Member 'ABP_Mortarround4_C::SecondaryExplosionDamageFalloff' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, SecondaryExplosionDistanceFromImpact) == 0x000560, "Member 'ABP_Mortarround4_C::SecondaryExplosionDistanceFromImpact' has a wrong offset!");
static_assert(offsetof(ABP_Mortarround4_C, SecondaryOnlyDamageMeshes) == 0x000564, "Member 'ABP_Mortarround4_C::SecondaryOnlyDamageMeshes' has a wrong offset!");

}


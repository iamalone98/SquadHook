#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_vehicle_repair

#include "Basic.hpp"

#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function BP_vehicle_repair.BP_vehicle_repair_C.ExecuteUbergraph_BP_vehicle_repair
// 0x0020 (0x0020 - 0x0000)
struct BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FE3[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ESQBuildState BuildState)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_team;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQBuildState                                 K2Node_CustomEvent_BuildState;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair) == 0x000004, "Wrong alignment on BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair");
static_assert(sizeof(BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair) == 0x000020, "Wrong size on BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair");
static_assert(offsetof(BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair, EntryPoint) == 0x000000, "Member 'BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair, K2Node_Event_team) == 0x000018, "Member 'BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair::K2Node_Event_team' has a wrong offset!");
static_assert(offsetof(BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair, K2Node_CustomEvent_BuildState) == 0x00001C, "Member 'BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair::K2Node_CustomEvent_BuildState' has a wrong offset!");
static_assert(offsetof(BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001D, "Member 'BP_vehicle_repair_C_ExecuteUbergraph_BP_vehicle_repair::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_vehicle_repair.BP_vehicle_repair_C.OnBuildStateChange_Event
// 0x0001 (0x0001 - 0x0000)
struct BP_vehicle_repair_C_OnBuildStateChange_Event final
{
public:
	ESQBuildState                                 Param_BuildState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_vehicle_repair_C_OnBuildStateChange_Event) == 0x000001, "Wrong alignment on BP_vehicle_repair_C_OnBuildStateChange_Event");
static_assert(sizeof(BP_vehicle_repair_C_OnBuildStateChange_Event) == 0x000001, "Wrong size on BP_vehicle_repair_C_OnBuildStateChange_Event");
static_assert(offsetof(BP_vehicle_repair_C_OnBuildStateChange_Event, Param_BuildState) == 0x000000, "Member 'BP_vehicle_repair_C_OnBuildStateChange_Event::Param_BuildState' has a wrong offset!");

// Function BP_vehicle_repair.BP_vehicle_repair_C.SetTeam
// 0x0004 (0x0004 - 0x0000)
struct BP_vehicle_repair_C_SetTeam final
{
public:
	int32                                         Param_Team;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_vehicle_repair_C_SetTeam) == 0x000004, "Wrong alignment on BP_vehicle_repair_C_SetTeam");
static_assert(sizeof(BP_vehicle_repair_C_SetTeam) == 0x000004, "Wrong size on BP_vehicle_repair_C_SetTeam");
static_assert(offsetof(BP_vehicle_repair_C_SetTeam, Param_Team) == 0x000000, "Member 'BP_vehicle_repair_C_SetTeam::Param_Team' has a wrong offset!");

}


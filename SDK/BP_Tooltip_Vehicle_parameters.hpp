#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tooltip_Vehicle

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Tooltip_Vehicle.BP_Tooltip_Vehicle_C.ExecuteUbergraph_BP_Tooltip_Vehicle
// 0x0020 (0x0020 - 0x0000)
struct BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2E1F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle) == 0x000008, "Wrong alignment on BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle");
static_assert(sizeof(BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle) == 0x000020, "Wrong size on BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle");
static_assert(offsetof(BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle, EntryPoint) == 0x000000, "Member 'BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_Tooltip_Vehicle_C_ExecuteUbergraph_BP_Tooltip_Vehicle::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_Tooltip_Vehicle.BP_Tooltip_Vehicle_C.Get Vehicle
// 0x0028 (0x0028 - 0x0000)
struct BP_Tooltip_Vehicle_C_Get_Vehicle final
{
public:
	class ASQVehicle*                             AsSQVehicle;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E20[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tooltip_Vehicle_C_Get_Vehicle) == 0x000008, "Wrong alignment on BP_Tooltip_Vehicle_C_Get_Vehicle");
static_assert(sizeof(BP_Tooltip_Vehicle_C_Get_Vehicle) == 0x000028, "Wrong size on BP_Tooltip_Vehicle_C_Get_Vehicle");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Get_Vehicle, AsSQVehicle) == 0x000000, "Member 'BP_Tooltip_Vehicle_C_Get_Vehicle::AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Get_Vehicle, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Tooltip_Vehicle_C_Get_Vehicle::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Get_Vehicle, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Tooltip_Vehicle_C_Get_Vehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Get_Vehicle, K2Node_DynamicCast_AsSQVehicle) == 0x000018, "Member 'BP_Tooltip_Vehicle_C_Get_Vehicle::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Get_Vehicle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Tooltip_Vehicle_C_Get_Vehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Tooltip_Vehicle.BP_Tooltip_Vehicle_C.Refresh Seat Info
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Tooltip_Vehicle_C_Refresh_Seat_Info final
{
public:
	float                                         Temp_float_Variable;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E21[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_Get_Vehicle_AsSQVehicle;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVehicleEmpty_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E22[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_Get_Vehicle_AsSQVehicle_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E23[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USQVehicleSeatComponent*>        CallFunc_GetSeats_ReturnValue;                     // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USQVehicleSeatComponent*                CallFunc_GetDriverSeat_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E24[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E25[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E26[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_VehicleSeatListItem_C*             K2Node_DynamicCast_AsUMG_Vehicle_Seat_List_Item;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E27[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_VehicleSeatListItem_C*             K2Node_DynamicCast_AsUMG_Vehicle_Seat_List_Item_1; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E28[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info) == 0x000008, "Wrong alignment on BP_Tooltip_Vehicle_C_Refresh_Seat_Info");
static_assert(sizeof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info) == 0x0000B0, "Wrong size on BP_Tooltip_Vehicle_C_Refresh_Seat_Info");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, Temp_float_Variable) == 0x000000, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_Get_Vehicle_AsSQVehicle) == 0x000008, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_Get_Vehicle_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_IsVehicleEmpty_ReturnValue) == 0x000011, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_IsVehicleEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_Get_Vehicle_AsSQVehicle_1) == 0x000018, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_Get_Vehicle_AsSQVehicle_1' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, Temp_float_Variable_1) == 0x000020, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_GetSeats_ReturnValue) == 0x000028, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_GetSeats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_GetDriverSeat_ReturnValue) == 0x000038, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_GetDriverSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, Temp_bool_Variable) == 0x000040, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_GetChildrenCount_ReturnValue) == 0x000044, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, Temp_int_Variable) == 0x00004C, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, Temp_byte_Variable) == 0x000050, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000060, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000061, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_IsValid_ReturnValue_1) == 0x000062, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, K2Node_Select_Default) == 0x000064, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, K2Node_MakeStruct_Margin) == 0x000068, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_GetChildAt_ReturnValue) == 0x000078, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, K2Node_DynamicCast_AsUMG_Vehicle_Seat_List_Item) == 0x000080, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::K2Node_DynamicCast_AsUMG_Vehicle_Seat_List_Item' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000090, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, K2Node_DynamicCast_AsUMG_Vehicle_Seat_List_Item_1) == 0x000098, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::K2Node_DynamicCast_AsUMG_Vehicle_Seat_List_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A1, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, Temp_byte_Variable_1) == 0x0000A8, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, Temp_bool_Variable_1) == 0x0000A9, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_Vehicle_C_Refresh_Seat_Info, K2Node_Select_Default_1) == 0x0000AA, "Member 'BP_Tooltip_Vehicle_C_Refresh_Seat_Info::K2Node_Select_Default_1' has a wrong offset!");

}


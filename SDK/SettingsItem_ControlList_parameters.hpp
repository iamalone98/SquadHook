#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingsItem_ControlList

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.ExecuteUbergraph_SettingsItem_ControlList
// 0x00F0 (0x00F0 - 0x0000)
struct SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	bool                                          K2Node_ComponentBoundEvent_bHovered_2;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319C[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FKey& InputKey)>  K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bHovered_1;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319D[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_InputKey;                       // 0x0078(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bSelected_2;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319E[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGlowingButton_12_C*                    K2Node_ComponentBoundEvent_Button_2;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bSelected_1;            // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319F[0x5];                                     // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGlowingButton_12_C*                    K2Node_ComponentBoundEvent_Button_1;               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bHovered;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bSelected;              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A0[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGlowingButton_12_C*                    K2Node_ComponentBoundEvent_Button;                 // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_2;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A1[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00C8(0x0028)()
};
static_assert(alignof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList");
static_assert(sizeof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList) == 0x0000F0, "Wrong size on SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, EntryPoint) == 0x000000, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::EntryPoint' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, Temp_bool_Variable) == 0x000004, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_ComponentBoundEvent_bHovered_2) == 0x000058, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_ComponentBoundEvent_bHovered_2' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_ComponentBoundEvent_bHovered_1) == 0x00006C, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_ComponentBoundEvent_bHovered_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, CallFunc_IsHovered_ReturnValue) == 0x00006D, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, CallFunc_IsHovered_ReturnValue_1) == 0x00006E, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, CallFunc_BooleanOR_ReturnValue) == 0x00006F, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_CustomEvent_InputKey) == 0x000078, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_CustomEvent_InputKey' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_ComponentBoundEvent_bSelected_2) == 0x000090, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_ComponentBoundEvent_bSelected_2' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_ComponentBoundEvent_Button_2) == 0x000098, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, CallFunc_Set_Contains_ReturnValue) == 0x0000A0, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_ComponentBoundEvent_bSelected_1) == 0x0000A2, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_ComponentBoundEvent_bSelected_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_ComponentBoundEvent_Button_1) == 0x0000A8, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_ComponentBoundEvent_bHovered) == 0x0000B0, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_ComponentBoundEvent_bHovered' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_ComponentBoundEvent_bSelected) == 0x0000B1, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_ComponentBoundEvent_bSelected' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_ComponentBoundEvent_Button) == 0x0000B8, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, CallFunc_IsHovered_ReturnValue_2) == 0x0000C0, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::CallFunc_IsHovered_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C1, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList, K2Node_Select_Default) == 0x0000C8, "Member 'SettingsItem_ControlList_C_ExecuteUbergraph_SettingsItem_ControlList::K2Node_Select_Default' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGlowingButton_12_C*                    Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(sizeof(SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000010, "Wrong size on SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(offsetof(SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature) == 0x000001, "Wrong alignment on SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature");
static_assert(sizeof(SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature) == 0x000001, "Wrong size on SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature");
static_assert(offsetof(SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature, bHovered) == 0x000000, "Member 'SettingsItem_ControlList_C_BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature::bHovered' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGlowingButton_12_C*                    Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature");
static_assert(sizeof(SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature) == 0x000010, "Wrong size on SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature");
static_assert(offsetof(SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGlowingButton_12_C*                    Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature");
static_assert(sizeof(SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature) == 0x000010, "Wrong size on SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature");
static_assert(offsetof(SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.OnInput_Event_0
// 0x0018 (0x0018 - 0x0000)
struct SettingsItem_ControlList_C_OnInput_Event_0 final
{
public:
	struct FKey                                   InputKey;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SettingsItem_ControlList_C_OnInput_Event_0) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_OnInput_Event_0");
static_assert(sizeof(SettingsItem_ControlList_C_OnInput_Event_0) == 0x000018, "Wrong size on SettingsItem_ControlList_C_OnInput_Event_0");
static_assert(offsetof(SettingsItem_ControlList_C_OnInput_Event_0, InputKey) == 0x000000, "Member 'SettingsItem_ControlList_C_OnInput_Event_0::InputKey' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.BndEvt__NewKey2_K2Node_ComponentBoundEvent_1_OnHover__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_1_OnHover__DelegateSignature final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_1_OnHover__DelegateSignature) == 0x000001, "Wrong alignment on SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_1_OnHover__DelegateSignature");
static_assert(sizeof(SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_1_OnHover__DelegateSignature) == 0x000001, "Wrong size on SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_1_OnHover__DelegateSignature");
static_assert(offsetof(SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_1_OnHover__DelegateSignature, bHovered) == 0x000000, "Member 'SettingsItem_ControlList_C_BndEvt__NewKey2_K2Node_ComponentBoundEvent_1_OnHover__DelegateSignature::bHovered' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.BndEvt__NewKey1_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature) == 0x000001, "Wrong alignment on SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature");
static_assert(sizeof(SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature) == 0x000001, "Wrong size on SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature");
static_assert(offsetof(SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature, bHovered) == 0x000000, "Member 'SettingsItem_ControlList_C_BndEvt__NewKey1_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature::bHovered' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.Init
// 0x00A0 (0x00A0 - 0x0000)
struct SettingsItem_ControlList_C_Init final
{
public:
	const class UControlsWindow_C*                Param_ControlsWindow;                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Param_ActionName;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Param_FriendlyName;                                // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0048(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A5[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0018)()
};
static_assert(alignof(SettingsItem_ControlList_C_Init) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_Init");
static_assert(sizeof(SettingsItem_ControlList_C_Init) == 0x0000A0, "Wrong size on SettingsItem_ControlList_C_Init");
static_assert(offsetof(SettingsItem_ControlList_C_Init, Param_ControlsWindow) == 0x000000, "Member 'SettingsItem_ControlList_C_Init::Param_ControlsWindow' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Init, Param_ActionName) == 0x000008, "Member 'SettingsItem_ControlList_C_Init::Param_ActionName' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Init, Param_FriendlyName) == 0x000010, "Member 'SettingsItem_ControlList_C_Init::Param_FriendlyName' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Init, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'SettingsItem_ControlList_C_Init::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Init, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'SettingsItem_ControlList_C_Init::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Init, CallFunc_MakeLiteralText_ReturnValue) == 0x000048, "Member 'SettingsItem_ControlList_C_Init::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Init, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000060, "Member 'SettingsItem_ControlList_C_Init::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Init, CallFunc_SelectString_ReturnValue) == 0x000068, "Member 'SettingsItem_ControlList_C_Init::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Init, CallFunc_ToUpper_ReturnValue) == 0x000078, "Member 'SettingsItem_ControlList_C_Init::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Init, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'SettingsItem_ControlList_C_Init::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.UpdateKeys
// 0x00C0 (0x00C0 - 0x0000)
struct SettingsItem_ControlList_C_UpdateKeys final
{
public:
	TArray<struct FKey>                           MappedKeysCache;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FText                                   UnboundText;                                       // 0x0010(0x0018)(Edit, BlueprintVisible)
	TArray<class FText>                           FoundKeys;                                         // 0x0028(0x0010)(Edit, BlueprintVisible)
	class USQSettingsSubsystem*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQSettingsSubsystem*                   CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_Array_Get_Item_1;                         // 0x0060(0x0018)(HasGetValueTypeHash)
	class FText                                   CallFunc_TranslateKey_Text;                        // 0x0078(0x0018)()
	class FText                                   CallFunc_TranslateKey_Text_1;                      // 0x0090(0x0018)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A6[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKey>                           CallFunc_GetMappedKeys_Keys;                       // 0x00B0(0x0010)(ReferenceParm)
};
static_assert(alignof(SettingsItem_ControlList_C_UpdateKeys) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_UpdateKeys");
static_assert(sizeof(SettingsItem_ControlList_C_UpdateKeys) == 0x0000C0, "Wrong size on SettingsItem_ControlList_C_UpdateKeys");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, MappedKeysCache) == 0x000000, "Member 'SettingsItem_ControlList_C_UpdateKeys::MappedKeysCache' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, UnboundText) == 0x000010, "Member 'SettingsItem_ControlList_C_UpdateKeys::UnboundText' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, FoundKeys) == 0x000028, "Member 'SettingsItem_ControlList_C_UpdateKeys::FoundKeys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000038, "Member 'SettingsItem_ControlList_C_UpdateKeys::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000040, "Member 'SettingsItem_ControlList_C_UpdateKeys::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, CallFunc_Array_Get_Item) == 0x000048, "Member 'SettingsItem_ControlList_C_UpdateKeys::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'SettingsItem_ControlList_C_UpdateKeys::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, CallFunc_TranslateKey_Text) == 0x000078, "Member 'SettingsItem_ControlList_C_UpdateKeys::CallFunc_TranslateKey_Text' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, CallFunc_TranslateKey_Text_1) == 0x000090, "Member 'SettingsItem_ControlList_C_UpdateKeys::CallFunc_TranslateKey_Text_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A8, "Member 'SettingsItem_ControlList_C_UpdateKeys::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000A9, "Member 'SettingsItem_ControlList_C_UpdateKeys::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_UpdateKeys, CallFunc_GetMappedKeys_Keys) == 0x0000B0, "Member 'SettingsItem_ControlList_C_UpdateKeys::CallFunc_GetMappedKeys_Keys' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.StartInputCapture
// 0x0018 (0x0018 - 0x0000)
struct SettingsItem_ControlList_C_StartInputCapture final
{
public:
	int32                                         KeyId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGlowingButton_12_C*                    K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_StartInputCapture) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_StartInputCapture");
static_assert(sizeof(SettingsItem_ControlList_C_StartInputCapture) == 0x000018, "Wrong size on SettingsItem_ControlList_C_StartInputCapture");
static_assert(offsetof(SettingsItem_ControlList_C_StartInputCapture, KeyId) == 0x000000, "Member 'SettingsItem_ControlList_C_StartInputCapture::KeyId' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_StartInputCapture, Temp_int_Variable) == 0x000004, "Member 'SettingsItem_ControlList_C_StartInputCapture::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_StartInputCapture, K2Node_Select_Default) == 0x000008, "Member 'SettingsItem_ControlList_C_StartInputCapture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_StartInputCapture, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'SettingsItem_ControlList_C_StartInputCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_StartInputCapture, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'SettingsItem_ControlList_C_StartInputCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.FinishInputCapture
// 0x0018 (0x0018 - 0x0000)
struct SettingsItem_ControlList_C_FinishInputCapture final
{
public:
	struct FKey                                   NewKey;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SettingsItem_ControlList_C_FinishInputCapture) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_FinishInputCapture");
static_assert(sizeof(SettingsItem_ControlList_C_FinishInputCapture) == 0x000018, "Wrong size on SettingsItem_ControlList_C_FinishInputCapture");
static_assert(offsetof(SettingsItem_ControlList_C_FinishInputCapture, NewKey) == 0x000000, "Member 'SettingsItem_ControlList_C_FinishInputCapture::NewKey' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.OnInput
// 0x0018 (0x0018 - 0x0000)
struct SettingsItem_ControlList_C_OnInput final
{
public:
	struct FKey                                   InputKey;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SettingsItem_ControlList_C_OnInput) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_OnInput");
static_assert(sizeof(SettingsItem_ControlList_C_OnInput) == 0x000018, "Wrong size on SettingsItem_ControlList_C_OnInput");
static_assert(offsetof(SettingsItem_ControlList_C_OnInput, InputKey) == 0x000000, "Member 'SettingsItem_ControlList_C_OnInput::InputKey' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.OnMouseButtonDown
// 0x0238 (0x0238 - 0x0000)
struct SettingsItem_ControlList_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0218(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_OnMouseButtonDown");
static_assert(sizeof(SettingsItem_ControlList_C_OnMouseButtonDown) == 0x000238, "Wrong size on SettingsItem_ControlList_C_OnMouseButtonDown");
static_assert(offsetof(SettingsItem_ControlList_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'SettingsItem_ControlList_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'SettingsItem_ControlList_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'SettingsItem_ControlList_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'SettingsItem_ControlList_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000218, "Member 'SettingsItem_ControlList_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000230, "Member 'SettingsItem_ControlList_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.RebindActionKey
// 0x0098 (0x0098 - 0x0000)
struct SettingsItem_ControlList_C_RebindActionKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FKey                                   NoneKey;                                           // 0x0018(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IgnoreCase_TextText_ReturnValue; // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A7[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveBackupKeyBinds_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A8[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31A9[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_Select_Default;                             // 0x0078(0x0018)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidKey_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_RebindActionKey) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_RebindActionKey");
static_assert(sizeof(SettingsItem_ControlList_C_RebindActionKey) == 0x000098, "Wrong size on SettingsItem_ControlList_C_RebindActionKey");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, Key) == 0x000000, "Member 'SettingsItem_ControlList_C_RebindActionKey::Key' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, NoneKey) == 0x000018, "Member 'SettingsItem_ControlList_C_RebindActionKey::NoneKey' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000048, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, Temp_bool_Variable) == 0x000050, "Member 'SettingsItem_ControlList_C_RebindActionKey::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_NotEqual_IgnoreCase_TextText_ReturnValue) == 0x000051, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_NotEqual_IgnoreCase_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000052, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_Conv_TextToString_ReturnValue) == 0x000058, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_SaveBackupKeyBinds_ReturnValue) == 0x000068, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_SaveBackupKeyBinds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000072, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, K2Node_Select_Default) == 0x000078, "Member 'SettingsItem_ControlList_C_RebindActionKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_IsValidKey_ReturnValue) == 0x000091, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_IsValidKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindActionKey, CallFunc_BooleanAND_ReturnValue) == 0x000092, "Member 'SettingsItem_ControlList_C_RebindActionKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.RebindAxisKey
// 0x0108 (0x0108 - 0x0000)
struct SettingsItem_ControlList_C_RebindAxisKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          L_Clear_Axis;                                      // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   NoneKey;                                           // 0x0020(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AB[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetKeysMapedToAxis_Keys;                  // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AC[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_BreakInputAxisKeyMapping_ActionName;      // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31AD[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_BreakInputAxisKeyMapping_Key;             // 0x0068(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_BreakInputAxisKeyMapping_Scale;           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidKey_ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AE[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31AF[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_Select_Default;                             // 0x0098(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B0[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping;             // 0x00B8(0x0028)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidKey_ReturnValue_1;                 // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B1[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_Select_Default_2;                           // 0x00E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_RebindAxisKey) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_RebindAxisKey");
static_assert(sizeof(SettingsItem_ControlList_C_RebindAxisKey) == 0x000108, "Wrong size on SettingsItem_ControlList_C_RebindAxisKey");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, Key) == 0x000000, "Member 'SettingsItem_ControlList_C_RebindAxisKey::Key' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, L_Clear_Axis) == 0x000018, "Member 'SettingsItem_ControlList_C_RebindAxisKey::L_Clear_Axis' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, NoneKey) == 0x000020, "Member 'SettingsItem_ControlList_C_RebindAxisKey::NoneKey' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, Temp_float_Variable) == 0x000038, "Member 'SettingsItem_ControlList_C_RebindAxisKey::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, Temp_float_Variable_1) == 0x00003C, "Member 'SettingsItem_ControlList_C_RebindAxisKey::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, Temp_bool_Variable) == 0x000040, "Member 'SettingsItem_ControlList_C_RebindAxisKey::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, Temp_bool_Variable_1) == 0x000041, "Member 'SettingsItem_ControlList_C_RebindAxisKey::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_GetKeysMapedToAxis_Keys) == 0x000048, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_GetKeysMapedToAxis_Keys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000058, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_BreakInputAxisKeyMapping_ActionName) == 0x00005C, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_BreakInputAxisKeyMapping_ActionName' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_BreakInputAxisKeyMapping_Key) == 0x000068, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_BreakInputAxisKeyMapping_Key' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_BreakInputAxisKeyMapping_Scale) == 0x000080, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_BreakInputAxisKeyMapping_Scale' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_IsValidKey_ReturnValue) == 0x000084, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_IsValidKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_GetInputSettings_ReturnValue) == 0x000088, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, Temp_bool_Variable_2) == 0x000090, "Member 'SettingsItem_ControlList_C_RebindAxisKey::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, K2Node_Select_Default) == 0x000098, "Member 'SettingsItem_ControlList_C_RebindAxisKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, K2Node_Select_Default_1) == 0x0000B0, "Member 'SettingsItem_ControlList_C_RebindAxisKey::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, K2Node_MakeStruct_InputAxisKeyMapping) == 0x0000B8, "Member 'SettingsItem_ControlList_C_RebindAxisKey::K2Node_MakeStruct_InputAxisKeyMapping' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0000E0, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_Not_PreBool_ReturnValue) == 0x0000E1, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_IsValidKey_ReturnValue_1) == 0x0000E2, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_IsValidKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_BooleanAND_ReturnValue) == 0x0000E3, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0000E4, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, K2Node_Select_Default_2) == 0x0000E8, "Member 'SettingsItem_ControlList_C_RebindAxisKey::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_RebindAxisKey, CallFunc_IsValid_ReturnValue_1) == 0x000101, "Member 'SettingsItem_ControlList_C_RebindAxisKey::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.Get Axis Map to Edit
// 0x0088 (0x0088 - 0x0000)
struct SettingsItem_ControlList_C_Get_Axis_Map_to_Edit final
{
public:
	struct FInputAxisKeyMapping                   Map;                                               // 0x0000(0x0028)(Parm, OutParm)
	bool                                          Valid;                                             // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B2[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B3[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetKeysMapedToAxis_Keys;                  // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B4[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0058(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_Get_Axis_Map_to_Edit");
static_assert(sizeof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit) == 0x000088, "Wrong size on SettingsItem_ControlList_C_Get_Axis_Map_to_Edit");
static_assert(offsetof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit, Map) == 0x000000, "Member 'SettingsItem_ControlList_C_Get_Axis_Map_to_Edit::Map' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit, Valid) == 0x000028, "Member 'SettingsItem_ControlList_C_Get_Axis_Map_to_Edit::Valid' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'SettingsItem_ControlList_C_Get_Axis_Map_to_Edit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'SettingsItem_ControlList_C_Get_Axis_Map_to_Edit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'SettingsItem_ControlList_C_Get_Axis_Map_to_Edit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'SettingsItem_ControlList_C_Get_Axis_Map_to_Edit::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit, CallFunc_GetKeysMapedToAxis_Keys) == 0x000040, "Member 'SettingsItem_ControlList_C_Get_Axis_Map_to_Edit::CallFunc_GetKeysMapedToAxis_Keys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'SettingsItem_ControlList_C_Get_Axis_Map_to_Edit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit, CallFunc_Array_Get_Item) == 0x000058, "Member 'SettingsItem_ControlList_C_Get_Axis_Map_to_Edit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Get_Axis_Map_to_Edit, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'SettingsItem_ControlList_C_Get_Axis_Map_to_Edit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.Is Action Key Valid
// 0x0020 (0x0020 - 0x0000)
struct SettingsItem_ControlList_C_Is_Action_Key_Valid final
{
public:
	bool                                          Key_Is_Valid;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKey>                           CallFunc_GetMappedActionKeys_Keys;                 // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidKey_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_Is_Action_Key_Valid) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_Is_Action_Key_Valid");
static_assert(sizeof(SettingsItem_ControlList_C_Is_Action_Key_Valid) == 0x000020, "Wrong size on SettingsItem_ControlList_C_Is_Action_Key_Valid");
static_assert(offsetof(SettingsItem_ControlList_C_Is_Action_Key_Valid, Key_Is_Valid) == 0x000000, "Member 'SettingsItem_ControlList_C_Is_Action_Key_Valid::Key_Is_Valid' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Is_Action_Key_Valid, CallFunc_GetMappedActionKeys_Keys) == 0x000008, "Member 'SettingsItem_ControlList_C_Is_Action_Key_Valid::CallFunc_GetMappedActionKeys_Keys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Is_Action_Key_Valid, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'SettingsItem_ControlList_C_Is_Action_Key_Valid::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_Is_Action_Key_Valid, CallFunc_IsValidKey_ReturnValue) == 0x000019, "Member 'SettingsItem_ControlList_C_Is_Action_Key_Valid::CallFunc_IsValidKey_ReturnValue' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.GetMappedActionKeys
// 0x0098 (0x0098 - 0x0000)
struct SettingsItem_ControlList_C_GetMappedActionKeys final
{
public:
	TArray<struct FKey>                           Keys;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FKey>                           RKeys;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B6[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         CallFunc_GetAllKeyMappings_KeyMappings;            // 0x0030(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0040(0x0028)()
	class FName                                   CallFunc_BreakInputActionKeyMapping_ActionName;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_BreakInputActionKeyMapping_Key;           // 0x0070(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BreakInputActionKeyMapping_bShift;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakInputActionKeyMapping_bCtrl;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakInputActionKeyMapping_bAlt;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakInputActionKeyMapping_bCmd;          // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_GetMappedActionKeys) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_GetMappedActionKeys");
static_assert(sizeof(SettingsItem_ControlList_C_GetMappedActionKeys) == 0x000098, "Wrong size on SettingsItem_ControlList_C_GetMappedActionKeys");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, Keys) == 0x000000, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::Keys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, RKeys) == 0x000010, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::RKeys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, Temp_int_Array_Index_Variable) == 0x000020, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_GetAllKeyMappings_KeyMappings) == 0x000030, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_GetAllKeyMappings_KeyMappings' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_Array_Get_Item) == 0x000040, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_BreakInputActionKeyMapping_ActionName) == 0x000068, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_BreakInputActionKeyMapping_ActionName' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_BreakInputActionKeyMapping_Key) == 0x000070, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_BreakInputActionKeyMapping_Key' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_BreakInputActionKeyMapping_bShift) == 0x000088, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_BreakInputActionKeyMapping_bShift' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_BreakInputActionKeyMapping_bCtrl) == 0x000089, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_BreakInputActionKeyMapping_bCtrl' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_BreakInputActionKeyMapping_bAlt) == 0x00008A, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_BreakInputActionKeyMapping_bAlt' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_BreakInputActionKeyMapping_bCmd) == 0x00008B, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_BreakInputActionKeyMapping_bCmd' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_Array_AddUnique_ReturnValue) == 0x000090, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedActionKeys, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000095, "Member 'SettingsItem_ControlList_C_GetMappedActionKeys::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.GetMappedAxisKeys
// 0x00A0 (0x00A0 - 0x0000)
struct SettingsItem_ControlList_C_GetMappedAxisKeys final
{
public:
	TArray<struct FKey>                           Keys;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FKey>                           RKeys;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B7[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetKeysMapedToAxis_Keys;                  // 0x0030(0x0010)(ReferenceParm)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0040(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakInputAxisKeyMapping_ActionName;      // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B8[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_BreakInputAxisKeyMapping_Key;             // 0x0078(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_BreakInputAxisKeyMapping_Scale;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B9[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SettingsItem_ControlList_C_GetMappedAxisKeys) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_GetMappedAxisKeys");
static_assert(sizeof(SettingsItem_ControlList_C_GetMappedAxisKeys) == 0x0000A0, "Wrong size on SettingsItem_ControlList_C_GetMappedAxisKeys");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, Keys) == 0x000000, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::Keys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, RKeys) == 0x000010, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::RKeys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, Temp_int_Array_Index_Variable) == 0x000020, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, CallFunc_GetKeysMapedToAxis_Keys) == 0x000030, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::CallFunc_GetKeysMapedToAxis_Keys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, CallFunc_Array_Get_Item) == 0x000040, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, CallFunc_BreakInputAxisKeyMapping_ActionName) == 0x00006C, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::CallFunc_BreakInputAxisKeyMapping_ActionName' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, CallFunc_BreakInputAxisKeyMapping_Key) == 0x000078, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::CallFunc_BreakInputAxisKeyMapping_Key' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, CallFunc_BreakInputAxisKeyMapping_Scale) == 0x000090, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::CallFunc_BreakInputAxisKeyMapping_Scale' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedAxisKeys, CallFunc_Array_AddUnique_ReturnValue) == 0x000098, "Member 'SettingsItem_ControlList_C_GetMappedAxisKeys::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.TranslateKey
// 0x0090 (0x0090 - 0x0000)
struct SettingsItem_ControlList_C_TranslateKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetKeyDisplayName_OutDisplayName;         // 0x0030(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0048(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0070(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SettingsItem_ControlList_C_TranslateKey) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_TranslateKey");
static_assert(sizeof(SettingsItem_ControlList_C_TranslateKey) == 0x000090, "Wrong size on SettingsItem_ControlList_C_TranslateKey");
static_assert(offsetof(SettingsItem_ControlList_C_TranslateKey, Key) == 0x000000, "Member 'SettingsItem_ControlList_C_TranslateKey::Key' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_TranslateKey, Text) == 0x000018, "Member 'SettingsItem_ControlList_C_TranslateKey::Text' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_TranslateKey, CallFunc_GetKeyDisplayName_OutDisplayName) == 0x000030, "Member 'SettingsItem_ControlList_C_TranslateKey::CallFunc_GetKeyDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_TranslateKey, CallFunc_TextToUpper_ReturnValue) == 0x000048, "Member 'SettingsItem_ControlList_C_TranslateKey::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_TranslateKey, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'SettingsItem_ControlList_C_TranslateKey::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_TranslateKey, CallFunc_Map_Find_Value) == 0x000070, "Member 'SettingsItem_ControlList_C_TranslateKey::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_TranslateKey, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'SettingsItem_ControlList_C_TranslateKey::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function SettingsItem_ControlList.SettingsItem_ControlList_C.GetMappedKeys
// 0x0030 (0x0030 - 0x0000)
struct SettingsItem_ControlList_C_GetMappedKeys final
{
public:
	TArray<struct FKey>                           Keys;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FKey>                           CallFunc_GetMappedAxisKeys_Keys;                   // 0x0010(0x0010)(ReferenceParm)
	TArray<struct FKey>                           CallFunc_GetMappedActionKeys_Keys;                 // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(SettingsItem_ControlList_C_GetMappedKeys) == 0x000008, "Wrong alignment on SettingsItem_ControlList_C_GetMappedKeys");
static_assert(sizeof(SettingsItem_ControlList_C_GetMappedKeys) == 0x000030, "Wrong size on SettingsItem_ControlList_C_GetMappedKeys");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedKeys, Keys) == 0x000000, "Member 'SettingsItem_ControlList_C_GetMappedKeys::Keys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedKeys, CallFunc_GetMappedAxisKeys_Keys) == 0x000010, "Member 'SettingsItem_ControlList_C_GetMappedKeys::CallFunc_GetMappedAxisKeys_Keys' has a wrong offset!");
static_assert(offsetof(SettingsItem_ControlList_C_GetMappedKeys, CallFunc_GetMappedActionKeys_Keys) == 0x000020, "Member 'SettingsItem_ControlList_C_GetMappedKeys::CallFunc_GetMappedActionKeys_Keys' has a wrong offset!");

}


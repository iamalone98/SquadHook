#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_1P_Upper

#include "Basic.hpp"

#include "BP_1P_Upper_classes.hpp"
#include "BP_1P_Upper_parameters.hpp"


namespace SDK
{

// Function BP_1P_Upper.BP_1P_Upper_C.ExecuteUbergraph_BP_1P_Upper
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_1P_Upper_C::ExecuteUbergraph_BP_1P_Upper(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_1P_Upper_C", "ExecuteUbergraph_BP_1P_Upper");

	Params::BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_1P_Upper.BP_1P_Upper_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_1P_Upper_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_1P_Upper_C", "BlueprintUpdateAnimation");

	Params::BP_1P_Upper_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_1P_Upper.BP_1P_Upper_C.OnVaultClimbStop
// (Event, Public, BlueprintEvent)

void UBP_1P_Upper_C::OnVaultClimbStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_1P_Upper_C", "OnVaultClimbStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_1P_Upper.BP_1P_Upper_C.AnimNotify_1PAttachLeftHand
// (BlueprintCallable, BlueprintEvent)

void UBP_1P_Upper_C::AnimNotify_1PAttachLeftHand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_1P_Upper_C", "AnimNotify_1PAttachLeftHand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_1P_Upper.BP_1P_Upper_C.AnimNotify_1PDetachLeftHand
// (BlueprintCallable, BlueprintEvent)

void UBP_1P_Upper_C::AnimNotify_1PDetachLeftHand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_1P_Upper_C", "AnimNotify_1PDetachLeftHand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_1P_Upper.BP_1P_Upper_C.GetLeaningData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_1P_Upper_C::GetLeaningData(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_1P_Upper_C", "GetLeaningData");

	Params::BP_1P_Upper_C_GetLeaningData Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_1P_Upper.BP_1P_Upper_C.Update Clear Sights
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_1P_Upper_C::Update_Clear_Sights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_1P_Upper_C", "Update Clear Sights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_1P_Upper.BP_1P_Upper_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UBP_1P_Upper_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_1P_Upper_C", "AnimGraph");

	Params::BP_1P_Upper_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VoteFactionTeam

#include "Basic.hpp"

#include "Squad_structs.hpp"
#include "SQVoteEntry_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UMG_VoteFactionTeam.UMG_VoteFactionTeam_C.ExecuteUbergraph_UMG_VoteFactionTeam
// 0x0078 (0x0078 - 0x0000)
struct UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A6[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ChoiceID;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_TeamName;                       // 0x0010(0x0018)()
	class FName                                   K2Node_CustomEvent_PlayerName;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVoteSessionClient*                   K2Node_Event_VoteSession_2;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_VotePossible;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A7[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVoteSessionClient*                   K2Node_Event_VoteSession_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerCurrentVoteCount;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A8[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVoteSessionClient*                   K2Node_Event_VoteSession;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQChoice                              K2Node_Event_Winner;                               // 0x0058(0x0018)(NoDestructor)
	bool                                          K2Node_Event_Activated;                            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam) == 0x000008, "Wrong alignment on UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam");
static_assert(sizeof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam) == 0x000078, "Wrong size on UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, EntryPoint) == 0x000000, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, Temp_byte_Variable) == 0x000004, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, Temp_byte_Variable_1) == 0x000005, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_Event_ChoiceID) == 0x000008, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_Event_ChoiceID' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_CustomEvent_TeamName) == 0x000010, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_CustomEvent_TeamName' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_CustomEvent_PlayerName) == 0x000028, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_Event_VoteSession_2) == 0x000030, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_Event_VoteSession_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_Event_VotePossible) == 0x000038, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_Event_VotePossible' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_Event_VoteSession_1) == 0x000040, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_Event_VoteSession_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_Event_PlayerCurrentVoteCount) == 0x000048, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_Event_PlayerCurrentVoteCount' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_Event_VoteSession) == 0x000050, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_Event_VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_Event_Winner) == 0x000058, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_Event_Winner' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_Event_Activated) == 0x000070, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_Event_Activated' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, Temp_bool_Variable) == 0x000071, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam, K2Node_Select_Default) == 0x000072, "Member 'UMG_VoteFactionTeam_C_ExecuteUbergraph_UMG_VoteFactionTeam::K2Node_Select_Default' has a wrong offset!");

// Function UMG_VoteFactionTeam.UMG_VoteFactionTeam_C.SetVoteScreenActive
// 0x0001 (0x0001 - 0x0000)
struct UMG_VoteFactionTeam_C_SetVoteScreenActive final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteFactionTeam_C_SetVoteScreenActive) == 0x000001, "Wrong alignment on UMG_VoteFactionTeam_C_SetVoteScreenActive");
static_assert(sizeof(UMG_VoteFactionTeam_C_SetVoteScreenActive) == 0x000001, "Wrong size on UMG_VoteFactionTeam_C_SetVoteScreenActive");
static_assert(offsetof(UMG_VoteFactionTeam_C_SetVoteScreenActive, Activated) == 0x000000, "Member 'UMG_VoteFactionTeam_C_SetVoteScreenActive::Activated' has a wrong offset!");

// Function UMG_VoteFactionTeam.UMG_VoteFactionTeam_C.OnVoteEnded
// 0x0020 (0x0020 - 0x0000)
struct UMG_VoteFactionTeam_C_OnVoteEnded final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQChoice                              Winner;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(UMG_VoteFactionTeam_C_OnVoteEnded) == 0x000008, "Wrong alignment on UMG_VoteFactionTeam_C_OnVoteEnded");
static_assert(sizeof(UMG_VoteFactionTeam_C_OnVoteEnded) == 0x000020, "Wrong size on UMG_VoteFactionTeam_C_OnVoteEnded");
static_assert(offsetof(UMG_VoteFactionTeam_C_OnVoteEnded, VoteSession) == 0x000000, "Member 'UMG_VoteFactionTeam_C_OnVoteEnded::VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_OnVoteEnded, Winner) == 0x000008, "Member 'UMG_VoteFactionTeam_C_OnVoteEnded::Winner' has a wrong offset!");

// Function UMG_VoteFactionTeam.UMG_VoteFactionTeam_C.OnVoteUpdated
// 0x0010 (0x0010 - 0x0000)
struct UMG_VoteFactionTeam_C_OnVoteUpdated final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerCurrentVoteCount;                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteFactionTeam_C_OnVoteUpdated) == 0x000008, "Wrong alignment on UMG_VoteFactionTeam_C_OnVoteUpdated");
static_assert(sizeof(UMG_VoteFactionTeam_C_OnVoteUpdated) == 0x000010, "Wrong size on UMG_VoteFactionTeam_C_OnVoteUpdated");
static_assert(offsetof(UMG_VoteFactionTeam_C_OnVoteUpdated, VoteSession) == 0x000000, "Member 'UMG_VoteFactionTeam_C_OnVoteUpdated::VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_OnVoteUpdated, PlayerCurrentVoteCount) == 0x000008, "Member 'UMG_VoteFactionTeam_C_OnVoteUpdated::PlayerCurrentVoteCount' has a wrong offset!");

// Function UMG_VoteFactionTeam.UMG_VoteFactionTeam_C.OnVoteStarted
// 0x0010 (0x0010 - 0x0000)
struct UMG_VoteFactionTeam_C_OnVoteStarted final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VotePossible;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteFactionTeam_C_OnVoteStarted) == 0x000008, "Wrong alignment on UMG_VoteFactionTeam_C_OnVoteStarted");
static_assert(sizeof(UMG_VoteFactionTeam_C_OnVoteStarted) == 0x000010, "Wrong size on UMG_VoteFactionTeam_C_OnVoteStarted");
static_assert(offsetof(UMG_VoteFactionTeam_C_OnVoteStarted, VoteSession) == 0x000000, "Member 'UMG_VoteFactionTeam_C_OnVoteStarted::VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_OnVoteStarted, VotePossible) == 0x000008, "Member 'UMG_VoteFactionTeam_C_OnVoteStarted::VotePossible' has a wrong offset!");

// Function UMG_VoteFactionTeam.UMG_VoteFactionTeam_C.OnSetup
// 0x0020 (0x0020 - 0x0000)
struct UMG_VoteFactionTeam_C_OnSetup final
{
public:
	class FText                                   TeamName;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   PlayerName;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteFactionTeam_C_OnSetup) == 0x000008, "Wrong alignment on UMG_VoteFactionTeam_C_OnSetup");
static_assert(sizeof(UMG_VoteFactionTeam_C_OnSetup) == 0x000020, "Wrong size on UMG_VoteFactionTeam_C_OnSetup");
static_assert(offsetof(UMG_VoteFactionTeam_C_OnSetup, TeamName) == 0x000000, "Member 'UMG_VoteFactionTeam_C_OnSetup::TeamName' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_OnSetup, PlayerName) == 0x000018, "Member 'UMG_VoteFactionTeam_C_OnSetup::PlayerName' has a wrong offset!");

// Function UMG_VoteFactionTeam.UMG_VoteFactionTeam_C.OnVoteUpdatedByID
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteFactionTeam_C_OnVoteUpdatedByID final
{
public:
	class FName                                   ChoiceId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteFactionTeam_C_OnVoteUpdatedByID) == 0x000004, "Wrong alignment on UMG_VoteFactionTeam_C_OnVoteUpdatedByID");
static_assert(sizeof(UMG_VoteFactionTeam_C_OnVoteUpdatedByID) == 0x000008, "Wrong size on UMG_VoteFactionTeam_C_OnVoteUpdatedByID");
static_assert(offsetof(UMG_VoteFactionTeam_C_OnVoteUpdatedByID, ChoiceId) == 0x000000, "Member 'UMG_VoteFactionTeam_C_OnVoteUpdatedByID::ChoiceId' has a wrong offset!");

// Function UMG_VoteFactionTeam.UMG_VoteFactionTeam_C.Generate Items
// 0x00B8 (0x00B8 - 0x0000)
struct UMG_VoteFactionTeam_C_Generate_Items final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A9[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQChoice                              CallFunc_Array_Get_Item;                           // 0x0010(0x0018)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQVoteEntry                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41AA[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVotingComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayerIdentifier_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVoteScreenListItem_C*                  CallFunc_SpawnObject_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteFactionTeam_C_Generate_Items) == 0x000008, "Wrong alignment on UMG_VoteFactionTeam_C_Generate_Items");
static_assert(sizeof(UMG_VoteFactionTeam_C_Generate_Items) == 0x0000B8, "Wrong size on UMG_VoteFactionTeam_C_Generate_Items");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, VoteSession) == 0x000000, "Member 'UMG_VoteFactionTeam_C_Generate_Items::VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, Temp_int_Array_Index_Variable) == 0x000008, "Member 'UMG_VoteFactionTeam_C_Generate_Items::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_Array_Get_Item) == 0x000010, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'UMG_VoteFactionTeam_C_Generate_Items::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000088, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_GetOwningPlayer_ReturnValue) == 0x000090, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_GetComponentByClass_ReturnValue) == 0x000098, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_GetPlayerIdentifier_ReturnValue) == 0x0000A0, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_GetPlayerIdentifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_SpawnObject_ReturnValue) == 0x0000A8, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Generate_Items, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'UMG_VoteFactionTeam_C_Generate_Items::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function UMG_VoteFactionTeam.UMG_VoteFactionTeam_C.Update Choices
// 0x0038 (0x0038 - 0x0000)
struct UMG_VoteFactionTeam_C_Update_Choices final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerCurrentVotesCount;                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41AB[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoteScreenListItem_C*                  CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41AC[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteFactionTeam_C_Update_Choices) == 0x000008, "Wrong alignment on UMG_VoteFactionTeam_C_Update_Choices");
static_assert(sizeof(UMG_VoteFactionTeam_C_Update_Choices) == 0x000038, "Wrong size on UMG_VoteFactionTeam_C_Update_Choices");
static_assert(offsetof(UMG_VoteFactionTeam_C_Update_Choices, VoteSession) == 0x000000, "Member 'UMG_VoteFactionTeam_C_Update_Choices::VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Update_Choices, PlayerCurrentVotesCount) == 0x000008, "Member 'UMG_VoteFactionTeam_C_Update_Choices::PlayerCurrentVotesCount' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Update_Choices, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'UMG_VoteFactionTeam_C_Update_Choices::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Update_Choices, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'UMG_VoteFactionTeam_C_Update_Choices::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Update_Choices, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'UMG_VoteFactionTeam_C_Update_Choices::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Update_Choices, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'UMG_VoteFactionTeam_C_Update_Choices::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Update_Choices, CallFunc_Array_Get_Item) == 0x000020, "Member 'UMG_VoteFactionTeam_C_Update_Choices::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Update_Choices, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'UMG_VoteFactionTeam_C_Update_Choices::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Update_Choices, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'UMG_VoteFactionTeam_C_Update_Choices::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Update_Choices, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'UMG_VoteFactionTeam_C_Update_Choices::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_VoteFactionTeam.UMG_VoteFactionTeam_C.Display Result
// 0x0048 (0x0048 - 0x0000)
struct UMG_VoteFactionTeam_C_Display_Result final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQChoice                              Winner;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVoteScreenListItem_C*                  CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41AD[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteFactionTeam_C_Display_Result) == 0x000008, "Wrong alignment on UMG_VoteFactionTeam_C_Display_Result");
static_assert(sizeof(UMG_VoteFactionTeam_C_Display_Result) == 0x000048, "Wrong size on UMG_VoteFactionTeam_C_Display_Result");
static_assert(offsetof(UMG_VoteFactionTeam_C_Display_Result, VoteSession) == 0x000000, "Member 'UMG_VoteFactionTeam_C_Display_Result::VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Display_Result, Winner) == 0x000008, "Member 'UMG_VoteFactionTeam_C_Display_Result::Winner' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Display_Result, Temp_int_Array_Index_Variable) == 0x000020, "Member 'UMG_VoteFactionTeam_C_Display_Result::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Display_Result, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'UMG_VoteFactionTeam_C_Display_Result::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Display_Result, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'UMG_VoteFactionTeam_C_Display_Result::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Display_Result, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'UMG_VoteFactionTeam_C_Display_Result::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Display_Result, CallFunc_Array_Get_Item) == 0x000030, "Member 'UMG_VoteFactionTeam_C_Display_Result::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Display_Result, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'UMG_VoteFactionTeam_C_Display_Result::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Display_Result, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'UMG_VoteFactionTeam_C_Display_Result::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeam_C_Display_Result, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'UMG_VoteFactionTeam_C_Display_Result::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}


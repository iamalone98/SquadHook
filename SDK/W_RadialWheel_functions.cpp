#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RadialWheel

#include "Basic.hpp"

#include "W_RadialWheel_classes.hpp"
#include "W_RadialWheel_parameters.hpp"


namespace SDK
{

// Function W_RadialWheel.W_RadialWheel_C.CenterHoverChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCenterHovered                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_RadialWheel_C::CenterHoverChanged__DelegateSignature(bool bCenterHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "CenterHoverChanged__DelegateSignature");

	Params::W_RadialWheel_C_CenterHoverChanged__DelegateSignature Parms{};

	Parms.bCenterHovered = bCenterHovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RadialWheel.W_RadialWheel_C.ExecuteUbergraph_W_RadialWheel
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RadialWheel_C::ExecuteUbergraph_W_RadialWheel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "ExecuteUbergraph_W_RadialWheel");

	Params::W_RadialWheel_C_ExecuteUbergraph_W_RadialWheel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RadialWheel.W_RadialWheel_C.Reset
// (BlueprintCallable, BlueprintEvent)

void UW_RadialWheel_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RadialWheel.W_RadialWheel_C.Radial Option Released
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RadialWheel_C::Radial_Option_Released(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "Radial Option Released");

	Params::W_RadialWheel_C_Radial_Option_Released Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RadialWheel.W_RadialWheel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_RadialWheel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "PreConstruct");

	Params::W_RadialWheel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RadialWheel.W_RadialWheel_C.FadeAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReverse                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_RadialWheel_C::FadeAnimation(bool bReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "FadeAnimation");

	Params::W_RadialWheel_C_FadeAnimation Parms{};

	Parms.bReverse = bReverse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RadialWheel.W_RadialWheel_C.AddChildWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_RadialEntry_C*                 RadialEntry                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RadialWheel_C::AddChildWidget(class UW_RadialEntry_C* RadialEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "AddChildWidget");

	Params::W_RadialWheel_C_AddChildWidget Parms{};

	Parms.RadialEntry = RadialEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RadialWheel.W_RadialWheel_C.RemoveChildWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_RadialEntry_C*                 Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RadialWheel_C::RemoveChildWidget(const class UW_RadialEntry_C*& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "RemoveChildWidget");

	Params::W_RadialWheel_C_RemoveChildWidget Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RadialWheel.W_RadialWheel_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_RadialWheel_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "OnKeyUp");

	Params::W_RadialWheel_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_RadialWheel.W_RadialWheel_C.CloseSelf
// (Public, BlueprintCallable, BlueprintEvent)

void UW_RadialWheel_C::CloseSelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "CloseSelf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RadialWheel.W_RadialWheel_C.IsMouseInCenterHitbox
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CenterHitbox                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_RadialWheel_C::IsMouseInCenterHitbox(bool* CenterHitbox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "IsMouseInCenterHitbox");

	Params::W_RadialWheel_C_IsMouseInCenterHitbox Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CenterHitbox != nullptr)
		*CenterHitbox = Parms.CenterHitbox;
}


// Function W_RadialWheel.W_RadialWheel_C.ClearMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UW_RadialWheel_C::ClearMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "ClearMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RadialWheel.W_RadialWheel_C.CreateMenuFromModel
// (Public, BlueprintCallable, BlueprintEvent)

void UW_RadialWheel_C::CreateMenuFromModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RadialWheel_C", "CreateMenuFromModel");

	UObject::ProcessEvent(Func, nullptr);
}

}

